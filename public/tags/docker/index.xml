<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on suspiciously datalicious</title>
    <link>/tags/docker/</link>
    <description>Recent content in Docker on suspiciously datalicious</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Alexander Wagner</copyright>
    <lastBuildDate>Sat, 07 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/docker/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Install Docker on Windows</title>
      <link>/post/install-docker-on-windows/</link>
      <pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/install-docker-on-windows/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#overview&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#system-requirements&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; System requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#install-docker&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Install Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#run-docker&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Run Docker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cmd&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; CMD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#powershell&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; Powershell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bash-on-windows&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.3&lt;/span&gt; Bash on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;overview&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Overview&lt;/h1&gt;
&lt;p&gt;This is a quick tutorial how to install Docker on Windows and use it via CMD or Bash on Windows (Linux subsystem for Windows - WSL). It is assumed that the reader has basic knowledge of the Windows command line (CMD) and, if Bash should be used, a basic familiarity with Bash on Ubuntu on Windows. We will demonstrate a basic example to run a docker image.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;system-requirements&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; System requirements&lt;/h1&gt;
&lt;p&gt;For detailed system requirements, see &lt;a href=&#34;https://docs.docker.com/docker-for-windows/install/#what-to-know-before-you-install&#34;&gt;What to know before you install&lt;/a&gt; but main requirements are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hyper-V running/enabled (note that this means that VirtualBox VM images won’t run anymore and there may be other implications for high-precision applications, see details at &lt;a href=&#34;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/about/&#34;&gt;Introduction to Hyper-V on Windows 10&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;64bit Windows 10 Pro/Education/Enterprise (there are people claiming Docker runs on Windows 10 Home but we found this not to be true when trying ourselves as Hyper-V seems only available for Pro, Education and Enterprise versions - 1511 November update, Build 10586 or later), see also official Microsoft page on Hyper-V system requirements at &lt;a href=&#34;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&#34;&gt;Install Hyper-V on Windows 10&lt;/a&gt;. Windows &amp;gt;= 8 may work as well but we haven’t tested it.&lt;/li&gt;
&lt;li&gt;Virtualization must be enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;install-docker&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Install Docker&lt;/h1&gt;
&lt;p&gt;The installation is best performed by using officially provided binary installer from &lt;a href=&#34;https://docs.docker.com/docker-for-windows/install/&#34;&gt;Docker webpage&lt;/a&gt;. We recommend the stable version unless you need latest changes from development version. Once the installation is through (and PC restarted) Docker should be automatically running indicated by its icon showing in the task bar.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/img/2017-10-07-install-docker-on-windows/windows_docker_is_running.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;In case it is not running for you, one reason might be that the automatic enabling of Hyper-V during the Docker installation did not work. Check the official Microsoft page on Hyper-V at &lt;a href=&#34;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&#34;&gt;Install Hyper-V on Windows 10&lt;/a&gt; to see a couple of ways to enable it. Also note that Hyper-V activation and virtualization activation are not the same thing so make sure virtualization is enabled in BIOS, too (usually the case if you used virtual machines before, e.g. via VirtualBox). See how to enable it at &lt;a href=&#34;https://blogs.technet.microsoft.com/canitpro/2015/09/08/step-by-step-enabling-hyper-v-for-use-on-windows-10/&#34;&gt;Step-By-Step: Enabling Hyper-V for use on Windows 10&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/img/2017-10-07-install-docker-on-windows/windows_docker_activate_hyper-v.PNG&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;You can also check Hyper-V status on a detailed level via &lt;code&gt;Powershell&lt;/code&gt; using below (run as admin)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Get-WindowsOptionalFeature -Online -FeatureName *hyper*&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;run-docker&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Run Docker&lt;/h1&gt;
&lt;p&gt;Docker can be run in a few ways, we show it via CMD, Powershell and Bash on Windows. In general, CMD and Powershell usage should be fairly similar but you may require some additional wrangling for Bash. If you used the official Windows binary installer from the Docker webpage, the relevant path/environment variables should already be set and you can start using it right away. As opposed to running Docker on Linux, Windows should not require running the terminal as admin.&lt;/p&gt;
&lt;div id=&#34;cmd&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; CMD&lt;/h2&gt;
&lt;p&gt;Check if Docker works by testing below examples. Note that you require an internet connection in case you have never used below Docker images before (e.g. hello-world) as Docker will automatically download/pull those.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker --version
docker run hello-world&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/img/2017-10-07-install-docker-on-windows/windows_cmd_docker_version.PNG&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/img/2017-10-07-install-docker-on-windows/windows_cmd_docker_hello_world.PNG&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Finally you can run a more demanding example by running a Linux Ubuntu Bash terminal (this may take some time depending on your bandwidth as the complete Ubuntu image is pulled). Note that you are made &lt;code&gt;root&lt;/code&gt; user in the shell.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it ubuntu bash&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/img/2017-10-07-install-docker-on-windows/windows_cmd_docker_run_it_ubuntu_bash.PNG&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;powershell&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; Powershell&lt;/h2&gt;
&lt;p&gt;As CMD, Powershell should work out of the box so we only show the hello-world example here again. Note that the image is not pulled again as we had just used it before in CMD.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run hello-world&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/img/2017-10-07-install-docker-on-windows/windows_ps_docker_hello_world.PNG&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;bash-on-windows&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.3&lt;/span&gt; Bash on Windows&lt;/h2&gt;
&lt;p&gt;In general, Bash on Windows should inherit the &lt;code&gt;PATH&lt;/code&gt; from Windows environment variables and thus work out of the box as well but there are a couple of things to note (&lt;strong&gt;note&lt;/strong&gt; special care when working with WSL config files as outlined in subsection &lt;a href=&#34;https://triamus.github.io/post/install-spark-on-windows/#A%20general%20note%20of%20caution%20for%20Bash%20on%20Windows&#34;&gt;A general note of caution for Bash on Windows&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows binary installer sets &lt;code&gt;PATH&lt;/code&gt; variable as &lt;code&gt;C:\Program Files\Docker\Docker\Resources\bin&lt;/code&gt; although it should actually be &lt;code&gt;C:\Program Files\Docker\Docker\resources\bin&lt;/code&gt;, i.e. lower case &lt;code&gt;r&lt;/code&gt; in &lt;code&gt;resources&lt;/code&gt;. This should generally not be an issue in case-insensitive Windows but may lead to issues in Linux (WSL) although we haven’t encountered any. Still you may want to adjust it.&lt;/li&gt;
&lt;li&gt;We found that you get the error &lt;code&gt;Unable to translate current working directory. Using C:\WINDOWS\system32&lt;/code&gt; when running Docker in WSL in some directories, e.g. home (~), but not when running it in others, e.g. in &lt;code&gt;/mnt/c/Program\ Files/Docker/Docker/resources/bin&lt;/code&gt;. This is apparently expected as some directories have no Windows equivalent, see this &lt;a href=&#34;https://github.com/Microsoft/BashOnWindows/issues/2011&#34;&gt;Github issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Docker on Windows comes as binary, i.e. &lt;code&gt;docker.exe&lt;/code&gt;. To avoid extra typing and confusion you probably want to set an alias e.g. in your &lt;code&gt;.bashrc&lt;/code&gt; file as so &lt;code&gt;alias docker=&amp;quot;docker.exe&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you find Docker not working with an error message like &lt;code&gt;The program &amp;quot;docker&amp;quot; is currently not installed. You can install it by typing: sudo apt-get install docker&lt;/code&gt; it is probably caused by not having set the alias correctly or because Windows does not find Docker in the &lt;code&gt;PATH&lt;/code&gt;. You can try pointing Windows to the Docker install by including it in the &lt;code&gt;PATH&lt;/code&gt; via .bashrc as so &lt;code&gt;PATH=&amp;quot;$PATH:/mnt/c/Program\ Files/Docker/Docker/resources/bin&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finally, we run the same examples as with CMD (we spare you running an Ubuntu image from an Ubuntu system as WSL although it would be possible of course).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker --version
docker run hello-world&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/img/2017-10-07-install-docker-on-windows/windows_bash_docker_version.PNG&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/img/2017-10-07-install-docker-on-windows/windows_bash_docker_hello_world.PNG&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
