<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Science on suspiciously datalicious</title>
    <link>/tags/data-science/</link>
    <description>Recent content in Data Science on suspiciously datalicious</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Alexander Wagner</copyright>
    <lastBuildDate>Mon, 23 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/data-science/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Lending Club Loan Data in R</title>
      <link>/project/lending-club-loan-data-in-r/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/project/lending-club-loan-data-in-r/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#overview&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Overview&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#kaggle-data-description&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; Kaggle Data Description&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#environment-setup&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Environment Setup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#libraries&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#session-info&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; Session Info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-note-on-libraries&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; A note on libraries&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#library-versions&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; Library versions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-import&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Data Import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#meta-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; Meta Data&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#data-transformation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.1&lt;/span&gt; Data Transformation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#additional-meta-data-file&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.2&lt;/span&gt; Additional Meta Data File&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#defining-default&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; Defining default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#removing-variables-deemed-unfit-for-most-modeling&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7&lt;/span&gt; Removing variables deemed unfit for most modeling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-note-on-hypothesis-generation-vs.hypothesis-confirmation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8&lt;/span&gt; A note on hypothesis generation vs. hypothesis confirmation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#exploratory-data-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9&lt;/span&gt; Exploratory Data Analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#grade&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9.1&lt;/span&gt; Grade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#home-ownership&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9.2&lt;/span&gt; Home Ownership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#loan-amount-and-income&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9.3&lt;/span&gt; Loan Amount and Income&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#time-series&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9.4&lt;/span&gt; Time Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#geolocation-plots&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9.5&lt;/span&gt; Geolocation Plots&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#correlation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10&lt;/span&gt; Correlation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#summary-plots&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;11&lt;/span&gt; Summary plots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#modeling&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12&lt;/span&gt; Modeling&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#model-options&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.1&lt;/span&gt; Model options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#imbalanced-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.2&lt;/span&gt; Imbalanced data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-note-on-modeling-libraries&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.3&lt;/span&gt; A note on modeling libraries&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#a-note-on-caret-library-in-particular&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.3.1&lt;/span&gt; A note on caret library in particular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-preparation-for-modeling&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.4&lt;/span&gt; Data preparation for modeling&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#proper-names-for-character-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.4.1&lt;/span&gt; Proper names for character variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dummy-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.4.2&lt;/span&gt; Dummy variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#logistic-regression&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.5&lt;/span&gt; Logistic regression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#model-evaluation-illustration&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.6&lt;/span&gt; Model evaluation illustration&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#roc-curve&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.6.1&lt;/span&gt; ROC curve&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variable-selection&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.7&lt;/span&gt; Variable selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-more-complex-logistic-model-with-caret&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.8&lt;/span&gt; A more complex logistic model with caret&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#traincontrol&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.8.1&lt;/span&gt; trainControl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#train&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.8.2&lt;/span&gt; train&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-note-on-computational-efficiency-parallelization-via-cluster&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.9&lt;/span&gt; A note on computational efficiency (parallelization via cluster)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-note-on-tuning-parameters-in-caret&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.10&lt;/span&gt; A note on tuning parameters in caret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#trees&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.11&lt;/span&gt; Trees&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#simple-tree-using-cart-via-rpart-in-caret&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.11.1&lt;/span&gt; Simple tree using CART via rpart in caret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#random-forest-via-randomforest-in-caret&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.11.2&lt;/span&gt; Random forest via randomForest in caret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stochastic-gradient-boosting-via-gbm-in-caret&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.11.3&lt;/span&gt; Stochastic Gradient Boosting via gbm in caret&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#further-resources&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;13&lt;/span&gt; Further Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;
&lt;div id=&#34;overview&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Overview&lt;/h1&gt;
&lt;p&gt;A case study of machine learning / modeling in R with credit default data. Data is taken from &lt;a href=&#34;https://www.kaggle.com/wendykan/lending-club-loan-data&#34;&gt;Kaggle Lending Club Loan Data&lt;/a&gt; but is also available publicly at &lt;a href=&#34;https://www.lendingclub.com/info/download-data.action&#34;&gt;Lending Club Statistics Page&lt;/a&gt;. We illustrate the complete workflow from data ingestion, over data wrangling/transformation to exploratory data analysis and finally modeling approaches. Along the way will be helpful discussions on side topics such as training strategy, computational efficiency, R intricacies, and more. Note that the focus is more on methods in R rather than statistical rigour. This is meant to be a reference for an end-to-end data science workflow rather than a serious attempt to achieve best model performance.&lt;/p&gt;
&lt;div id=&#34;kaggle-data-description&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; Kaggle Data Description&lt;/h2&gt;
&lt;p&gt;The files contain complete loan data for all loans issued through 2007-2015, including the current loan status (Current, Late, Fully Paid, etc.) and latest payment information. The file containing loan data through the “present” contains complete loan data for all loans issued through the previous completed calendar quarter. Additional features include credit scores, number of finance inquiries, address including zip codes, and state, and collections among others. The file is a matrix of about 890 thousand observations and 75 variables. A data dictionary is provided in a separate file.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;environment-setup&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Environment Setup&lt;/h1&gt;
&lt;div id=&#34;libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; Libraries&lt;/h2&gt;
&lt;p&gt;This will automatically install any missing libraries. Make sure to have proper proxy settings. You do not necessarily need to have all of them but only those needed for respective sections (which will be indicated).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# define used libraries
libraries_used &amp;lt;- 
  c(&amp;quot;lazyeval&amp;quot;, &amp;quot;readr&amp;quot;,&amp;quot;plyr&amp;quot; ,&amp;quot;dplyr&amp;quot;, &amp;quot;readxl&amp;quot;, &amp;quot;ggplot2&amp;quot;, 
    &amp;quot;funModeling&amp;quot;, &amp;quot;scales&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;corrplot&amp;quot;, &amp;quot;GGally&amp;quot;, &amp;quot;caret&amp;quot;,
    &amp;quot;rpart&amp;quot;, &amp;quot;randomForest&amp;quot;, &amp;quot;pROC&amp;quot;, &amp;quot;gbm&amp;quot;, &amp;quot;choroplethr&amp;quot;, &amp;quot;choroplethrMaps&amp;quot;,
    &amp;quot;microbenchmark&amp;quot;, &amp;quot;doParallel&amp;quot;, &amp;quot;e1071&amp;quot;)

# check missing libraries
libraries_missing &amp;lt;- 
  libraries_used[!(libraries_used %in% installed.packages()[,&amp;quot;Package&amp;quot;])]
# install missing libraries
if(length(libraries_missing)) install.packages(libraries_missing)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;session-info&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; Session Info&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.4.1 (2017-06-30)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 15063)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] methods   stats     graphics  grDevices utils     datasets  base     
## 
## loaded via a namespace (and not attached):
##  [1] compiler_3.4.1  backports_1.1.0 bookdown_0.5    magrittr_1.5   
##  [5] rprojroot_1.2   tools_3.4.1     htmltools_0.3.6 yaml_2.1.14    
##  [9] Rcpp_0.12.12    stringi_1.1.5   rmarkdown_1.6   blogdown_0.1   
## [13] knitr_1.17      stringr_1.2.0   digest_0.6.12   evaluate_0.10.1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;a-note-on-libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; A note on libraries&lt;/h1&gt;
&lt;p&gt;There are generally two ways to access functions from R packages (we use package and library interchangeably). Either via a direct access without loading the library, i.e. &lt;code&gt;package::function()&lt;/code&gt; or by loading (attaching) the library into workspace (environment) and thus making all its functions available at once. The problem with the first option is that direct access sometimes can lead to issues (unexpected behavior/errors) and makes coding cumbersome. The problem with the second approach is a conflict of function (and other variables) names between two libraries (called masking). A third complication is that some functions require libraries to be loaded (e.g. some instances of &lt;code&gt;caret::train()&lt;/code&gt;) and thus attach the library without being explicitly told. Again this may lead to masking of functions and if user is unaware this can lead to nasty problems (conceived bugs) down the road (sometimes libraries will issue a warning upon load, e.g. &lt;code&gt;plyr&lt;/code&gt; when &lt;code&gt;dplyr&lt;/code&gt; is already loaded). There is no golden way (at least we are not aware of it) and so we tend to do the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;load major libraries that are used frequently into workspace but pay attention to load succession to avoid unwanted masking&lt;/li&gt;
&lt;li&gt;access rarely used functions directly (being aware that they work and don’t attach anything themselves)&lt;/li&gt;
&lt;li&gt;sometimes use direct access to a fucntion although its library is loaded (either to make clear which library is currently used or because we explicitly need a function that has been masked due to another loaded library)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will load a few essential libraries here as they are used heavily. Other librraies may only be loaded in respective section. You can also try to follow the analysis without loading many librraies at the beginning but only when needed. Just be aware of the succession to avoid issues.&lt;/p&gt;
&lt;div id=&#34;library-versions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; Library versions&lt;/h2&gt;
&lt;p&gt;Also note that often the version of the library used matters (it always matters but what we mean is, it makes a difference) and some libraries are developed more actively than others which may lead to issues. For example, note that library &lt;code&gt;caret&lt;/code&gt; is using &lt;code&gt;plyr&lt;/code&gt; while the &lt;code&gt;tidyverse&lt;/code&gt; of which &lt;code&gt;dplyr&lt;/code&gt; (successor of &lt;code&gt;plyr&lt;/code&gt;) is part has some new concepts, e.g. the default data frame is a &lt;code&gt;tibble::tibble()&lt;/code&gt;. It seems that &lt;code&gt;caret&lt;/code&gt; has issues with &lt;code&gt;tibbles&lt;/code&gt;, see e.g. &lt;a href=&#34;https://stackoverflow.com/questions/43018879/wrong-model-type-for-classification-in-regression-problems-in-r-caret&#34;&gt;“Wrong model type for classification” in regression problems in R-Caret&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(plyr)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading tidyverse: ggplot2
## Loading tidyverse: tibble
## Loading tidyverse: tidyr
## Loading tidyverse: readr
## Loading tidyverse: purrr
## Loading tidyverse: dplyr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Conflicts with tidy packages ----------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## arrange():   dplyr, plyr
## compact():   purrr, plyr
## count():     dplyr, plyr
## failwith():  dplyr, plyr
## filter():    dplyr, stats
## id():        dplyr, plyr
## lag():       dplyr, stats
## mutate():    dplyr, plyr
## rename():    dplyr, plyr
## summarise(): dplyr, plyr
## summarize(): dplyr, plyr&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(caret)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: lattice&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;caret&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:purrr&amp;#39;:
## 
##     lift&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-import&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Data Import&lt;/h1&gt;
&lt;p&gt;Refer to section &lt;a href=&#34;#overview&#34;&gt;Overview&lt;/a&gt; to see how the data may be acquired.&lt;/p&gt;
&lt;p&gt;The loans data can be conveniently read via &lt;code&gt;readr::read_csv()&lt;/code&gt;. Note that the function tries to determine the variable type by reading the first 1,000 rows which does not always guarantee correct import especially in cases of missing values at the begining of the file. Other packages treat imports differently, for example &lt;code&gt;data.table::fread()&lt;/code&gt; takes a sample of 1,000 rows to determine column types (100 rows from 10 different points) which seems to get more robust results than &lt;code&gt;readr::read_csv()&lt;/code&gt;. Both package functions allow the explicit definition of column classes, for &lt;code&gt;readr::read_csv()&lt;/code&gt; it is parameter &lt;code&gt;col_types&lt;/code&gt; and for &lt;code&gt;data.table::fread()&lt;/code&gt; it is parameter &lt;code&gt;colClasses&lt;/code&gt;. Alternatively, &lt;code&gt;readr::read_csv()&lt;/code&gt; offers the parameter &lt;code&gt;guess_max&lt;/code&gt; that allows increasing the number of rows being guessed similar to SAS import procedure parameter &lt;code&gt;guessingrows&lt;/code&gt;. Naturally, import time increases if more rows are guessed. For details on &lt;code&gt;readr&lt;/code&gt; including comparisons against &lt;code&gt;Base R&lt;/code&gt; and &lt;code&gt;data.table::fread()&lt;/code&gt; see &lt;a href=&#34;https://cran.r-project.org/web/packages/readr/README.html&#34;&gt;readr&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path &amp;lt;- &amp;quot;D:/data/lending_club&amp;quot;
loans &amp;lt;- readr::read_csv(paste0(path, &amp;quot;./loan.csv&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The meta data comes in an Excel file and needs to be parsed via a special library, in this case we use &lt;code&gt;readxl&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readxl)
# Load the Excel workbook
excel_file = paste0(&amp;quot;./LendingClubDataDictionary.xlsx&amp;quot;)
# see available tabs
excel_sheets(paste0(path, excel_file))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;LoanStats&amp;quot;   &amp;quot;browseNotes&amp;quot; &amp;quot;RejectStats&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Read in the first worksheet
meta_loan_stats = read_excel(paste0(path, excel_file), sheet = &amp;quot;LoanStats&amp;quot;)
meta_browse_notes = read_excel(paste0(path, excel_file), sheet = &amp;quot;browseNotes&amp;quot;)
meta_reject_stats = read_excel(paste0(path, excel_file), sheet = &amp;quot;RejectStats&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;meta-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; Meta Data&lt;/h1&gt;
&lt;p&gt;Let’s have a look at the meta data in more detail. First, which variables are present in loan data set and what is their type. Then check meta data information and finally compare the two to see if anything is missing.&lt;/p&gt;
&lt;p&gt;The usual approach may be to use &lt;code&gt;base::str()&lt;/code&gt; function to get a summary of the data structure. However, it may be useful to quantify the “information power” of different metrics and dimensions by looking at the ratio of zeros and missing values to overall observations. This will not always reveal the truth (as there may be variables that are only populated if certain conditions apply) but it still gives some indication. The &lt;a href=&#34;https://cran.r-project.org/web/packages/funModeling/index.html&#34;&gt;funModeling&lt;/a&gt; package offers the function &lt;code&gt;funModeling::df_status()&lt;/code&gt; for that. It does not scale very well and has quite a few dependencies (so a direct call is preferred over a full library load) but it suits the purpose for this data. Unfortunately, it does not return the number of rows and columns. The data has 887379 observations (rows) and 74 variables (columns).&lt;/p&gt;
&lt;p&gt;We will require the meta data at a later stage so we assign it to a variable. The function &lt;code&gt;funModeling::df_status()&lt;/code&gt; has parameter &lt;code&gt;print_results = TRUE&lt;/code&gt; set by default which means the data will be assigned and printed at the same time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meta_loans &amp;lt;- funModeling::df_status(loans, print_results = FALSE)
knitr::kable(meta_loans)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;q_zeros&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_zeros&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;q_na&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_na&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;q_inf&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_inf&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;type&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;unique&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;id&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;integer&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;887379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;member_id&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;integer&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;887379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1372&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1372&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;233&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.03&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9856&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;term&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;int_rate&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;542&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;installment&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68711&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;grade&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sub_grade&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;emp_title&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51457&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.80&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;289148&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;emp_length&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;home_ownership&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49384&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;verification_status&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;issue_d&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;103&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_status&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pymnt_plan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;url&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;887379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;desc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;761597&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;85.83&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;124453&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;purpose&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;title&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;151&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;61452&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;zip_code&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;935&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;addr_state&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;451&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;delinq_2yrs&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;716961&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;80.80&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;earliest_cr_line&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;697&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_6mths&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;497905&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56.11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_delinq&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1723&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;454312&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51.20&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;155&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_record&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1283&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.14&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;750326&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;84.56&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;77&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pub_rec&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;751572&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;84.70&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_bal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3402&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.38&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73740&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3540&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.40&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;502&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1356&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_acc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;135&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;initial_list_status&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;255798&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28.83&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;248332&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;255798&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28.83&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;266244&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17759&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;506726&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18037&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.03&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;506616&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_prncp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18145&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.04&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;260227&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_int&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18214&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;324635&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_late_fee&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;874862&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6181&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;recoveries&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;862702&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.22&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23055&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collection_recovery_fee&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;863872&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.35&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20708&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_pymnt_d&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17659&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_pymnt_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17673&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;232451&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;next_pymnt_d&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;252971&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28.51&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_credit_pull_d&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.01&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;103&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collections_12_mths_ex_med&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;875553&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98.67&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;145&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_major_derog&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;665676&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;75.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;168&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;policy_code&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;application_type&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc_joint&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;886868&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99.94&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;308&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti_joint&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;886870&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99.94&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;449&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;verification_status_joint&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;886868&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99.94&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;acc_now_delinq&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;883236&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99.53&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_coll_amt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70276&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10325&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_cur_bal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70276&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;327342&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc_6m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_6m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_24m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_rcnt_il&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866569&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.65&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;201&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_bal_il&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;il_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;868762&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.90&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1272&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_rv_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_rv_24m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;max_bal_bc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10707&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;all_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rev_hi_lim&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70276&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21251&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_fi&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_cu_tl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;866007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It seems the data has two unique identifiers &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;member_id&lt;/code&gt;. There is no variable with 100% missing or zero values i.e. information power of zero. There are a few which have a high ratio of NAs so the meta description needs to be checked whether this is expected. There are also variables which have only one unique value, e.g. &lt;code&gt;policy_code&lt;/code&gt;. Again, the meta description should be checked to see the rationale but such dimensions are not useful for any analysis or model buidling.&lt;/p&gt;
&lt;p&gt;Our meta table also contains the absolute number of unique values which is helpful for plotting (for attributes that is). Another interesting ratio to look at is that of unique values over all values for any attribute. A high ratio would indicate that this is probably a “free” field, i.e. no particular constraints are put on its values (except key variables of course but in case of uniqueness their ratio should be one as is the case with &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;member_id&lt;/code&gt;). When looking into correlations, these high ratio fields will have low correlation with other fields but they may still be useful e.g. because they have “direction” information (e.g. the direction of an effect) or, in the case of strings, may be useful for text analytics. We thus add a respective variable to the meta data. For improved readability, we use the &lt;code&gt;scales::percent()&lt;/code&gt; function to convert output to percent.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meta_loans &amp;lt;-
  meta_loans %&amp;gt;%
  mutate(uniq_rat = unique / nrow(loans))

meta_loans %&amp;gt;%
  select(variable, unique, uniq_rat) %&amp;gt;%
  mutate(unique = unique, uniq_rat = scales::percent(uniq_rat)) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;unique&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;uniq_rat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;id&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;887379&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;100.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;member_id&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;887379&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;100.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1372&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1372&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9856&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;term&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;int_rate&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;542&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;installment&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68711&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;grade&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sub_grade&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;emp_title&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;289148&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;32.6%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;emp_length&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;home_ownership&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49384&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;5.6%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;verification_status&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;issue_d&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;103&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_status&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pymnt_plan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;url&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;887379&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;100.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;desc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;124453&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;14.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;purpose&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;title&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;61452&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;zip_code&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;935&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;addr_state&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4086&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.5%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;delinq_2yrs&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;earliest_cr_line&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;697&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_6mths&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_delinq&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;155&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_record&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;77&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pub_rec&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_bal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73740&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;8.3%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1356&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_acc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;135&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;initial_list_status&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;248332&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;28.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;266244&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;30.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;506726&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;57.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;506616&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;57.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_prncp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;260227&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;29.3%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_int&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;324635&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;36.6%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_late_fee&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6181&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;recoveries&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23055&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.6%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collection_recovery_fee&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20708&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.3%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_pymnt_d&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_pymnt_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;232451&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;26.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;next_pymnt_d&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_credit_pull_d&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;103&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collections_12_mths_ex_med&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_major_derog&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;168&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;policy_code&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;application_type&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc_joint&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;308&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti_joint&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;449&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;verification_status_joint&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;acc_now_delinq&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_coll_amt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10325&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_cur_bal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;327342&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;36.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc_6m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_6m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_24m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_rcnt_il&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;201&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_bal_il&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17030&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;il_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1272&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_rv_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_rv_24m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;max_bal_bc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10707&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;all_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1128&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rev_hi_lim&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21251&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.4%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_fi&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_cu_tl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;An attribute like &lt;code&gt;emp_title&lt;/code&gt; has over 30% unique values which makes it a poor candidate for modeling as it seems borrowers are free to describe their notion of employment title. A sophisticated model, however, may even take advantage of the data by checking the strings for “indicator words” that may be associated with an honest or a dishonest (credible / non-credible) candidate.&lt;/p&gt;
&lt;div id=&#34;data-transformation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.1&lt;/span&gt; Data Transformation&lt;/h2&gt;
&lt;p&gt;We should also check the variable types. As mentioned in section &lt;a href=&#34;#data-import&#34;&gt;Data Import&lt;/a&gt; the import function uses heuristics to guess the data types and these may not always work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;annual_inc_joint = character but should be numeric&lt;/li&gt;
&lt;li&gt;dates are read as character and need to be transformed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First let’s transform character to numeric. We make use of &lt;code&gt;dplyr::mutate_at()&lt;/code&gt; function and provide a vector of columns to be mutated (transformed). In general, when using libraries from the &lt;code&gt;tidyverse&lt;/code&gt; (these libraries are mainly authored by Hadley Wickham and other RStudio people), most functions offer a standard version as opposed to an NSE (non-standard evaluation) version which can take character values as variable names. These functions usually have a trailing underscore, e.g. &lt;code&gt;dplyr::select_()&lt;/code&gt; as compared to the non-standard evaluation function &lt;code&gt;dplyr::select()&lt;/code&gt;. For details, see the dplyr vignette on &lt;a href=&#34;https://cran.r-project.org/web/packages/dplyr/vignettes/nse.html&#34;&gt;Non-standard evaluation&lt;/a&gt;. However, note that the &lt;code&gt;tidyverse&lt;/code&gt; libraries are still changing a fair amount so best to cross-check whether used function is the most efficient one for given task or if there is a new one introduced in the mean time.&lt;/p&gt;
&lt;p&gt;As opposed to packages like &lt;code&gt;data.table&lt;/code&gt; tidyverse packages do not alter their input in place so we have to re-assign the result to the original object. We could also create a new object but this is memory-inefficient (in fact even the re-assignment to the original object creates a temporary copy). For more details on memory management, see chapter &lt;a href=&#34;http://adv-r.had.co.nz/memory.html&#34;&gt;Memory&lt;/a&gt; in Hadley Wickham’s book “Advanced R”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;chr_to_num_vars &amp;lt;- 
  c(&amp;quot;annual_inc_joint&amp;quot;, &amp;quot;mths_since_last_major_derog&amp;quot;, &amp;quot;open_acc_6m&amp;quot;,
    &amp;quot;open_il_6m&amp;quot;, &amp;quot;open_il_12m&amp;quot;, &amp;quot;open_il_24m&amp;quot;, &amp;quot;mths_since_rcnt_il&amp;quot;,
    &amp;quot;total_bal_il&amp;quot;, &amp;quot;il_util&amp;quot;, &amp;quot;open_rv_12m&amp;quot;, &amp;quot;open_rv_24m&amp;quot;,
    &amp;quot;max_bal_bc&amp;quot;, &amp;quot;all_util&amp;quot;, &amp;quot;total_rev_hi_lim&amp;quot;, &amp;quot;total_cu_tl&amp;quot;,
    &amp;quot;inq_last_12m&amp;quot;, &amp;quot;dti_joint&amp;quot;, &amp;quot;inq_fi&amp;quot;, &amp;quot;tot_cur_bal&amp;quot;, &amp;quot;tot_coll_amt&amp;quot;)

loans &amp;lt;-
  loans %&amp;gt;%
  mutate_at(.funs = funs(as.numeric), .vars = chr_to_num_vars)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s have a look at the date variables to see how they need to be transformed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;chr_to_date_vars &amp;lt;- 
  c(&amp;quot;issue_d&amp;quot;, &amp;quot;last_pymnt_d&amp;quot;, &amp;quot;last_credit_pull_d&amp;quot;,
    &amp;quot;next_pymnt_d&amp;quot;, &amp;quot;earliest_cr_line&amp;quot;, &amp;quot;next_pymnt_d&amp;quot;)

loans %&amp;gt;%
  select_(.dots = chr_to_date_vars) %&amp;gt;%
  str()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Classes &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39; and &amp;#39;data.frame&amp;#39;:    887379 obs. of  5 variables:
##  $ issue_d           : chr  &amp;quot;Dec-2011&amp;quot; &amp;quot;Dec-2011&amp;quot; &amp;quot;Dec-2011&amp;quot; &amp;quot;Dec-2011&amp;quot; ...
##  $ last_pymnt_d      : chr  &amp;quot;Jan-2015&amp;quot; &amp;quot;Apr-2013&amp;quot; &amp;quot;Jun-2014&amp;quot; &amp;quot;Jan-2015&amp;quot; ...
##  $ last_credit_pull_d: chr  &amp;quot;Jan-2016&amp;quot; &amp;quot;Sep-2013&amp;quot; &amp;quot;Jan-2016&amp;quot; &amp;quot;Jan-2015&amp;quot; ...
##  $ next_pymnt_d      : chr  NA NA NA NA ...
##  $ earliest_cr_line  : chr  &amp;quot;Jan-1985&amp;quot; &amp;quot;Apr-1999&amp;quot; &amp;quot;Nov-2001&amp;quot; &amp;quot;Feb-1996&amp;quot; ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(unique(loans$next_pymnt_d))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA         &amp;quot;Feb-2016&amp;quot; &amp;quot;Jan-2016&amp;quot; &amp;quot;Sep-2013&amp;quot; &amp;quot;Feb-2014&amp;quot; &amp;quot;May-2014&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in chr_to_date_vars){
  print(head(unique(loans[, i])))
  }&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 1
##    issue_d
##      &amp;lt;chr&amp;gt;
## 1 Dec-2011
## 2 Nov-2011
## 3 Oct-2011
## 4 Sep-2011
## 5 Aug-2011
## 6 Jul-2011
## # A tibble: 6 x 1
##   last_pymnt_d
##          &amp;lt;chr&amp;gt;
## 1     Jan-2015
## 2     Apr-2013
## 3     Jun-2014
## 4     Jan-2016
## 5     Apr-2012
## 6     Nov-2012
## # A tibble: 6 x 1
##   last_credit_pull_d
##                &amp;lt;chr&amp;gt;
## 1           Jan-2016
## 2           Sep-2013
## 3           Jan-2015
## 4           Sep-2015
## 5           Dec-2014
## 6           Aug-2012
## # A tibble: 6 x 1
##   next_pymnt_d
##          &amp;lt;chr&amp;gt;
## 1         &amp;lt;NA&amp;gt;
## 2     Feb-2016
## 3     Jan-2016
## 4     Sep-2013
## 5     Feb-2014
## 6     May-2014
## # A tibble: 6 x 1
##   earliest_cr_line
##              &amp;lt;chr&amp;gt;
## 1         Jan-1985
## 2         Apr-1999
## 3         Nov-2001
## 4         Feb-1996
## 5         Jan-1996
## 6         Nov-2004
## # A tibble: 6 x 1
##   next_pymnt_d
##          &amp;lt;chr&amp;gt;
## 1         &amp;lt;NA&amp;gt;
## 2     Feb-2016
## 3     Jan-2016
## 4     Sep-2013
## 5     Feb-2014
## 6     May-2014&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems the date format is consistent and follows month-year convention. We can use the &lt;code&gt;base::as.Date()&lt;/code&gt; function to convert this to a date format. The function requires a day as well so we simply add the 1st of each month to the existing character string via pasting together strings using &lt;code&gt;base::paste0()&lt;/code&gt;. Note that &lt;code&gt;base::paste0(&amp;quot;bla&amp;quot;, NA)&lt;/code&gt; will not return &lt;code&gt;NA&lt;/code&gt; but the concatenated string (here: &lt;code&gt;blaNA&lt;/code&gt;). Conveniently, &lt;code&gt;base::as.Date()&lt;/code&gt; will return &lt;code&gt;NA&lt;/code&gt; so we can leave it at that. Alternatively, we could include an exception handler for NA values to explicitly handle those because we saw previously that some date variables include NA values. One way to approach that would be to wrap the date conversion function into a &lt;code&gt;base::ifelse()&lt;/code&gt; call as so &lt;code&gt;ifelse(is.na(x), NA, some_date_function()&lt;/code&gt;. However, it seems that &lt;code&gt;base::ifelse()&lt;/code&gt; is dropping the date class that we just created with our date function, for details, see e.g. &lt;a href=&#34;http://stackoverflow.com/questions/6668963/how-to-prevent-ifelse-from-turning-date-objects-into-numeric-objects&#34;&gt;How to prevent ifelse from turning Date objects into numeric objects&lt;/a&gt;. As we do not want to deal with these issues at this moment, we simply go with the default behavior of &lt;code&gt;base::as.Date()&lt;/code&gt; as it returns &lt;code&gt;NA&lt;/code&gt; in cases of bad input anyway.&lt;/p&gt;
&lt;p&gt;Let’s also return the NA values of the input to remind ourselves of the number. It should coincide with the number of NA after we have converted / transformed the date variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meta_loans %&amp;gt;% 
  select(variable, q_na) %&amp;gt;% 
  filter(variable %in% chr_to_date_vars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             variable   q_na
## 1            issue_d      0
## 2   earliest_cr_line     29
## 3       last_pymnt_d  17659
## 4       next_pymnt_d 252971
## 5 last_credit_pull_d     53&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, this is how our custom date conversion function will look like, we call it &lt;code&gt;convert_date()&lt;/code&gt; and it will take the string value to be converted as input. We define the date format by following the function conventions of &lt;code&gt;base::as.Date()&lt;/code&gt;, for details see &lt;code&gt;?base::as.Date&lt;/code&gt;. We could have also used an &lt;a href=&#34;http://adv-r.had.co.nz/Functional-programming.html#anonymous-functions&#34;&gt;anonymous function&lt;/a&gt; directly in the &lt;code&gt;dplyr::mutate_at()&lt;/code&gt; call but the creation of a specific function seemed appropriate as we may use it several times.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;convert_date &amp;lt;- function(x){
  as.Date(paste0(&amp;quot;01-&amp;quot;, x), format = &amp;quot;%d-%b-%Y&amp;quot;)
  } 

loans &amp;lt;-
  loans %&amp;gt;%
  mutate_at(.funs = funs(convert_date), .vars = chr_to_date_vars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;num_vars &amp;lt;- 
  loans %&amp;gt;% 
  sapply(is.numeric) %&amp;gt;% 
  which() %&amp;gt;% 
  names()

meta_loans %&amp;gt;%
  select(variable, p_zeros, p_na, unique) %&amp;gt;%
  filter_(~ variable %in% num_vars) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_zeros&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_na&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;unique&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;id&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;887379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;member_id&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;887379&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1372&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1372&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.03&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9856&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;int_rate&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;542&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;installment&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68711&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49384&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;delinq_2yrs&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;80.80&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_6mths&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56.11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_delinq&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51.20&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;155&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_record&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.14&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;84.56&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;77&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pub_rec&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;84.70&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_bal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.38&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73740&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.40&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1356&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_acc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;135&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28.83&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;248332&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28.83&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;266244&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;506726&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.03&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;506616&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_prncp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.04&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;260227&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_int&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;324635&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_late_fee&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6181&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;recoveries&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.22&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23055&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collection_recovery_fee&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.35&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20708&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_pymnt_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;232451&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collections_12_mths_ex_med&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98.67&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_major_derog&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;75.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;168&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;policy_code&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc_joint&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99.94&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;308&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti_joint&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99.94&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;449&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;acc_now_delinq&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99.53&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_coll_amt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10325&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_cur_bal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;327342&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc_6m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_6m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_24m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_rcnt_il&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.65&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;201&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_bal_il&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;il_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.90&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1272&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_rv_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_rv_24m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;max_bal_bc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10707&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;all_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rev_hi_lim&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21251&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_fi&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_cu_tl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_12m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We also see that variables &lt;code&gt;mths_since_last_delinq&lt;/code&gt;, &lt;code&gt;mths_since_last_record&lt;/code&gt;, &lt;code&gt;mths_since_last_major_derog&lt;/code&gt;, &lt;code&gt;dti_joint&lt;/code&gt; and &lt;code&gt;annual_inc_joint&lt;/code&gt; have a large share of NA values. If we think about this in more detail, it may be reasonable to assume that NA values for the variables &lt;code&gt;mths_since_last_delinq&lt;/code&gt;, &lt;code&gt;mths_since_last_record&lt;/code&gt; and &lt;code&gt;mths_since_last_major_derog&lt;/code&gt; actually indicate that there was no event/record of any missed payment so there cannot be any time value. Analogously, a missing value for &lt;code&gt;annual_inc_joint&lt;/code&gt; and &lt;code&gt;dti_joint&lt;/code&gt; may simply indicate that it is a single borrower or the partner has no income. Thus, the first three variables actually carry valuable information that may be lost if we ignored it. We will thus replace the missing values with zeros to make them available for modeling. It should be noted though that a zero time could indicate an event that is just happening so we have to document our assumptions carefully.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;na_to_zero_vars &amp;lt;-
  c(&amp;quot;mths_since_last_delinq&amp;quot;, &amp;quot;mths_since_last_record&amp;quot;,
    &amp;quot;mths_since_last_major_derog&amp;quot;)

loans &amp;lt;- 
  loans %&amp;gt;%
  mutate_at(.vars = na_to_zero_vars, .funs = funs(replace(., is.na(.), 0)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These transformations should have us covered for now. We recreate the meta table after all these changes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meta_loans &amp;lt;- funModeling::df_status(loans, print_results = FALSE)
meta_loans &amp;lt;-
  meta_loans %&amp;gt;%
  mutate(uniq_rat = unique / nrow(loans))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;additional-meta-data-file&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.2&lt;/span&gt; Additional Meta Data File&lt;/h2&gt;
&lt;p&gt;Next we look at the meta descriptions provided in the additional Excel file.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(meta_loan_stats[,1:2])&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;LoanStatNew&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;acc_now_delinq&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The number of accounts on which the borrower is now delinquent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;acc_open_past_24mths&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of trades opened in past 24 months.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;addr_state&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The state provided by the borrower in the loan application&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;all_util&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Balance to credit limit on all trades&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The self-reported annual income provided by the borrower during registration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc_joint&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The combined self-reported annual income provided by the co-borrowers during registration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;application_type&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Indicates whether the loan is an individual application or a joint application with two co-borrowers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;avg_cur_bal&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Average current balance of all accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bc_open_to_buy&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total open to buy on revolving bankcards.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bc_util&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ratio of total current balance to high credit/credit limit for all bankcard accounts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;chargeoff_within_12_mths&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of charge-offs within 12 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collection_recovery_fee&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;post charge off collection fee&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collections_12_mths_ex_med&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of collections in 12 months excluding medical collections&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;delinq_2yrs&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The number of 30+ days past-due incidences of delinquency in the borrower’s credit file for the past 2 years&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;delinq_amnt&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The past-due amount owed for the accounts on which the borrower is now delinquent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;desc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Loan description provided by the borrower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A ratio calculated using the borrower’s total monthly debt payments on the total debt obligations, excluding mortgage and the requested LC loan, divided by the borrower’s self-reported monthly income.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti_joint&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A ratio calculated using the co-borrowers’ total monthly payments on the total debt obligations, excluding mortgages and the requested LC loan, divided by the co-borrowers’ combined self-reported monthly income&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;earliest_cr_line&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The month the borrower’s earliest reported credit line was opened&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;emp_length&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Employment length in years. Possible values are between 0 and 10 where 0 means less than one year and 10 means ten or more years.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;emp_title&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The job title supplied by the Borrower when applying for the loan.*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;fico_range_high&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The upper boundary range the borrower’s FICO at loan origination belongs to.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;fico_range_low&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The lower boundary range the borrower’s FICO at loan origination belongs to.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The total amount committed to that loan at that point in time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt_inv&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The total amount committed by investors for that loan at that point in time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;grade&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LC assigned loan grade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;home_ownership&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The home ownership status provided by the borrower during registration or obtained from the credit report. Our values are: RENT, OWN, MORTGAGE, OTHER&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;id&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A unique LC assigned ID for the loan listing.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;il_util&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ratio of total current balance to high credit/credit limit on all install acct&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;initial_list_status&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The initial listing status of the loan. Possible values are – W, F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_fi&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of personal finance inquiries&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_12m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of credit inquiries in past 12 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_6mths&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The number of inquiries in past 6 months (excluding auto and mortgage inquiries)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;installment&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The monthly payment owed by the borrower if the loan originates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;int_rate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Interest Rate on the loan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;issue_d&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The month which the loan was funded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_credit_pull_d&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The most recent month LC pulled credit for this loan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_fico_range_high&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The upper boundary range the borrower’s last FICO pulled belongs to.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_fico_range_low&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The lower boundary range the borrower’s last FICO pulled belongs to.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_pymnt_amnt&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Last total payment amount received&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_pymnt_d&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Last month payment was received&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_amnt&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The listed amount of the loan applied for by the borrower. If at some point in time, the credit department reduces the loan amount, then it will be reflected in this value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_status&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Current status of the loan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;max_bal_bc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Maximum current balance owed on all revolving accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;member_id&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A unique LC assigned Id for the borrower member.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mo_sin_old_il_acct&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since oldest bank installment account opened&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mo_sin_old_rev_tl_op&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since oldest revolving account opened&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mo_sin_rcnt_rev_tl_op&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since most recent revolving account opened&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mo_sin_rcnt_tl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since most recent account opened&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mort_acc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of mortgage accounts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_delinq&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The number of months since the borrower’s last delinquency.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_major_derog&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since most recent 90-day or worse rating&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_record&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The number of months since the last public record.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_rcnt_il&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since most recent installment accounts opened&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_recent_bc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since most recent bankcard account opened.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_recent_bc_dlq&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since most recent bankcard delinquency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_recent_inq&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since most recent inquiry.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_recent_revol_delinq&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Months since most recent revolving delinquency.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;next_pymnt_d&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Next scheduled payment date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_accts_ever_120_pd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of accounts ever 120 or more days past due&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_actv_bc_tl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of currently active bankcard accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_actv_rev_tl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of currently active revolving trades&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_bc_sats&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of satisfactory bankcard accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_bc_tl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of bankcard accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_il_tl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of installment accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_op_rev_tl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of open revolving accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_rev_accts&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of revolving accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_rev_tl_bal_gt_0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of revolving trades with balance &amp;gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_sats&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of satisfactory accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_tl_120dpd_2m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of accounts currently 120 days past due (updated in past 2 months)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_tl_30dpd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of accounts currently 30 days past due (updated in past 2 months)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_tl_90g_dpd_24m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of accounts 90 or more days past due in last 24 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;num_tl_op_past_12m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of accounts opened in past 12 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The number of open credit lines in the borrower’s credit file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc_6m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of open trades in last 6 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_12m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of installment accounts opened in past 12 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_24m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of installment accounts opened in past 24 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_il_6m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of currently active installment trades&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_rv_12m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of revolving trades opened in past 12 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_rv_24m&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of revolving trades opened in past 24 months&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Remaining outstanding principal for total amount funded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp_inv&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Remaining outstanding principal for portion of total amount funded by investors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pct_tl_nvr_dlq&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Percent of trades never delinquent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;percent_bc_gt_75&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Percentage of all bankcard accounts &amp;gt; 75% of limit.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;policy_code&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;publicly available policy_code=1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;new products not publicly availab&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;le policy_code=2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pub_rec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of derogatory public records&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pub_rec_bankruptcies&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of public record bankruptcies&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;purpose&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A category provided by the borrower for the loan request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pymnt_plan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Indicates if a payment plan has been put in place for the loan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;recoveries&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;post charge off gross recovery&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_bal&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total credit revolving balance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_util&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Revolving line utilization rate, or the amount of credit the borrower is using relative to all available revolving credit.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sub_grade&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LC assigned loan subgrade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tax_liens&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of tax liens&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;term&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The number of payments on the loan. Values are in months and can be either 36 or 60.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;title&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The loan title provided by the borrower&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_coll_amt&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total collection amounts ever owed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_cur_bal&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total current balance of all accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_hi_cred_lim&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total high credit/credit limit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_acc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The total number of credit lines currently in the borrower’s credit file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_bal_ex_mort&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total credit balance excluding mortgage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_bal_il&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total current balance of all installment accounts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_bc_limit&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total bankcard high credit/credit limit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_cu_tl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Number of finance trades&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_il_high_credit_limit&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total installment high credit/credit limit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Payments received to date for total amount funded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt_inv&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Payments received to date for portion of total amount funded by investors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_int&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Interest received to date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_late_fee&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Late fees received to date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_prncp&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Principal received to date&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rev_hi_lim&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total revolving high credit/credit limit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;url&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;URL for the LC page with listing data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;verification_status&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Indicates if income was verified by LC, not verified, or if the income source was verified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;verified_status_joint&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Indicates if the co-borrowers’ joint income was verified by LC, not verified, or if the income source was verified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;zip_code&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The first 3 numbers of the zip code provided by the borrower in the loan application.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;* Employer Title replaces Employer Name for all loans listed after 9/23/2013&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As expected, &lt;code&gt;id&lt;/code&gt; is “A unique LC assigned ID for the loan listing.” and &lt;code&gt;member_id&lt;/code&gt; is “A unique LC assigned Id for the borrower member.”. The &lt;code&gt;policy_code&lt;/code&gt; is “publicly available policy_code=1 new products not publicly available policy_code=2”. That means there could be different values but as we have seen before in this data it only takes on one value.&lt;/p&gt;
&lt;p&gt;Finally, let’s look at variables that are either in the data and not in the meta description or vice versa. The &lt;code&gt;dplyr::setdiff()&lt;/code&gt; function does what its name suggests, just pay attention to the order of arguments to understand which difference you actually get.&lt;/p&gt;
&lt;p&gt;Variables in loans data but not in meta description.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dplyr::setdiff(colnames(loans), meta_loan_stats$LoanStatNew)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;verification_status_joint&amp;quot; &amp;quot;total_rev_hi_lim&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Variables in meta description but not in loans data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dplyr::setdiff(meta_loan_stats$LoanStatNew, colnames(loans))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;acc_open_past_24mths&amp;quot;           &amp;quot;avg_cur_bal&amp;quot;                   
##  [3] &amp;quot;bc_open_to_buy&amp;quot;                 &amp;quot;bc_util&amp;quot;                       
##  [5] &amp;quot;chargeoff_within_12_mths&amp;quot;       &amp;quot;delinq_amnt&amp;quot;                   
##  [7] &amp;quot;fico_range_high&amp;quot;                &amp;quot;fico_range_low&amp;quot;                
##  [9] &amp;quot;last_fico_range_high&amp;quot;           &amp;quot;last_fico_range_low&amp;quot;           
## [11] &amp;quot;mo_sin_old_il_acct&amp;quot;             &amp;quot;mo_sin_old_rev_tl_op&amp;quot;          
## [13] &amp;quot;mo_sin_rcnt_rev_tl_op&amp;quot;          &amp;quot;mo_sin_rcnt_tl&amp;quot;                
## [15] &amp;quot;mort_acc&amp;quot;                       &amp;quot;mths_since_recent_bc&amp;quot;          
## [17] &amp;quot;mths_since_recent_bc_dlq&amp;quot;       &amp;quot;mths_since_recent_inq&amp;quot;         
## [19] &amp;quot;mths_since_recent_revol_delinq&amp;quot; &amp;quot;num_accts_ever_120_pd&amp;quot;         
## [21] &amp;quot;num_actv_bc_tl&amp;quot;                 &amp;quot;num_actv_rev_tl&amp;quot;               
## [23] &amp;quot;num_bc_sats&amp;quot;                    &amp;quot;num_bc_tl&amp;quot;                     
## [25] &amp;quot;num_il_tl&amp;quot;                      &amp;quot;num_op_rev_tl&amp;quot;                 
## [27] &amp;quot;num_rev_accts&amp;quot;                  &amp;quot;num_rev_tl_bal_gt_0&amp;quot;           
## [29] &amp;quot;num_sats&amp;quot;                       &amp;quot;num_tl_120dpd_2m&amp;quot;              
## [31] &amp;quot;num_tl_30dpd&amp;quot;                   &amp;quot;num_tl_90g_dpd_24m&amp;quot;            
## [33] &amp;quot;num_tl_op_past_12m&amp;quot;             &amp;quot;pct_tl_nvr_dlq&amp;quot;                
## [35] &amp;quot;percent_bc_gt_75&amp;quot;               &amp;quot;pub_rec_bankruptcies&amp;quot;          
## [37] &amp;quot;tax_liens&amp;quot;                      &amp;quot;tot_hi_cred_lim&amp;quot;               
## [39] &amp;quot;total_bal_ex_mort&amp;quot;              &amp;quot;total_bc_limit&amp;quot;                
## [41] &amp;quot;total_il_high_credit_limit&amp;quot;     &amp;quot;total_rev_hi_lim  &amp;quot;            
## [43] &amp;quot;verified_status_joint&amp;quot;          NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems for the loans variables &lt;code&gt;verification_status_joint&lt;/code&gt; and &lt;code&gt;total_rev_hi_lim&lt;/code&gt; there are actually equivalents in the meta data but they carry slightly different names or have leading / trailing blanks. There are quite a few variables in the meta description that are not in the data. But that should be less of a concern as we don’t need those anyway.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;defining-default&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; Defining default&lt;/h1&gt;
&lt;p&gt;Our ultimate goal is the prediction of loan defaults from a given set of observations by selecting explanatory (independent) variables (also called feature in machine learning parlance) that result in an acceptable model performance as quantified by a pre-defined measure. This goal will also impact our exploratory data analysis. We will try to build some intuition about the data given our knowledge of the final goal. If we were given a data discovery task such as detecting interesting patterns via unsupervised learning methods we would probably perform a very different analysis.&lt;/p&gt;
&lt;p&gt;For loans data the usual variable of interest is a delay or a default on required payments. So far we haven’t looked at any default variable because, in fact, there is no one variable indicating it. One may speculate about the reasons but a plausible explanation may be that the definiton of default depends on the perspective. A risk-averse person may classify any delay in scheduled payments immediately as default from day one while others may apply a step-wise approach considering that borrowers may pay at a later stage. Yet another classification may look at any rating deterioration and include a default as last grade in a rating scale.&lt;/p&gt;
&lt;p&gt;Let’s look at potential variables that may indicate a default / delay in payments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;loan_status: Current status of the loan&lt;/li&gt;
&lt;li&gt;delinq_2yrs: The number of 30+ days past-due incidences of delinquency in the borrower’s credit file for the past 2 years&lt;/li&gt;
&lt;li&gt;mths_since_last_delinq: The number of months since the borrower’s last delinquency.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can look at the unique values of above variables by applying &lt;code&gt;base::unique()&lt;/code&gt; via the &lt;code&gt;purrr::map()&lt;/code&gt; function to each column of interest. The &lt;code&gt;purrr&lt;/code&gt; library is part of the &lt;code&gt;tidyverse&lt;/code&gt; set of libraries and applies functional paradigms via a level of abstraction.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;default_vars &amp;lt;- c(&amp;quot;loan_status&amp;quot;, &amp;quot;delinq_2yrs&amp;quot;, &amp;quot;mths_since_last_delinq&amp;quot;)
purrr::map(.x = loans[, default_vars], .f = base::unique)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $loan_status
##  [1] &amp;quot;Fully Paid&amp;quot;                                         
##  [2] &amp;quot;Charged Off&amp;quot;                                        
##  [3] &amp;quot;Current&amp;quot;                                            
##  [4] &amp;quot;Default&amp;quot;                                            
##  [5] &amp;quot;Late (31-120 days)&amp;quot;                                 
##  [6] &amp;quot;In Grace Period&amp;quot;                                    
##  [7] &amp;quot;Late (16-30 days)&amp;quot;                                  
##  [8] &amp;quot;Does not meet the credit policy. Status:Fully Paid&amp;quot; 
##  [9] &amp;quot;Does not meet the credit policy. Status:Charged Off&amp;quot;
## [10] &amp;quot;Issued&amp;quot;                                             
## 
## $delinq_2yrs
##  [1]  0  2  3  1  4  6  5  8  7  9 11 NA 13 15 10 12 17 18 29 24 14 21 22
## [24] 19 16 30 26 20 27 39
## 
## $mths_since_last_delinq
##   [1]   0  35  38  61   8  20  18  68  45  48  41  40  74  25  53  39  10
##  [18]  26  56  77  28  52  24  16  60  54  23   9  11  13  65  19  80  22
##  [35]  59  79  44  64  57  14  63  49  15  73  70  29  51   5  75  55   2
##  [52]  30  47  33  69   4  43  21  27  46  81  78  82  31  76  62  72  42
##  [69]  50   3  12  67  36  34  58  17  71  66  32   6  37   7   1  83  86
##  [86] 115  96 103 120 106  89 107  85  97  95 110  84 135  88  87 122  91
## [103] 146 134 114  99  93 127 101  94 102 129 113 139 131 156 143 109 119
## [120] 149 118 130 148 126  90 141 116 100 152  98  92 108 133 104 111 105
## [137] 170 124 136 180 188 140 151 159 121 123 157 112 154 171 142 125 117
## [154] 176 137&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see that &lt;code&gt;delinq_2yrs&lt;/code&gt; shows only a few unique values which is a bit surprising as it could take many more values given its definition. The variable &lt;code&gt;mths_since_last_delinq&lt;/code&gt; has some surprisingly large values. Both variables only indicate a delinquency in the past so they cannot help with the default definition.&lt;/p&gt;
&lt;p&gt;The variable loan status seems to be an indicator of the current state a particular loan is in. We should also perform a count of the different values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;loans %&amp;gt;%
  group_by(loan_status) %&amp;gt;%
  summarize(count = n(), rel_count = count/nrow(loans)) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;loan_status&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;count&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;rel_count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Charged Off&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;45248&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0509906&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Current&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;601779&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6781533&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Default&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1219&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0013737&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Does not meet the credit policy. Status:Charged Off&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;761&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0008576&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Does not meet the credit policy. Status:Fully Paid&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1988&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0022403&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fully Paid&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;207723&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2340860&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;In Grace Period&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6253&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0070466&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Issued&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8460&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0095337&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Late (16-30 days)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2357&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0026561&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Late (31-120 days)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11591&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0130621&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It is not immediately obvious what the different values stand for, so we refer to Lending Club’s documentation about “&lt;a href=&#34;https://help.lendingclub.com/hc/en-us/articles/215488038-What-do-the-different-Note-statuses-mean-&#34;&gt;What do the different Note statuses mean?&lt;/a&gt;”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fully Paid: Loan has been fully repaid, either at the expiration of the 3- or 5-year year term or as a result of a prepayment.&lt;/li&gt;
&lt;li&gt;Current: Loan is up to date on all outstanding payments.&lt;/li&gt;
&lt;li&gt;Does not meet the credit policy. Status:Fully Paid: No explanation but see “fully paid”.&lt;/li&gt;
&lt;li&gt;Issued: New loan that has passed all Lending Club reviews, received full funding, and has been issued.&lt;/li&gt;
&lt;li&gt;Charged Off: Loan for which there is no longer a reasonable expectation of further payments. Generally, Charge Off occurs no later than 30 days after the Default status is reached. Upon Charge Off, the remaining principal balance of the Note is deducted from the account balance. Learn more about the &lt;a href=&#34;https://help.lendingclub.com/hc/en-us/articles/216127747&#34;&gt;difference between “default” and “charge off”&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Does not meet the credit policy. Status:Charged Off: No explanation but see “Charged Off”&lt;/li&gt;
&lt;li&gt;Late (31-120 days): Loan has not been current for 31 to 120 days.&lt;/li&gt;
&lt;li&gt;In Grace Period: Loan is past due but within the 15-day grace period.&lt;/li&gt;
&lt;li&gt;Late (16-30 days): Loan has not been current for 16 to 30 days.&lt;/li&gt;
&lt;li&gt;Default: Loan has not been current for 121 days or more.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given above information, we will define a default as follows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;defaulted &amp;lt;- 
  c(&amp;quot;Default&amp;quot;, 
    &amp;quot;Does not meet the credit policy. Status:Charged Off&amp;quot;, 
    &amp;quot;In Grace Period&amp;quot;, 
    &amp;quot;Late (16-30 days)&amp;quot;, 
    &amp;quot;Late (31-120 days)&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now have to add an indicator variable to the data. We do this by reassigning the mutated data to the original object. An alternative would be to update the object via a compound assignment pipe-operator from the magrittr package &lt;code&gt;magrittr::%&amp;lt;&amp;gt;%&lt;/code&gt; or an assignment in place &lt;code&gt;:=&lt;/code&gt; from the &lt;code&gt;data.table&lt;/code&gt; package. We use a Boolean (True/False) indicator variable which will have nicer plotting properties (as it is treated like a character variable by the plotting library &lt;code&gt;ggplot2&lt;/code&gt;) rather than a numerical value such as 1/0. R is usually clever enough to still allow calculations on Boolean values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;loans &amp;lt;-
  loans %&amp;gt;%
  mutate(default = ifelse(!(loan_status %in% defaulted), FALSE, TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Given our new indicator variable, we can now compute the frequency of actual defaults in the training set. It is around 0.0249961.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;loans %&amp;gt;%
  summarise(default_freq = sum(default / n()))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 1
##   default_freq
##          &amp;lt;dbl&amp;gt;
## 1   0.02499608&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# alternatively in a table
table(loans$default) / nrow(loans)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##      FALSE       TRUE 
## 0.97500392 0.02499608&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;removing-variables-deemed-unfit-for-most-modeling&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;7&lt;/span&gt; Removing variables deemed unfit for most modeling&lt;/h1&gt;
&lt;p&gt;As stated before some variables may actually have information value but are kicked out as we deem them unfit for most practical purposes. Arguably one would have to look at the actual value distribution as e.g. a high number of unique values may be non-sense values for only a few loans but we don’t dig deeper here.&lt;/p&gt;
&lt;p&gt;We can get rid of following variables with given reason&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;annual_inc_joint: high NA ratio&lt;/li&gt;
&lt;li&gt;dti_joint: high NA ratio&lt;/li&gt;
&lt;li&gt;verification_status_joint: high NA ratio&lt;/li&gt;
&lt;li&gt;policy_code: only one unique value -&amp;gt; standard deviation = 0&lt;/li&gt;
&lt;li&gt;id: key variable&lt;/li&gt;
&lt;li&gt;member_id: key variable&lt;/li&gt;
&lt;li&gt;emp_title: high amount of unique values&lt;/li&gt;
&lt;li&gt;url: high amount of unique values&lt;/li&gt;
&lt;li&gt;desc: high NA ratio&lt;/li&gt;
&lt;li&gt;title: high amount of unique values&lt;/li&gt;
&lt;li&gt;next_pymnt_d: high NA ratio&lt;/li&gt;
&lt;li&gt;open_acc_6m: high NA ratio&lt;/li&gt;
&lt;li&gt;open_il_6m: high NA ratio&lt;/li&gt;
&lt;li&gt;open_il_12m: high NA ratio&lt;/li&gt;
&lt;li&gt;open_il_24m: high NA ratio&lt;/li&gt;
&lt;li&gt;mths_since_rcnt_il: high NA ratio&lt;/li&gt;
&lt;li&gt;total_bal_il: high NA ratio&lt;/li&gt;
&lt;li&gt;il_util: high NA ratio&lt;/li&gt;
&lt;li&gt;open_rv_12m: high NA ratio&lt;/li&gt;
&lt;li&gt;open_rv_24m: high NA ratio&lt;/li&gt;
&lt;li&gt;max_bal_bc: high NA ratio&lt;/li&gt;
&lt;li&gt;all_util: high NA ratio&lt;/li&gt;
&lt;li&gt;total_rev_hi_lim: high NA ratio&lt;/li&gt;
&lt;li&gt;inq_fi: high NA ratio&lt;/li&gt;
&lt;li&gt;total_cu_tl: high NA ratio&lt;/li&gt;
&lt;li&gt;inq_last_12m: high NA ratio&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vars_to_remove &amp;lt;- 
  c(&amp;quot;annual_inc_joint&amp;quot;, &amp;quot;dti_joint&amp;quot;, &amp;quot;policy_code&amp;quot;, &amp;quot;id&amp;quot;, &amp;quot;member_id&amp;quot;,
    &amp;quot;emp_title&amp;quot;, &amp;quot;url&amp;quot;, &amp;quot;desc&amp;quot;, &amp;quot;title&amp;quot;, &amp;quot;open_acc_6m&amp;quot;, &amp;quot;open_il_6m&amp;quot;, 
    &amp;quot;open_il_12m&amp;quot;, &amp;quot;open_il_24m&amp;quot;, &amp;quot;mths_since_rcnt_il&amp;quot;, &amp;quot;total_bal_il&amp;quot;, 
    &amp;quot;il_util&amp;quot;, &amp;quot;open_rv_12m&amp;quot;, &amp;quot;open_rv_24m&amp;quot;, &amp;quot;max_bal_bc&amp;quot;, &amp;quot;all_util&amp;quot;,
    &amp;quot;total_rev_hi_lim&amp;quot;, &amp;quot;inq_fi&amp;quot;, &amp;quot;total_cu_tl&amp;quot;, &amp;quot;inq_last_12m&amp;quot;,
    &amp;quot;verification_status_joint&amp;quot;, &amp;quot;next_pymnt_d&amp;quot;)

loans &amp;lt;- loans %&amp;gt;% select(-one_of(vars_to_remove))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We further remove variables for different (stated) reasons&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sub_grade: contains same (but more granular) information as grade&lt;/li&gt;
&lt;li&gt;loan_status: has been used to define target variable&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vars_to_remove &amp;lt;- 
  c(&amp;quot;sub_grade&amp;quot;, &amp;quot;loan_status&amp;quot;)

loans &amp;lt;- loans %&amp;gt;% select(-one_of(vars_to_remove))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-note-on-hypothesis-generation-vs.hypothesis-confirmation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;8&lt;/span&gt; A note on hypothesis generation vs. hypothesis confirmation&lt;/h1&gt;
&lt;p&gt;Before we start our analysis, we should be clear about its aim and what the data is used for. In the book “R for Data Science” the authors put it quite nicely under the name &lt;a href=&#34;http://r4ds.had.co.nz/model-intro.html&#34;&gt;Hypothesis generation vs. hypothesis confirmation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Each observation can either be used for exploration or confirmation, not both.&lt;/li&gt;
&lt;li&gt;You can use an observation as many times as you like for exploration, but you can only use it once for confirmation. As soon as you use an observation twice, you’ve switched from confirmation to exploration. This is necessary because to confirm a hypothesis you must use data independent of the data that you used to generate the hypothesis. Otherwise you will be over optimistic. There is absolutely nothing wrong with exploration, but you should never sell an exploratory analysis as a confirmatory analysis because it is fundamentally misleading.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;In a strict sense, this requires us to split the data into different sets. The authors go on suggesting a split:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;60% of your data goes into a training (or exploration) set. You’re allowed to do anything you like with this data: visualise it and fit tons of models to it.&lt;/li&gt;
&lt;li&gt;20% goes into a query set. You can use this data to compare models or visualisations by hand, but you’re not allowed to use it as part of an automated process.&lt;/li&gt;
&lt;li&gt;20% is held back for a test set. You can only use this data ONCE, to test your final model.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means that even for exploratory data analysis (EDA), we would only look at parts of the data. We will split the data into two sets with 80% train and 20% test ratio at random. As we are dealing with time-series data, we could also split the data by time. But time itself may be an explanatory variable which could be modeled. All exploratory analysis will be performed on the training data only. We will use &lt;code&gt;base::set.seed()&lt;/code&gt; to make the random split reproducible. You can have an argument whether it is sensible to even use split data for EDA but EDA usually builds your intuition about the data and thus will shape data transformation and model decisions. The test data allows for testing all these assumptions in addition to the actual model performance. There are other methods such as cross validation which do not necessarily require a test data set but we have enough observations to afford one.&lt;/p&gt;
&lt;p&gt;One note of caution is necessary here. Since not all data is used for model fitting, the test data may have labels that do not occur in the training set and with same rationale feautures may have unseen values. In addition, the data is imbalanced, i.e. only a few lenders default while many more do not. The last fact may actually require a non-random split considering the class label (default / non-default). The same may hold true for the features (independent variables). For more details on dealing with imbalanced data, see &lt;a href=&#34;https://www.svds.com/learning-imbalanced-classes/&#34;&gt;Learning from Imbalanced Classes&lt;/a&gt; or &lt;a href=&#34;http://www.ele.uri.edu/faculty/he/PDFfiles/ImbalancedLearning.pdf&#34;&gt;Learning from Imbalanced Data&lt;/a&gt;. Tom Fawcett puts it nicely in previous first mentioned blog post:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Conventional algorithms are often biased towards the majority class because their loss functions attempt to optimize quantities such as error rate, not taking the data distribution into consideration. In the worst case, minority examples are treated as outliers of the majority class and ignored. The learning algorithm simply generates a trivial classifier that classifies every example as the majority class.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can do the split manually (see commented out code) but in order to ensure class distributions within the split data, we use function &lt;code&gt;createDataPartition()&lt;/code&gt; from the &lt;code&gt;caret&lt;/code&gt; package which performs stratified sampling. For details on the function, see &lt;a href=&#34;https://topepo.github.io/caret/data-splitting.html&#34;&gt;The caret package: 4.1 Simple Splitting Based on the Outcome&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ## manual approach
# # 80% of the sample size
# smp_size &amp;lt;- floor(0.8 * nrow(loans))
# 
# # set the seed to make your partition reproductible
# set.seed(123)
# train_index &amp;lt;- sample(seq_len(nrow(loans)), size = smp_size)
# 
# train &amp;lt;- loans[train_index, ]
# test &amp;lt;- loans[-train_index, ]

## with caret
set.seed(6438)

train_index &amp;lt;- 
  caret::createDataPartition(y = loans$default, times = 1, 
                             p = .8, list = FALSE)

train &amp;lt;- loans[train_index, ]
test &amp;lt;- loans[-train_index, ]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;exploratory-data-analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;9&lt;/span&gt; Exploratory Data Analysis&lt;/h1&gt;
&lt;p&gt;There are many excellent resources on exploratory analysis, e.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://onlinelibrary.wiley.com/doi/10.1111/j.2041-210X.2009.00001.x/full&#34;&gt;A protocol for data exploration to avoid common statistical problems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A visual look at the data should always precede any model considerations. A useful visualization library is &lt;code&gt;ggplot2&lt;/code&gt; (which is part of the &lt;code&gt;tidyverse&lt;/code&gt; and further on also referred to as ggplot) that requires a few other libraries on top for extensions such as &lt;code&gt;scales&lt;/code&gt;. We are not after publication-ready visualizations yet as this phase is considered data exploration or data discovery rather than results reporting. Nontheless, used visualization libraries already produce visually appealing graphics as they use smart heuristics and default values to guess sensible parameter settings.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(scales)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The most important questions around visualization are which variables are numeric and if so are they continous or discrete and which are strings. Furthermore, which variables are attributes (categorical) and which make up sensible metric-attribute pairs. An important information for efficient visualization with categorical variables is also the amount of unique values they can take and the ratio of zero or missing values, both which were already analyzed in section &lt;a href=&#34;#meta-data&#34;&gt;Meta Data&lt;/a&gt;. In a first exploratory analysis we aim for categorical variables that have high information power and not too many unique values to keep the information density at a manageable level. Also consider group sizes and differences between median and mean driven by outliers. Especially when drawing conclusions from summarized / aggregated information, we should be aware of group size. We thus may add this info directly in the plot or look at it before plotting in a grouped table.&lt;/p&gt;
&lt;p&gt;A generally good idea is to look at the distributions of relevant continous variables. These are probably&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;loan_amnt&lt;/li&gt;
&lt;li&gt;funded_amnt&lt;/li&gt;
&lt;li&gt;funded_amnt_inv&lt;/li&gt;
&lt;li&gt;annual_inc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Among the target variable &lt;code&gt;default&lt;/code&gt; some interesting categorical variables might be&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;term&lt;/li&gt;
&lt;li&gt;int_rate&lt;/li&gt;
&lt;li&gt;grade&lt;/li&gt;
&lt;li&gt;emp_title&lt;/li&gt;
&lt;li&gt;home_ownership&lt;/li&gt;
&lt;li&gt;verification_status&lt;/li&gt;
&lt;li&gt;issue_d (timestamp)&lt;/li&gt;
&lt;li&gt;loan_status&lt;/li&gt;
&lt;li&gt;purpose&lt;/li&gt;
&lt;li&gt;zip_code (geo-info)&lt;/li&gt;
&lt;li&gt;addr_state (geo-info)&lt;/li&gt;
&lt;li&gt;application_type&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Assign continous variables to a character vector and reshape data for plotting of distributions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;income_vars &amp;lt;- c(&amp;quot;annual_inc&amp;quot;)
loan_amount_vars &amp;lt;- c(&amp;quot;loan_amnt&amp;quot;, &amp;quot;funded_amnt&amp;quot;, &amp;quot;funded_amnt_inv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can reshape and plot the original data for specified variables in a tidyr-dplyr-ggplot pipe. For details on tidying with tidyr, see &lt;a href=&#34;http://garrettgman.github.io/tidying/&#34;&gt;Data Science with R - Data Tidying&lt;/a&gt; or &lt;a href=&#34;https://rpubs.com/bradleyboehmke/data_wrangling&#34;&gt;Data Processing with dplyr &amp;amp; tidyr&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  select_(.dots = income_vars) %&amp;gt;%
  gather_(&amp;quot;variable&amp;quot;, &amp;quot;value&amp;quot;, gather_cols = income_vars) %&amp;gt;%
  ggplot(aes(x = value)) +
  facet_wrap(~ variable, scales = &amp;quot;free_x&amp;quot;, ncol = 3) +
  geom_histogram()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 4 rows containing non-finite values (stat_bin).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-29-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can see that a lot of loans have corresponding annual income of zero and in general income seems low. As already known, joint income has a large number of NA values (i.e. cannot be displayed) and those few values that are present do not seem to have significant exposure. Most loan applications must have been submitted by single income borrowers, i.e. either single persons or single-income households.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  select_(.dots = loan_amount_vars) %&amp;gt;%
  gather_(&amp;quot;variable&amp;quot;, &amp;quot;value&amp;quot;, gather_cols = loan_amount_vars) %&amp;gt;%
  ggplot(aes(x = value)) +
  facet_wrap(~ variable, scales = &amp;quot;free_x&amp;quot;, ncol = 3) +
  geom_histogram()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-30-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The loan amount distributions seems similar in shape suggesting not too much divergence between the loan amount applied for, the amount committed and the amount invested.&lt;/p&gt;
&lt;p&gt;We had already identified a number of interesting categorical variables. Let’s combine our selection with the meta information gathered in an earlier stage to see the information power and uniqueness.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;categorical_vars &amp;lt;- 
  c(&amp;quot;term&amp;quot;, &amp;quot;grade&amp;quot;, &amp;quot;sub_grade&amp;quot;, &amp;quot;emp_title&amp;quot;, &amp;quot;home_ownership&amp;quot;,
    &amp;quot;verification_status&amp;quot;, &amp;quot;loan_status&amp;quot;, &amp;quot;purpose&amp;quot;, &amp;quot;zip_code&amp;quot;,
    &amp;quot;addr_state&amp;quot;, &amp;quot;application_type&amp;quot;, &amp;quot;policy_code&amp;quot;)

meta_loans %&amp;gt;%
  select(variable, p_zeros, p_na, type, unique) %&amp;gt;%
  filter_(~ variable %in% categorical_vars) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_zeros&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_na&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;type&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;unique&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;term&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;grade&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sub_grade&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;emp_title&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;289148&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;home_ownership&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;verification_status&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_status&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;purpose&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;zip_code&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;935&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;addr_state&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;policy_code&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;application_type&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This gives us some ideas on what may be useful for a broad data exploration. Variables such as &lt;code&gt;emp_title&lt;/code&gt; have too many unique values to be suitable for a classical categorical graph. Other variables may lend themselves to pairwise or correlation graphs such as &lt;code&gt;int_rate&lt;/code&gt; while again others may be used in time series plots such as &lt;code&gt;issue_d&lt;/code&gt;. We may even be able to plot some appealing geographical plots with geolocation variables such as &lt;code&gt;zip_code&lt;/code&gt; or &lt;code&gt;addr_state&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;grade&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;9.1&lt;/span&gt; Grade&lt;/h2&gt;
&lt;p&gt;For a start, let’s look at grade which seems to be a rating classification scheme that Lending Club uses to assign loans into risk buckets similar to other popular rating schemes like S&amp;amp;P or Moodys. For more details, see &lt;a href=&#34;https://www.lendingclub.com/foliofn/rateDetail.action&#34;&gt;Lending Club Rate Information&lt;/a&gt;. For now, it suffices to know that grades take values A, B, C, D, E, F, G where A represents the highest quality loan and G the lowest.&lt;/p&gt;
&lt;p&gt;As a first relation, we investigate the distribution of loan amount over the different grades with a standard &lt;a href=&#34;https://en.wikipedia.org/wiki/Box_plot&#34;&gt;boxplot&lt;/a&gt; highlighting potential outliers in red. One may also select a pre-defined theme from the &lt;code&gt;ggthemes&lt;/code&gt; package by adding a call to ggplot such as &lt;code&gt;theme_economist()&lt;/code&gt; or even create a theme oneself. For details on themes, see &lt;a href=&#34;http://docs.ggplot2.org/dev/vignettes/themes.html&#34;&gt;ggplot2 themes&lt;/a&gt; and &lt;a href=&#34;https://cran.r-project.org/web/packages/ggthemes/vignettes/ggthemes.html&#34;&gt;Introduction to ggthemes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As mentioned before we want to be group size aware so let’s write a short function to be used inside the &lt;code&gt;ggplot::geom_boxplot()&lt;/code&gt; call in combination with &lt;code&gt;ggplot::stat_summary()&lt;/code&gt; where we can call user-defined functions using parameter &lt;code&gt;fun.data&lt;/code&gt;. As it is often the case with plots, we need to experiment with the position of additional text elements which we achieve by scaling the y-position with some constant multiplier around the median (as the boxplot will have the median as horizontal bar within the rectangles). The mean can be added in a similar fashion, however we don’t need to specify the y-position explicitly. The count as text and the mean as point may overlap themselves and with the median horizontal bar. This is acceptable in an exploratory setting. For publication-ready plots one would have to perform some adjustments.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# see http://stackoverflow.com/questions/15660829/how-to-add-a-number-of-observations-per-group-and-use-group-mean-in-ggplot2-boxp
give_count &amp;lt;- 
  stat_summary(fun.data = function(x) return(c(y = median(x)*1.06,
                                               label = length(x))),
               geom = &amp;quot;text&amp;quot;)

# see http://stackoverflow.com/questions/19876505/boxplot-show-the-value-of-mean
give_mean &amp;lt;- 
  stat_summary(fun.y = mean, colour = &amp;quot;darkgreen&amp;quot;, geom = &amp;quot;point&amp;quot;, 
               shape = 18, size = 3, show.legend = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  ggplot(aes(grade, loan_amnt)) +
  geom_boxplot(fill = &amp;quot;white&amp;quot;, colour = &amp;quot;darkblue&amp;quot;, 
               outlier.colour = &amp;quot;red&amp;quot;, outlier.shape = 1) +
  give_count +
  give_mean +
  scale_y_continuous(labels = comma) +
  facet_wrap(~ default) +
  labs(title=&amp;quot;Loan Amount by Grade&amp;quot;, x = &amp;quot;Grade&amp;quot;, y = &amp;quot;Loan Amount \n&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-33-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few points from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there is not a lot of difference between default and non-default&lt;/li&gt;
&lt;li&gt;lower quality loans tend to have a higher loan amount&lt;/li&gt;
&lt;li&gt;there are virtually no outliers except for grade B&lt;/li&gt;
&lt;li&gt;the loan amount spread (IQR) seems to be slightly higher for lower quality loans&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to Lending Club’s rate information, we would expect a strong increasing relationship between grade and interest rate so we can test this. We also consider the term of the loan as one might expect that longer term loans could have a higher interest rate.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  ggplot(aes(grade, int_rate)) +
  geom_boxplot(fill = &amp;quot;white&amp;quot;, colour = &amp;quot;darkblue&amp;quot;, 
               outlier.colour = &amp;quot;red&amp;quot;, outlier.shape = 1) +
  give_count +
  give_mean +
  scale_y_continuous(labels = comma) +
  labs(title=&amp;quot;Interest Rate by Grade&amp;quot;, x = &amp;quot;Grade&amp;quot;, y = &amp;quot;Interest Rate \n&amp;quot;) +
  facet_wrap(~ term)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few points from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;interest rate increases with grade worsening&lt;/li&gt;
&lt;li&gt;a few loans seem to have an equally low interest rate independent of grade&lt;/li&gt;
&lt;li&gt;the spread of rates seems to increase with grade worsening&lt;/li&gt;
&lt;li&gt;there tend to be more outliers on the lower end of the rate&lt;/li&gt;
&lt;li&gt;The 3-year term has a much higher number of high-rated borrowers while the 5-year term has a larger number in the low-rating grades&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;home-ownership&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;9.2&lt;/span&gt; Home Ownership&lt;/h2&gt;
&lt;p&gt;We can do the same for home ownership.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  ggplot(aes(home_ownership, int_rate)) +
  geom_boxplot(fill = &amp;quot;white&amp;quot;, colour = &amp;quot;darkblue&amp;quot;, 
               outlier.colour = &amp;quot;red&amp;quot;, outlier.shape = 1) +
  give_count +
  give_mean +
  scale_y_continuous(labels = comma) +
  facet_wrap(~ default) +
  labs(title=&amp;quot;Interest Rate by Home Ownership&amp;quot;, x = &amp;quot;Home Ownership&amp;quot;, y = &amp;quot;Interest Rate \n&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-35-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few points from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there seems no immediate conclusion with respect to the impact of home ownership, e.g. we can see that median/mean interest rate is higher for people who own a house than for those who still pay a mortgage.&lt;/li&gt;
&lt;li&gt;interest rates are highest for values “any” and “none” which could be loans of limited data quality but there are very few data points.&lt;/li&gt;
&lt;li&gt;interest rate is higher for default loans, which is probably driven by other factors (e.g. grade)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;loan-amount-and-income&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;9.3&lt;/span&gt; Loan Amount and Income&lt;/h2&gt;
&lt;p&gt;Another interesting plot may be the relationship between loan amount and funded / invested amount. As all variables are continous, we can do that with a simple &lt;a href=&#34;https://en.wikipedia.org/wiki/Scatter_plot&#34;&gt;scatterplot&lt;/a&gt; but we will need to reshape the data to have both loan values plotted against loan amount.&lt;/p&gt;
&lt;p&gt;In fact the reshaping here may be slightly odd as we like to display the same variable on the x-axis but different values on the y-axis facetted by their variable names. To achieve that, we gather the data three times with the same x variable but changing y variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;funded_amnt &amp;lt;-
  train %&amp;gt;%
  transmute(loan_amnt = loan_amnt, value = funded_amnt, 
              variable = &amp;quot;funded_amnt&amp;quot;)

funded_amnt_inv &amp;lt;-
  train %&amp;gt;%
  transmute(loan_amnt = loan_amnt, value = funded_amnt_inv, 
              variable = &amp;quot;funded_amnt_inv&amp;quot;)

plot_data &amp;lt;- rbind(funded_amnt, funded_amnt_inv)
# remove unnecessary data using regex
ls()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;categorical_vars&amp;quot;  &amp;quot;chr_to_date_vars&amp;quot;  &amp;quot;chr_to_num_vars&amp;quot;  
##  [4] &amp;quot;convert_date&amp;quot;      &amp;quot;default_vars&amp;quot;      &amp;quot;defaulted&amp;quot;        
##  [7] &amp;quot;excel_file&amp;quot;        &amp;quot;funded_amnt&amp;quot;       &amp;quot;funded_amnt_inv&amp;quot;  
## [10] &amp;quot;give_count&amp;quot;        &amp;quot;give_mean&amp;quot;         &amp;quot;i&amp;quot;                
## [13] &amp;quot;income_vars&amp;quot;       &amp;quot;libraries_missing&amp;quot; &amp;quot;libraries_used&amp;quot;   
## [16] &amp;quot;loan_amount_vars&amp;quot;  &amp;quot;loans&amp;quot;             &amp;quot;meta_browse_notes&amp;quot;
## [19] &amp;quot;meta_loan_stats&amp;quot;   &amp;quot;meta_loans&amp;quot;        &amp;quot;meta_reject_stats&amp;quot;
## [22] &amp;quot;na_to_zero_vars&amp;quot;   &amp;quot;num_vars&amp;quot;          &amp;quot;path&amp;quot;             
## [25] &amp;quot;plot_data&amp;quot;         &amp;quot;test&amp;quot;              &amp;quot;train&amp;quot;            
## [28] &amp;quot;train_index&amp;quot;       &amp;quot;vars_to_remove&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rm(list = ls()[grep(&amp;quot;^funded&amp;quot;, ls())])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s plot the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_data %&amp;gt;%
  ggplot(aes(x = loan_amnt, y = value)) +
  facet_wrap(~ variable, scales = &amp;quot;free_x&amp;quot;, ncol = 3) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-37-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few points from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there are instances when funded amount is smaller loan amount&lt;/li&gt;
&lt;li&gt;there seems to be a number of loans where investment is smaller funded amount i.e. not the full loan is invested in&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s do the same but only for annual income versus loan amount.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  ggplot(aes(x = annual_inc, y = loan_amnt)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 4 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-38-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few points from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there is no immediatly discernible relationship&lt;/li&gt;
&lt;li&gt;there are quite a few income outliers with questionable values (e.g. why would a person with annual income 9500000 request a loan amount of 24000)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;time-series&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;9.4&lt;/span&gt; Time Series&lt;/h2&gt;
&lt;p&gt;Now let’s take a look at interest rates over time but split the time series by grade to see if there are differences in interest rate development depending on the borrower grade. Again we make use of a dplyr pipe, first selecting the variables of interest, then grouping by attributes and finally summarising the metric interest rate by taking the mean for each goup. We use &lt;code&gt;facet_wrap&lt;/code&gt; to split by attribute grade. As we are using the mean for building an aggregate representation, we should be weary of outliers and group size which we had already looked at earlier (ignoring time dimension).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  select(int_rate, grade) %&amp;gt;%
  group_by(grade) %&amp;gt;%
  summarise(int_rate_mean = mean(int_rate, na.rm = TRUE),
            int_rate_median = median(int_rate, na.rm = TRUE),
            n = n()) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;grade&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;int_rate_mean&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;int_rate_median&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;A&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.244639&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.26&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;118281&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;B&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.830884&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;203741&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;C&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13.979427&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13.98&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;196815&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;D&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17.178566&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111490&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;E&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19.899484&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56765&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;F&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23.572306&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23.76&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18454&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;G&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;25.624502&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;25.83&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4358&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Group size are relatively large except for grade G which may have only a few hundred loans per group when grouping by grade and date. Mean and median seem fairly close at this non-granular level. Let’s plot the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  select(int_rate, grade, issue_d) %&amp;gt;%
  group_by(grade, issue_d) %&amp;gt;%
  summarise(int_rate_mean = mean(int_rate, na.rm = TRUE)) %&amp;gt;%
  ggplot(aes(issue_d, int_rate_mean)) +
  geom_line(color= &amp;quot;darkblue&amp;quot;, size = 1) +
  facet_wrap(~ grade)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-40-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few points from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the mean interest rate is falling or relatively constant for high-rated clients&lt;/li&gt;
&lt;li&gt;the mean interest rate is increasing significantly for low-rated clients&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s also look at loan amounts over time in the same manner.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;%
  select(loan_amnt, grade, issue_d) %&amp;gt;%
  group_by(grade, issue_d) %&amp;gt;%
  summarise(loan_amnt_mean = mean(loan_amnt, na.rm = TRUE)) %&amp;gt;%
  ggplot(aes(issue_d, loan_amnt_mean)) +
  geom_line(color= &amp;quot;darkblue&amp;quot;, size = 1) +
  facet_wrap(~ grade)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-41-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few points from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the mean loan amount is increasing for all grades&lt;/li&gt;
&lt;li&gt;while high-rated clients have some mean loan amount volatility, it is much higher for low-rated clients&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;geolocation-plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;9.5&lt;/span&gt; Geolocation Plots&lt;/h2&gt;
&lt;p&gt;Let’s remind ourselves of the geolocation variables in the data and their information power.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;zip_code (geo-info)&lt;/li&gt;
&lt;li&gt;addr_state (geo-info)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;geo_vars &amp;lt;- c(&amp;quot;zip_code&amp;quot;, &amp;quot;addr_state&amp;quot;)

meta_loans %&amp;gt;%
  select(variable, p_zeros, p_na, type, unique) %&amp;gt;%
  filter_(~ variable %in% geo_vars) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_zeros&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_na&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;type&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;unique&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;zip_code&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;935&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;addr_state&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;loans %&amp;gt;%
  select_(.dots = geo_vars) %&amp;gt;%
  str()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Classes &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39; and &amp;#39;data.frame&amp;#39;:    887379 obs. of  2 variables:
##  $ zip_code  : chr  &amp;quot;860xx&amp;quot; &amp;quot;309xx&amp;quot; &amp;quot;606xx&amp;quot; &amp;quot;917xx&amp;quot; ...
##  $ addr_state: chr  &amp;quot;AZ&amp;quot; &amp;quot;GA&amp;quot; &amp;quot;IL&amp;quot; &amp;quot;CA&amp;quot; ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see that &lt;code&gt;zip_code&lt;/code&gt; seems to be the truncated US postal code with only first three digits having a value. The &lt;code&gt;addr_state&lt;/code&gt; seems to be the state names in a two-letter abbreviation.&lt;/p&gt;
&lt;p&gt;We can use the &lt;code&gt;choroplethr&lt;/code&gt; package to work with maps (alternatives may be &lt;code&gt;maps&lt;/code&gt; among other packages). While &lt;code&gt;choroplethr&lt;/code&gt; provides functions to work with the data, its sister package &lt;code&gt;choroplethrMaps&lt;/code&gt; contains corresponding maps that can be used by &lt;code&gt;choroplethr&lt;/code&gt;. One issue with &lt;code&gt;choroplethr&lt;/code&gt; is that it attaches the package &lt;code&gt;plyr&lt;/code&gt; which means many functions from &lt;code&gt;dplyr&lt;/code&gt; are masked as it is the successor to &lt;code&gt;plyr&lt;/code&gt;. Thus we do not load the package &lt;code&gt;choroplethr&lt;/code&gt; despite using its functions frequently. However, we need to load &lt;code&gt;choroplethrMaps&lt;/code&gt; as it has some data that is not exported from its namespace so syntax like &lt;code&gt;choroplethrMaps::state.map&lt;/code&gt; where &lt;code&gt;state.map&lt;/code&gt; is the rdata file does not work. An alternative might be to load the file directly by going to the underlying directory, e.g. &lt;code&gt;R-3.x.x\library\choroplethrMaps\data&lt;/code&gt; but this is cumbersome. As discussed before, when attaching a library, we just need to make sure that important functions of other packages are not masked. In this case it’s fine.&lt;/p&gt;
&lt;p&gt;For details on those libraries, see &lt;a href=&#34;https://cran.r-project.org/web/packages/choroplethr&#34;&gt;CRAN choroplethr&lt;/a&gt; and &lt;a href=&#34;https://cran.r-project.org/web/packages/choroplethrMaps&#34;&gt;CRAN choroplethrMaps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First we aggregate the default rate by state.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;default_rate_state &amp;lt;- 
  train %&amp;gt;%
  select(default, addr_state) %&amp;gt;%
  group_by(addr_state) %&amp;gt;%
  summarise(default_rate = sum(default, na.rm = TRUE) / n())

knitr::kable(default_rate_state)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;addr_state&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;default_rate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;AK&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0289280&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;AL&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0300944&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;AR&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0243994&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;AZ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0260203&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0247008&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;CO&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0233654&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;CT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0222655&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;DC&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0131646&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;DE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0291604&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;FL&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0267678&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;GA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0238065&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;HI&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0303441&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ID&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IL&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0201743&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;IN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0242243&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;KS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0162975&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;KY&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0204172&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;LA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0268172&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0246096&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MD&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0279492&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ME&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0023474&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MI&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0249429&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0239122&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MO&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0222711&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0301540&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;MT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0289296&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NC&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0263557&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ND&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0075377&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0156087&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NH&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0206490&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0249566&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NM&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0264766&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NV&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0303213&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NY&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0294889&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;OH&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0225960&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;OK&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0283897&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;OR&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0209814&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;PA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0256838&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;RI&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0245849&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;SC&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0218611&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;SD&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0301164&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;TN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0267720&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;TX&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0240810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;UT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0250696&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;VA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0279697&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;VT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0172771&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;WA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0216223&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;WI&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0213508&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;WV&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0225434&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;WY&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0179455&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The data is already in a good format but when using &lt;code&gt;choroplethr&lt;/code&gt; we need to adhere to some conventions to make it work out of the box. The first thing would be to bring the state names into a standard format. In fact, we can investigate the format by looking e.g. into the &lt;code&gt;choroplethrMaps::state.map&lt;/code&gt; dataset which we later use to map our data. We first load the library and then the data via the function &lt;code&gt;utils::data()&lt;/code&gt;. From the documentation, we also learn that state.map is a “data.frame which contains a map of all 50 US States plus the District of Columbia.” It is based on a &lt;a href=&#34;https://en.wikipedia.org/wiki/Shapefile&#34;&gt;shapefile&lt;/a&gt; which is often used in geospatial visualizations and “taken from the US Census 2010 Cartographic Boundary shapefiles page”. We are interested in the &lt;code&gt;region&lt;/code&gt; variable which seems to hold the state names.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(choroplethrMaps)
utils::data(state.map)
str(state.map)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    50763 obs. of  12 variables:
##  $ long      : num  -113 -113 -112 -112 -111 ...
##  $ lat       : num  37 37 37 37 37 ...
##  $ order     : int  1 2 3 4 5 6 7 8 9 10 ...
##  $ hole      : logi  FALSE FALSE FALSE FALSE FALSE FALSE ...
##  $ piece     : Factor w/ 66 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;4&amp;quot;,..: 1 1 1 1 1 1 1 1 1 1 ...
##  $ group     : Factor w/ 226 levels &amp;quot;0.1&amp;quot;,&amp;quot;1.1&amp;quot;,&amp;quot;10.1&amp;quot;,..: 1 1 1 1 1 1 1 1 1 1 ...
##  $ id        : chr  &amp;quot;0&amp;quot; &amp;quot;0&amp;quot; &amp;quot;0&amp;quot; &amp;quot;0&amp;quot; ...
##  $ GEO_ID    : Factor w/ 51 levels &amp;quot;0400000US01&amp;quot;,..: 3 3 3 3 3 3 3 3 3 3 ...
##  $ STATE     : Factor w/ 51 levels &amp;quot;01&amp;quot;,&amp;quot;02&amp;quot;,&amp;quot;04&amp;quot;,..: 3 3 3 3 3 3 3 3 3 3 ...
##  $ region    : chr  &amp;quot;arizona&amp;quot; &amp;quot;arizona&amp;quot; &amp;quot;arizona&amp;quot; &amp;quot;arizona&amp;quot; ...
##  $ LSAD      : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
##  $ CENSUSAREA: num  113594 113594 113594 113594 113594 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unique(state.map$region)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;arizona&amp;quot;              &amp;quot;arkansas&amp;quot;             &amp;quot;louisiana&amp;quot;           
##  [4] &amp;quot;minnesota&amp;quot;            &amp;quot;mississippi&amp;quot;          &amp;quot;montana&amp;quot;             
##  [7] &amp;quot;new mexico&amp;quot;           &amp;quot;north dakota&amp;quot;         &amp;quot;oklahoma&amp;quot;            
## [10] &amp;quot;pennsylvania&amp;quot;         &amp;quot;tennessee&amp;quot;            &amp;quot;virginia&amp;quot;            
## [13] &amp;quot;california&amp;quot;           &amp;quot;delaware&amp;quot;             &amp;quot;west virginia&amp;quot;       
## [16] &amp;quot;wisconsin&amp;quot;            &amp;quot;wyoming&amp;quot;              &amp;quot;alabama&amp;quot;             
## [19] &amp;quot;alaska&amp;quot;               &amp;quot;florida&amp;quot;              &amp;quot;idaho&amp;quot;               
## [22] &amp;quot;kansas&amp;quot;               &amp;quot;maryland&amp;quot;             &amp;quot;colorado&amp;quot;            
## [25] &amp;quot;new jersey&amp;quot;           &amp;quot;north carolina&amp;quot;       &amp;quot;south carolina&amp;quot;      
## [28] &amp;quot;washington&amp;quot;           &amp;quot;vermont&amp;quot;              &amp;quot;utah&amp;quot;                
## [31] &amp;quot;iowa&amp;quot;                 &amp;quot;kentucky&amp;quot;             &amp;quot;maine&amp;quot;               
## [34] &amp;quot;massachusetts&amp;quot;        &amp;quot;connecticut&amp;quot;          &amp;quot;michigan&amp;quot;            
## [37] &amp;quot;missouri&amp;quot;             &amp;quot;nebraska&amp;quot;             &amp;quot;nevada&amp;quot;              
## [40] &amp;quot;new hampshire&amp;quot;        &amp;quot;new york&amp;quot;             &amp;quot;ohio&amp;quot;                
## [43] &amp;quot;oregon&amp;quot;               &amp;quot;rhode island&amp;quot;         &amp;quot;south dakota&amp;quot;        
## [46] &amp;quot;district of columbia&amp;quot; &amp;quot;texas&amp;quot;                &amp;quot;georgia&amp;quot;             
## [49] &amp;quot;hawaii&amp;quot;               &amp;quot;illinois&amp;quot;             &amp;quot;indiana&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So it seems we need small case long form state names which implies we need a mapping from the short names in our data. Some internet research may give us the site &lt;a href=&#34;https://www.census.gov/geo/reference/ansi_statetables.html&#34;&gt;American National Standards Institute (ANSI) Codes for States&lt;/a&gt; where we find a mapping under section &lt;code&gt;FIPS Codes for the States and the District of Columbia&lt;/code&gt;. We could try using some parsing tool to extract the table from the web page but for now we take a short cut and simply copy paste the data into a tab-delimited txt file and read the file with &lt;code&gt;readr::read_tsv()&lt;/code&gt;. We then cross-check if all abbreviations used in our loans data are present in the newly created mapping table.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;states &amp;lt;- readr::read_tsv(&amp;quot;./data//us_states.txt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   Name = col_character(),
##   `FIPS State Numeric Code` = col_integer(),
##   `Official USPS Code` = col_character()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(states)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Classes &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39; and &amp;#39;data.frame&amp;#39;:    51 obs. of  3 variables:
##  $ Name                   : chr  &amp;quot;Alabama&amp;quot; &amp;quot;Alaska&amp;quot; &amp;quot;Arizona&amp;quot; &amp;quot;Arkansas&amp;quot; ...
##  $ FIPS State Numeric Code: int  1 2 4 5 6 8 9 10 11 12 ...
##  $ Official USPS Code     : chr  &amp;quot;AL&amp;quot; &amp;quot;AK&amp;quot; &amp;quot;AZ&amp;quot; &amp;quot;AR&amp;quot; ...
##  - attr(*, &amp;quot;spec&amp;quot;)=List of 2
##   ..$ cols   :List of 3
##   .. ..$ Name                   : list()
##   .. .. ..- attr(*, &amp;quot;class&amp;quot;)= chr  &amp;quot;collector_character&amp;quot; &amp;quot;collector&amp;quot;
##   .. ..$ FIPS State Numeric Code: list()
##   .. .. ..- attr(*, &amp;quot;class&amp;quot;)= chr  &amp;quot;collector_integer&amp;quot; &amp;quot;collector&amp;quot;
##   .. ..$ Official USPS Code     : list()
##   .. .. ..- attr(*, &amp;quot;class&amp;quot;)= chr  &amp;quot;collector_character&amp;quot; &amp;quot;collector&amp;quot;
##   ..$ default: list()
##   .. ..- attr(*, &amp;quot;class&amp;quot;)= chr  &amp;quot;collector_guess&amp;quot; &amp;quot;collector&amp;quot;
##   ..- attr(*, &amp;quot;class&amp;quot;)= chr &amp;quot;col_spec&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# give some better variable names (spaces never helpful)
names(states) &amp;lt;- c(&amp;quot;name&amp;quot;, &amp;quot;fips_code&amp;quot;, &amp;quot;usps_code&amp;quot;)
# see if all states are covered
dplyr::setdiff(default_rate_state$addr_state, states$usps_code)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## character(0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Comparing the unique abbreviations in the loans data with the usps codes reveals that we are all covered so let’s bring the data together using &lt;code&gt;dplyr::left_join()&lt;/code&gt;. For details on dplyr join syntax, see &lt;a href=&#34;https://cran.r-project.org/web/packages/dplyr/vignettes/two-table.html&#34;&gt;Two-table verbs&lt;/a&gt;. To go with the &lt;code&gt;choroplethr&lt;/code&gt; conventions, we also need to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;have state names in lower case&lt;/li&gt;
&lt;li&gt;rename the mapping variable to &lt;code&gt;region&lt;/code&gt; and the numeric metric to &lt;code&gt;value&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;only select above two variables in the function call&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that we are re-assigning the data to itself to avoid creating a new table.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;default_rate_state &amp;lt;-
  default_rate_state %&amp;gt;%
  left_join(states[, c(&amp;quot;usps_code&amp;quot;, &amp;quot;name&amp;quot;)], 
            by = c(&amp;quot;addr_state&amp;quot; = &amp;quot;usps_code&amp;quot;)) %&amp;gt;%
  rename(region = name, value = default_rate) %&amp;gt;%
  mutate(region = tolower(region)) %&amp;gt;%
  select(region, value)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we can plot the data using the default colors from &lt;code&gt;choroplethr&lt;/code&gt;. As we are having data on state level, we use function &lt;code&gt;choroplethr::state_choropleth()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;choroplethr::state_choropleth(df = default_rate_state, 
                              title = &amp;quot;Default rate by State&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-47-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few points from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;default rate varies across states&lt;/li&gt;
&lt;li&gt;we may want to adjust the default binning&lt;/li&gt;
&lt;li&gt;we are only looking at default rate but not defaulted exposure (there may be states with many defaults but the defaulted amount is small)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We could do the same exercise but on a more granular level as we have zip codes available. They are truncated so we would have to find a way to work with them. They also have a high number of unique values so the map legend may be cramped if we were looking at all of US.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;correlation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;10&lt;/span&gt; Correlation&lt;/h1&gt;
&lt;p&gt;Many models rely on the notion of correlation between independent and dependent variables so a natural exploratoy visualization would be a correlation plot or correlogram. One library offering this is &lt;code&gt;corrplot&lt;/code&gt; with its main function &lt;code&gt;corrplot::corrplot()&lt;/code&gt;. The function takes as input the correlation matrix that can be produced with &lt;code&gt;stats::cor()&lt;/code&gt;. This of course is only defined for numeric, non-missing variables. In order to have a reasonable information density in the correlation matrix, we will kick out some variables with a missing value share of larger 50%.&lt;/p&gt;
&lt;p&gt;For a discussion on missing value treatment, see e.g. &lt;a href=&#34;http://www.stat.columbia.edu/~gelman/arm/missing.pdf&#34;&gt;Data Analysis Using Regression and Multilevel/Hierarchical Models - Chapter 25: Missing-data imputation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let’s again build a numeric variable vector after all previous operations and look at correlations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;num_vars &amp;lt;- 
  train %&amp;gt;% 
  sapply(is.numeric) %&amp;gt;% 
  which() %&amp;gt;% 
  names()

meta_train &amp;lt;- funModeling::df_status(train, print_results = FALSE)

meta_train %&amp;gt;%
  select(variable, p_zeros, p_na, unique) %&amp;gt;%
  filter_(~ variable %in% num_vars) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_zeros&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_na&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;unique&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;loan_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1369&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1369&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;funded_amnt_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.03&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8203&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;int_rate&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;540&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;installment&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64438&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;annual_inc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;41978&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;dti&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4072&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;delinq_2yrs&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;80.80&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;inq_last_6mths&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56.10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;27&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_delinq&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51.43&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;152&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_record&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;84.70&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;open_acc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;74&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;pub_rec&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;84.70&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_bal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.38&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68979&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;revol_util&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.40&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1312&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_acc&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28.85&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;209810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;out_prncp_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28.85&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;224620&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.01&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;423038&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_pymnt_inv&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.04&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;424921&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_prncp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;222003&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_int&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;287778&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;total_rec_late_fee&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98.59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5169&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;recoveries&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.22&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18681&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collection_recovery_fee&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;97.35&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16796&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;last_pymnt_amnt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;197434&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;collections_12_mths_ex_med&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98.65&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mths_since_last_major_derog&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;75.06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;167&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;acc_now_delinq&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99.53&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_coll_amt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;78.94&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9319&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;tot_cur_bal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.01&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;293158&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Finally, we can produce a correlation plot. Dealing with missing values, using option &lt;code&gt;use = &amp;quot;pairwise.complete.obs&amp;quot;&lt;/code&gt; in function &lt;code&gt;stats::cor()&lt;/code&gt; is considered bad practice as it uses pair matching and correlations may not be comparable, see e.g. &lt;a href=&#34;http://bwlewis.github.io/covar/missing.html&#34;&gt;Pairwise-complete correlation considered dangerous&lt;/a&gt;. Alternatively, we can use option &lt;code&gt;use = complete.obs&lt;/code&gt; which only considers complete observations but may discard a lot of data. However, as we have looked into the meta information, after our wrangling the proportion of missing values for the numeric variables has dropped a lot so we should be fine.&lt;/p&gt;
&lt;p&gt;Once we have the correlation matrix, we can use the function &lt;code&gt;corrplot::corrplot()&lt;/code&gt; from the &lt;code&gt;corrplot&lt;/code&gt; library. It offers a number of different visualization options. For details, see &lt;a href=&#34;https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html&#34;&gt;An Introduction to corrplot Package&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(corrplot)
corrplot::corrplot(cor(train[, num_vars], use = &amp;quot;complete.obs&amp;quot;), 
                   method = &amp;quot;pie&amp;quot;, type = &amp;quot;upper&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-49-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few things from the plot&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;overall correlation between variables seems low but there are a few highly correlated ones&lt;/li&gt;
&lt;li&gt;some highly correlated variables may indicate very similar information, e.g. &lt;code&gt;mths_since_last_delinq&lt;/code&gt; and &lt;code&gt;mths_since_last_major_derog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;some variables are perfectly correlated and thus should be removed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rather than a visual inspection, an (automatic) inspection of correlations and removal of highly correlated features can be done via function &lt;code&gt;caret::findCorrelation()&lt;/code&gt; with a defined &lt;code&gt;cutoff&lt;/code&gt; parameter. If two variables have a high correlation, the function looks at the mean absolute correlation of each variable and removes the variable with the largest mean absolute correlation. Using &lt;code&gt;exact = TRUE&lt;/code&gt; will cause the function to re-evaluate the average correlations at each step while &lt;code&gt;exact = FALSE&lt;/code&gt; uses all the correlations regardless of whether they have been eliminated or not. The exact calculations will remove a smaller number of predictors but can be much slower when the problem dimensions are “big”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;caret::findCorrelation(cor(train[, num_vars], use = &amp;quot;complete.obs&amp;quot;), 
                       names = TRUE, cutoff = .5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;loan_amnt&amp;quot;                   &amp;quot;funded_amnt&amp;quot;                
##  [3] &amp;quot;funded_amnt_inv&amp;quot;             &amp;quot;installment&amp;quot;                
##  [5] &amp;quot;total_pymnt_inv&amp;quot;             &amp;quot;total_pymnt&amp;quot;                
##  [7] &amp;quot;total_rec_prncp&amp;quot;             &amp;quot;out_prncp&amp;quot;                  
##  [9] &amp;quot;total_acc&amp;quot;                   &amp;quot;mths_since_last_record&amp;quot;     
## [11] &amp;quot;mths_since_last_major_derog&amp;quot; &amp;quot;recoveries&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Given above, we remove a few variables&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vars_to_remove &amp;lt;- 
  c(&amp;quot;loan_amnt&amp;quot;, &amp;quot;funded_amnt&amp;quot;, &amp;quot;funded_amnt_inv&amp;quot;, &amp;quot;installment&amp;quot;,
    &amp;quot;total_pymnt_inv&amp;quot;, &amp;quot;total_rec_prncp&amp;quot;, &amp;quot;mths_since_last_delinq&amp;quot;, 
    &amp;quot;out_prncp&amp;quot;, &amp;quot;total_pymnt&amp;quot;, &amp;quot;total_rec_int&amp;quot;, &amp;quot;total_acc&amp;quot;,
    &amp;quot;mths_since_last_record&amp;quot;, &amp;quot;recoveries&amp;quot;)

train &amp;lt;- train %&amp;gt;% select(-one_of(vars_to_remove))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;11&lt;/span&gt; Summary plots&lt;/h1&gt;
&lt;p&gt;An alternative to producing individual exploratory plots is using summary plots that come with sensible default settings and display the data according to its data type (numeric or categorical). The advantages are that a lot of information can be put into one graph and potential relationships may be spotted more easily. The disadvantages are potential performance issues when plotting many variables of a large dataset and readability issues in case of many dimensions for categorical variables. These disadvantages can be somewhat remediated by looking at summary plots after a lot of variables have already been discarded due to other findings (as we have done here). To show the general idea, we use the &lt;code&gt;GGally&lt;/code&gt; library which builds on top of &lt;code&gt;ggplot2&lt;/code&gt; and provides some nice visualization functions. We choose a subset of variables for illustration of the &lt;code&gt;GGally::ggpairs()&lt;/code&gt; function. Even with this subset the production of the graph may take some time depending on your hardware. For a theoretical background, see &lt;a href=&#34;http://www.bricol.net/downloads/pubs/Emerson_et_al.2013.pdf&#34;&gt;The Generalized Pairs Plot&lt;/a&gt;. For the many customization options, see &lt;a href=&#34;http://ggobi.github.io/ggally&#34;&gt;GGally&lt;/a&gt;. As always when visualizing a lot of information, there is a trade-off between information density and visualization efficiency. The more variables are selected for the plot, the more difficult it becomes to efficiently visualize it. This needs some playing around or a really big screen.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simply leaving the variable &lt;code&gt;default&lt;/code&gt; as boolean would produce an error in &lt;code&gt;ggpairs&lt;/code&gt; (or rather in &lt;code&gt;ggplot2&lt;/code&gt; which it calls): &lt;code&gt;Error: StatBin requires a continuous x variable the x variable is discrete. Perhaps you want stat=&amp;quot;count&amp;quot;?&lt;/code&gt;. Besides, we like it to be treated as categorical so we convert it to character for this function call.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(GGally)
plot_ggpairs &amp;lt;-
  train %&amp;gt;%
  select(annual_inc, term, grade, default) %&amp;gt;%
  mutate(default = as.character(default)) %&amp;gt;%
  ggpairs()

plot_ggpairs&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-52-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The resulting graph has a lot of information in it and we won’t go into further detail here but the most important points to read the graph properly. In the columns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;for single continuous numeric variable plots density estimate&lt;/li&gt;
&lt;li&gt;for continuous numeric variable against another continuous numeric variable plots scatterplot&lt;/li&gt;
&lt;li&gt;for continuous numeric variable against another categorical variable plots histogram&lt;/li&gt;
&lt;li&gt;for single categorical variable plots histogram&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the rows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;for continuous numeric variable against another continuous numeric variable plots correlation&lt;/li&gt;
&lt;li&gt;for continuous numeric variable against another categorical variable plots boxplot by dimension of categorical variable&lt;/li&gt;
&lt;li&gt;for categorical variable against another categorical variable plots historgram by dimension of y-axis categorical variable&lt;/li&gt;
&lt;li&gt;for categorical variable against another continuous variable plots scatterplot by dimension of categorical variable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another interesting plot would be to visualize the density (estimates) of the numeric variables color-coded by the classes of the target variable (here: default/non-default) to inspect whether there are visual clues about differences in the distributions. We can achieve this by using &lt;code&gt;ggplot&lt;/code&gt; but need to bring the data into a long format rather than its current wide format (see &lt;a href=&#34;http://garrettgman.github.io/tidying/&#34;&gt;Data Science with R - Chapter Data Tidying&lt;/a&gt; for details on reshaping). We use &lt;code&gt;tidyr::gather()&lt;/code&gt; to bring the numeric variables into a long format and then add the target variable again. Note that there are different lengths of the reshaped data and the original target variable vector. As &lt;code&gt;dplyr::mutate()&lt;/code&gt; will not properly take care of the recycling rules, we have to recycle (repeat) the variable &lt;code&gt;default&lt;/code&gt; manually to have the same length as the reshaped train data. See &lt;a href=&#34;https://cran.r-project.org/doc/manuals/R-intro.pdf&#34;&gt;An Introduction to R - Chapter 2.2: Vector arithmetic&lt;/a&gt; how &lt;code&gt;recycling&lt;/code&gt; works in general.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vectors occurring in the same expression need not all be of the same length. If they are not, the value of the expression is a vector with the same length as the longest vector which occurs in the expression. Shorter vectors in the expression are recycled as often as need be (perhaps fractionally) until they match the length of the longest vector. In particular a constant is simply repeated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note that we make use of a few plot parameters to make the visualization easier to follow. We like &lt;code&gt;default&lt;/code&gt; to be a factor so the densities are independent of class distribution. First, we switch the levels of variable &lt;code&gt;default&lt;/code&gt; to have &lt;code&gt;TRUE&lt;/code&gt; on top (as the highest objective is to get the true positive right). We use the &lt;code&gt;fill&lt;/code&gt; and &lt;code&gt;color&lt;/code&gt; parameters to encode with the target variable. This allows a visual distinction of overlaying densities. In addition, we set the &lt;code&gt;alpha&lt;/code&gt; value to have the area under the curve transparently filled. For color selection we make use of &lt;code&gt;brewer&lt;/code&gt; scales which offer a well selected pallette of colors. Finally, we split the plots by variable with &lt;code&gt;facet_wrap&lt;/code&gt; allowing the scales of each indifidual plot to be &lt;code&gt;free&lt;/code&gt; and defining the number of columns via &lt;code&gt;ncol&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;num_vars &amp;lt;- train %&amp;gt;% sapply(is.numeric) %&amp;gt;% which() %&amp;gt;% names()

train %&amp;gt;%
  select_(.dots = num_vars) %&amp;gt;%
  gather(measure, value) %&amp;gt;%
  mutate(default = factor(rep(x = train$default, 
                              length.out = length(num_vars) * dim(train)[1]), 
                          levels = c(&amp;quot;TRUE&amp;quot;, &amp;quot;FALSE&amp;quot;))) %&amp;gt;%
  ggplot(data = ., aes(x = value, fill = default, 
                       color = default, order = -default)) +
  geom_density(alpha = 0.3, size = 0.5) +
  scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;) +
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) +
  facet_wrap( ~ measure, scales = &amp;quot;free&amp;quot;, ncol = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-53-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few things from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;most of the densities are right-skewed with probably a few outliers extending the x-axis which makes discerning patterns in the area with highest mass difficult&lt;/li&gt;
&lt;li&gt;even with above mentioned visualization impediment it seems that there is not a lot of difference between default and non-default loans for most variables&lt;/li&gt;
&lt;li&gt;some densities seem wobbly for the majority class (e.g. &lt;code&gt;open_acc&lt;/code&gt;) which is caused by the fact that the smoothing algorithm has many more data points to smooth in between but the density follows the same general shape&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given above observations, we can try to improve the plot by removing (adjusting) outliers. There are many different methods that can be used, see e.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pdfs.semanticscholar.org/be78/b80341d0bda8bfce9a9c3b4a04953fe3a11d.pdf&#34;&gt;A Survey of Outlier Detection Methodologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.dbs.ifi.lmu.de/~zimek/publications/SDM2012/SDM12-outlierevaluation.pdf&#34;&gt;On Evaluation of Outlier Rankings and Outlier Scores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ww2.amstat.org/sections/srms/Proceedings/y2012/files/304068_72402.pdf&#34;&gt;Outliers: An Evaluation of Methodologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://onlinelibrary.wiley.com/doi/10.1111/j.2041-210X.2009.00001.x/full&#34;&gt;A protocol for data exploration to avoid common statistical problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datascienceplus.com/outlier-detection-and-treatment-with-r/&#34;&gt;Outlier detection and treatment with R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eng.tau.ac.il/~bengal/outlier.pdf&#34;&gt;Data Mining and Knowledge Discovery Handbook - Chapter 1: Outlier Detection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these methods focus on removing outliers for modeling which requires a lot of care and understanding how model characteristics change when removing / replacing outliers. In our case, we can be more pragmatic as we are only interested in improving our understanding of the mass of the distribution in a graphical way to see if there are easily discernible pattern differences between the two outcomes of our target variable. For this, we like to replace outliers with some sensible value derived from the distribution of the particular variable. One could use the interquartile range as it is used in boxplots. We will use &lt;a href=&#34;https://en.wikipedia.org/wiki/Winsorizing&#34;&gt;winsorization&lt;/a&gt;, i.e. replacing outliers with a specified percentile, e.g. 95%. As this is a fairly simple task, we write our own function to do that. Alternatively, one may use e.g. function &lt;code&gt;psych::winsor()&lt;/code&gt; which trims outliers from both ends of the distribution. Since we have already seen, that there is no negative value present, we only cut from the right side of the distribution. We call the function &lt;code&gt;winsor_outlier&lt;/code&gt; and allow settings for the percentile and removing NA values. The design is inspired by an SO question &lt;a href=&#34;https://stackoverflow.com/questions/13339685/how-to-replace-outliers-with-the-5th-and-95th-percentile-values-in-r&#34;&gt;How to replace outliers with the 5th and 95th percentile values in R&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;winsor_outlier &amp;lt;- function(x, cutoff = .95, na.rm = FALSE){
    quantiles &amp;lt;- quantile(x, cutoff, na.rm = na.rm)
    x[x &amp;gt; quantiles] &amp;lt;- quantiles
    x
    }

train %&amp;gt;%
  select_(.dots = num_vars) %&amp;gt;%
  mutate_all(.funs = winsor_outlier, cutoff = .95, na.rm = TRUE) %&amp;gt;%
  gather(measure, value) %&amp;gt;%
  mutate(default = factor(rep(x = train$default, 
                              length.out = length(num_vars)*dim(train)[1]), 
                          levels = c(&amp;quot;TRUE&amp;quot;, &amp;quot;FALSE&amp;quot;))) %&amp;gt;%
  ggplot(data = ., aes(x = value, fill = default, 
                       color = default, order = -default)) +
  geom_density(alpha = 0.3, size = 0.5) +
  scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;) +
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) +
  facet_wrap( ~ measure, scales = &amp;quot;free&amp;quot;, ncol = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-54-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few things from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;most densities don’t show a discernible difference between default and non-default&lt;/li&gt;
&lt;li&gt;ignore the densities centered around zero as they stem from too few observations&lt;/li&gt;
&lt;li&gt;some densities show a bump on the right stemming from the outlier replacement and thus indicating that there is actually data in the tail&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Interestingly, variable &lt;code&gt;out_prncp_inv&lt;/code&gt; shows a significant bump around zero for &lt;code&gt;default == FALSE&lt;/code&gt; which can be confirmed via a count. However, the description tells us that this variable represents &lt;code&gt;Remaining outstanding principal for portion of total amount funded by investors&lt;/code&gt; so it’s unclear how useful it is (especially when knowing that this variable will only be available after a loan has been granted).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train %&amp;gt;% 
  select(default, out_prncp_inv) %&amp;gt;% 
  filter(out_prncp_inv == 0) %&amp;gt;%
  group_by(default) %&amp;gt;% 
  summarize(n = n())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 2
##   default      n
##     &amp;lt;lgl&amp;gt;  &amp;lt;int&amp;gt;
## 1   FALSE 204207
## 2    TRUE    613&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Overall, it seems from visual inspection that the numeric variables do not contain a lot of information gain regarding the classification of the target variable. One obvious exception is the interest rate which is a function of the expected risk of the borrower probably mostly driven by the rating. Here we see that defaulted clients tend to have higher interest rates and also seem to have more outliers in the tail.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A side note on plotting&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If your screen is too small, you can export any plot to e.g. svg or pdf using graphics devices of the cairo API in package &lt;code&gt;grDevices&lt;/code&gt; (usually part of base R distro) and scale the plot size to something bigger (especially helpful if it’s a long plot). Here we show an example for the previously created &lt;code&gt;ggpairs&lt;/code&gt; plot stored as pdf.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cairo_pdf(filename = paste0(path, &amp;quot;/plot_ggpairs.pdf&amp;quot;),
    width=15,
    height=20,
    pointsize=10)
plot_ggpairs
dev.off()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;modeling&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;12&lt;/span&gt; Modeling&lt;/h1&gt;
&lt;div id=&#34;model-options&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.1&lt;/span&gt; Model options&lt;/h2&gt;
&lt;p&gt;There are a couple of different model options available for a supervised binary classification problem such as determining whether a loan will default or not. In general, we may distinguish the following model approaches (among others):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;logistic regression&lt;/li&gt;
&lt;li&gt;linear discriminant analysis&lt;/li&gt;
&lt;li&gt;k-nearest neighbors (kNN)&lt;/li&gt;
&lt;li&gt;trees&lt;/li&gt;
&lt;li&gt;random forests&lt;/li&gt;
&lt;li&gt;boosting&lt;/li&gt;
&lt;li&gt;support vector machines (SVM)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, there are multiple ways to assess model performance such as model parameters, cross-validation, bootstrap and multiple feature selection methods such as ridge regression, the lasso, principal component anaylsis, etc.&lt;/p&gt;
&lt;p&gt;We will look at some of those models and methods and see how they compare. For a more detailed treatment and further background, an accessible text is &lt;a href=&#34;http://www-bcf.usc.edu/~gareth/ISL/&#34;&gt;“An Introduction to Statistical Learning”&lt;/a&gt; or for a more advanced treatment &lt;a href=&#34;http://statweb.stanford.edu/~tibs/ElemStatLearn/&#34;&gt;“The Elements of Statistical Learning: Data Mining, Inference, and Prediction”&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;imbalanced-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.2&lt;/span&gt; Imbalanced data&lt;/h2&gt;
&lt;p&gt;Before we can think about any modeling, we have to realize that the dataset is highly imbalanced, i.e. the target variable has a very low proportion of defaults (namely 0.0249963). This can lead to several issues in many algorithms, e.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;biased accuracy&lt;/li&gt;
&lt;li&gt;loss functions attempt to optimize quantities such as error rate, not taking the data distribution into consideration&lt;/li&gt;
&lt;li&gt;errors have the same cost (not pertaining to imbalanced data only)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details can be found in&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://svds.com/learning-imbalanced-classes/&#34;&gt;Learning from Imbalanced Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2016/03/practical-guide-deal-imbalanced-classification-problems/&#34;&gt;Practical Guide to deal with Imbalanced Classification Problems in R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://topepo.github.io/caret/subsampling-for-class-imbalances.html&#34;&gt;The caret package: Subsampling For Class Imbalances&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are a couple of approaches to deal with the problem which can be divided into (taken from &lt;a href=&#34;https://svds.com/learning-imbalanced-classes/&#34;&gt;Learning from Imbalanced Classes&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;do nothing (not a good idea in general)&lt;/li&gt;
&lt;li&gt;balance training set
&lt;ul&gt;
&lt;li&gt;oversample minority class&lt;/li&gt;
&lt;li&gt;undersample majority class&lt;/li&gt;
&lt;li&gt;synthesize new minority classes&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;throw away minority examples and switch to an anomaly detection framework&lt;/li&gt;
&lt;li&gt;at the algorithm level, or after it:
&lt;ul&gt;
&lt;li&gt;adjust the class weight (misclassification costs)&lt;/li&gt;
&lt;li&gt;adjust the decision threshold&lt;/li&gt;
&lt;li&gt;modify an existing algorithm to be more sensitive to rare classes&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;construct an entirely new algorithm to perform well on imbalanced data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will focus on balancing the training set. There are basically three options available&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;undersample majority class (randomly or informed)&lt;/li&gt;
&lt;li&gt;oversample minority class (randomly or informed)&lt;/li&gt;
&lt;li&gt;do a mixture of both (e.g. SMOTE or ROSE method)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Undersampling the majority class may lose information but via decreasing dataset also lead to more computational efficiency. We also tried SMOTE and ROSE but functions &lt;code&gt;DMwR::SMOTE()&lt;/code&gt; and &lt;code&gt;ROSE::ROSE()&lt;/code&gt; seem to be very picky about their input and so far we failed to run them. For details on SMOTE, see &lt;a href=&#34;https://www.jair.org/media/953/live-953-2037-jair.pdf&#34;&gt;SMOTE: Synthetic Minority Over-sampling Technique&lt;/a&gt; and for details on ROSE, see &lt;a href=&#34;https://journal.r-project.org/archive/2014-1/menardi-lunardon-torelli.pdf&#34;&gt;ROSE: A Package for Binary Imbalanced Learning&lt;/a&gt;. As pointed out &lt;a href=&#34;https://shiring.github.io/machine_learning/2017/04/02/unbalanced&#34;&gt;here&lt;/a&gt; a random sampling for either under- or oversampling is not the best idea. It is recommended to use cross-validation and perform over- or under-sampling on each fold independently to get an honest estimate of model performance. In fact, function &lt;code&gt;caret::train()&lt;/code&gt; also allows the re-balancing of data during the training of a model via &lt;code&gt;caret::trainControl(sampling = &amp;quot;...&amp;quot;)&lt;/code&gt;, see &lt;a href=&#34;https://topepo.github.io/caret/subsampling-for-class-imbalances.html&#34;&gt;The caret package 11.2: Subsampling During Resampling&lt;/a&gt; for details. For now, we go with undersampling which still leaves a fair amount of training observations (at least for non-deep learning approaches).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_down &amp;lt;- 
  caret::downSample(x = train[, !(names(train) %in% c(&amp;quot;default&amp;quot;))], 
                    y = as.factor(train$default), yname = &amp;quot;default&amp;quot;)

base::prop.table(table(train_down$default))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## FALSE  TRUE 
##   0.5   0.5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;base::table(train_down$default)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## FALSE  TRUE 
## 17745 17745&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;a-note-on-modeling-libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.3&lt;/span&gt; A note on modeling libraries&lt;/h2&gt;
&lt;p&gt;There are many modeling libraries in R (in fact it is one of the major reasons for its popularity) and they can be very roughly distinguished into&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;general modeling libraries comprising many different model functions (sometimes wrappers around specialized model libraries)&lt;/li&gt;
&lt;li&gt;specialized modeling libraries focusing on only one or a certain class of models&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will be using general modeling libraries and in particular the (standard) library shipping with R &lt;a href=&#34;https://stat.ethz.ch/R-manual/R-devel/library/stats/html/00Index.html&#34;&gt;stats&lt;/a&gt; and a popular library &lt;a href=&#34;http://topepo.github.io/caret/index.html&#34;&gt;caret&lt;/a&gt;. Another library often used is &lt;a href=&#34;https://cran.r-project.org/web/packages/rms/index.html&#34;&gt;rms&lt;/a&gt;. The advantage of the general libraries is their easier access via a common API, usually a fairly comprehensive documentation and a relatively large user base which means high chance that someone already did what you like to do.&lt;/p&gt;
&lt;div id=&#34;a-note-on-caret-library-in-particular&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.3.1&lt;/span&gt; A note on caret library in particular&lt;/h3&gt;
&lt;p&gt;The caret package (short for _C_lassification _A_nd _RE_gression _T_raining) is a set of functions that attempt to streamline the process for creating predictive models. The package contains tools for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data splitting&lt;/li&gt;
&lt;li&gt;pre-processing&lt;/li&gt;
&lt;li&gt;feature selection&lt;/li&gt;
&lt;li&gt;model tuning using resampling&lt;/li&gt;
&lt;li&gt;variable importance estimation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;as well as other functionality. It aims at providing a uniform interface to R modeling functions themselves, as well as a way to standardize common tasks (such as parameter tuning and variable importance). The &lt;a href=&#34;https://topepo.github.io/caret/train-models-by-tag.html&#34;&gt;documentation&lt;/a&gt; gives an overview of the models that can be used via the &lt;code&gt;caret::train()&lt;/code&gt; function which is the workhorse for building models. A quick look at available models reveals that there is a lot of choice.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(caret::getModelInfo())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] &amp;quot;ada&amp;quot;                 &amp;quot;AdaBag&amp;quot;              &amp;quot;AdaBoost.M1&amp;quot;        
##   [4] &amp;quot;adaboost&amp;quot;            &amp;quot;amdai&amp;quot;               &amp;quot;ANFIS&amp;quot;              
##   [7] &amp;quot;avNNet&amp;quot;              &amp;quot;awnb&amp;quot;                &amp;quot;awtan&amp;quot;              
##  [10] &amp;quot;bag&amp;quot;                 &amp;quot;bagEarth&amp;quot;            &amp;quot;bagEarthGCV&amp;quot;        
##  [13] &amp;quot;bagFDA&amp;quot;              &amp;quot;bagFDAGCV&amp;quot;           &amp;quot;bam&amp;quot;                
##  [16] &amp;quot;bartMachine&amp;quot;         &amp;quot;bayesglm&amp;quot;            &amp;quot;binda&amp;quot;              
##  [19] &amp;quot;blackboost&amp;quot;          &amp;quot;blasso&amp;quot;              &amp;quot;blassoAveraged&amp;quot;     
##  [22] &amp;quot;bridge&amp;quot;              &amp;quot;brnn&amp;quot;                &amp;quot;BstLm&amp;quot;              
##  [25] &amp;quot;bstSm&amp;quot;               &amp;quot;bstTree&amp;quot;             &amp;quot;C5.0&amp;quot;               
##  [28] &amp;quot;C5.0Cost&amp;quot;            &amp;quot;C5.0Rules&amp;quot;           &amp;quot;C5.0Tree&amp;quot;           
##  [31] &amp;quot;cforest&amp;quot;             &amp;quot;chaid&amp;quot;               &amp;quot;CSimca&amp;quot;             
##  [34] &amp;quot;ctree&amp;quot;               &amp;quot;ctree2&amp;quot;              &amp;quot;cubist&amp;quot;             
##  [37] &amp;quot;dda&amp;quot;                 &amp;quot;deepboost&amp;quot;           &amp;quot;DENFIS&amp;quot;             
##  [40] &amp;quot;dnn&amp;quot;                 &amp;quot;dwdLinear&amp;quot;           &amp;quot;dwdPoly&amp;quot;            
##  [43] &amp;quot;dwdRadial&amp;quot;           &amp;quot;earth&amp;quot;               &amp;quot;elm&amp;quot;                
##  [46] &amp;quot;enet&amp;quot;                &amp;quot;evtree&amp;quot;              &amp;quot;extraTrees&amp;quot;         
##  [49] &amp;quot;fda&amp;quot;                 &amp;quot;FH.GBML&amp;quot;             &amp;quot;FIR.DM&amp;quot;             
##  [52] &amp;quot;foba&amp;quot;                &amp;quot;FRBCS.CHI&amp;quot;           &amp;quot;FRBCS.W&amp;quot;            
##  [55] &amp;quot;FS.HGD&amp;quot;              &amp;quot;gam&amp;quot;                 &amp;quot;gamboost&amp;quot;           
##  [58] &amp;quot;gamLoess&amp;quot;            &amp;quot;gamSpline&amp;quot;           &amp;quot;gaussprLinear&amp;quot;      
##  [61] &amp;quot;gaussprPoly&amp;quot;         &amp;quot;gaussprRadial&amp;quot;       &amp;quot;gbm_h2o&amp;quot;            
##  [64] &amp;quot;gbm&amp;quot;                 &amp;quot;gcvEarth&amp;quot;            &amp;quot;GFS.FR.MOGUL&amp;quot;       
##  [67] &amp;quot;GFS.GCCL&amp;quot;            &amp;quot;GFS.LT.RS&amp;quot;           &amp;quot;GFS.THRIFT&amp;quot;         
##  [70] &amp;quot;glm.nb&amp;quot;              &amp;quot;glm&amp;quot;                 &amp;quot;glmboost&amp;quot;           
##  [73] &amp;quot;glmnet_h2o&amp;quot;          &amp;quot;glmnet&amp;quot;              &amp;quot;glmStepAIC&amp;quot;         
##  [76] &amp;quot;gpls&amp;quot;                &amp;quot;hda&amp;quot;                 &amp;quot;hdda&amp;quot;               
##  [79] &amp;quot;hdrda&amp;quot;               &amp;quot;HYFIS&amp;quot;               &amp;quot;icr&amp;quot;                
##  [82] &amp;quot;J48&amp;quot;                 &amp;quot;JRip&amp;quot;                &amp;quot;kernelpls&amp;quot;          
##  [85] &amp;quot;kknn&amp;quot;                &amp;quot;knn&amp;quot;                 &amp;quot;krlsPoly&amp;quot;           
##  [88] &amp;quot;krlsRadial&amp;quot;          &amp;quot;lars&amp;quot;                &amp;quot;lars2&amp;quot;              
##  [91] &amp;quot;lasso&amp;quot;               &amp;quot;lda&amp;quot;                 &amp;quot;lda2&amp;quot;               
##  [94] &amp;quot;leapBackward&amp;quot;        &amp;quot;leapForward&amp;quot;         &amp;quot;leapSeq&amp;quot;            
##  [97] &amp;quot;Linda&amp;quot;               &amp;quot;lm&amp;quot;                  &amp;quot;lmStepAIC&amp;quot;          
## [100] &amp;quot;LMT&amp;quot;                 &amp;quot;loclda&amp;quot;              &amp;quot;logicBag&amp;quot;           
## [103] &amp;quot;LogitBoost&amp;quot;          &amp;quot;logreg&amp;quot;              &amp;quot;lssvmLinear&amp;quot;        
## [106] &amp;quot;lssvmPoly&amp;quot;           &amp;quot;lssvmRadial&amp;quot;         &amp;quot;lvq&amp;quot;                
## [109] &amp;quot;M5&amp;quot;                  &amp;quot;M5Rules&amp;quot;             &amp;quot;manb&amp;quot;               
## [112] &amp;quot;mda&amp;quot;                 &amp;quot;Mlda&amp;quot;                &amp;quot;mlp&amp;quot;                
## [115] &amp;quot;mlpKerasDecay&amp;quot;       &amp;quot;mlpKerasDecayCost&amp;quot;   &amp;quot;mlpKerasDropout&amp;quot;    
## [118] &amp;quot;mlpKerasDropoutCost&amp;quot; &amp;quot;mlpML&amp;quot;               &amp;quot;mlpSGD&amp;quot;             
## [121] &amp;quot;mlpWeightDecay&amp;quot;      &amp;quot;mlpWeightDecayML&amp;quot;    &amp;quot;monmlp&amp;quot;             
## [124] &amp;quot;msaenet&amp;quot;             &amp;quot;multinom&amp;quot;            &amp;quot;mxnet&amp;quot;              
## [127] &amp;quot;mxnetAdam&amp;quot;           &amp;quot;naive_bayes&amp;quot;         &amp;quot;nb&amp;quot;                 
## [130] &amp;quot;nbDiscrete&amp;quot;          &amp;quot;nbSearch&amp;quot;            &amp;quot;neuralnet&amp;quot;          
## [133] &amp;quot;nnet&amp;quot;                &amp;quot;nnls&amp;quot;                &amp;quot;nodeHarvest&amp;quot;        
## [136] &amp;quot;null&amp;quot;                &amp;quot;OneR&amp;quot;                &amp;quot;ordinalNet&amp;quot;         
## [139] &amp;quot;ORFlog&amp;quot;              &amp;quot;ORFpls&amp;quot;              &amp;quot;ORFridge&amp;quot;           
## [142] &amp;quot;ORFsvm&amp;quot;              &amp;quot;ownn&amp;quot;                &amp;quot;pam&amp;quot;                
## [145] &amp;quot;parRF&amp;quot;               &amp;quot;PART&amp;quot;                &amp;quot;partDSA&amp;quot;            
## [148] &amp;quot;pcaNNet&amp;quot;             &amp;quot;pcr&amp;quot;                 &amp;quot;pda&amp;quot;                
## [151] &amp;quot;pda2&amp;quot;                &amp;quot;penalized&amp;quot;           &amp;quot;PenalizedLDA&amp;quot;       
## [154] &amp;quot;plr&amp;quot;                 &amp;quot;pls&amp;quot;                 &amp;quot;plsRglm&amp;quot;            
## [157] &amp;quot;polr&amp;quot;                &amp;quot;ppr&amp;quot;                 &amp;quot;PRIM&amp;quot;               
## [160] &amp;quot;protoclass&amp;quot;          &amp;quot;pythonKnnReg&amp;quot;        &amp;quot;qda&amp;quot;                
## [163] &amp;quot;QdaCov&amp;quot;              &amp;quot;qrf&amp;quot;                 &amp;quot;qrnn&amp;quot;               
## [166] &amp;quot;randomGLM&amp;quot;           &amp;quot;ranger&amp;quot;              &amp;quot;rbf&amp;quot;                
## [169] &amp;quot;rbfDDA&amp;quot;              &amp;quot;Rborist&amp;quot;             &amp;quot;rda&amp;quot;                
## [172] &amp;quot;regLogistic&amp;quot;         &amp;quot;relaxo&amp;quot;              &amp;quot;rf&amp;quot;                 
## [175] &amp;quot;rFerns&amp;quot;              &amp;quot;RFlda&amp;quot;               &amp;quot;rfRules&amp;quot;            
## [178] &amp;quot;ridge&amp;quot;               &amp;quot;rlda&amp;quot;                &amp;quot;rlm&amp;quot;                
## [181] &amp;quot;rmda&amp;quot;                &amp;quot;rocc&amp;quot;                &amp;quot;rotationForest&amp;quot;     
## [184] &amp;quot;rotationForestCp&amp;quot;    &amp;quot;rpart&amp;quot;               &amp;quot;rpart1SE&amp;quot;           
## [187] &amp;quot;rpart2&amp;quot;              &amp;quot;rpartCost&amp;quot;           &amp;quot;rpartScore&amp;quot;         
## [190] &amp;quot;rqlasso&amp;quot;             &amp;quot;rqnc&amp;quot;                &amp;quot;RRF&amp;quot;                
## [193] &amp;quot;RRFglobal&amp;quot;           &amp;quot;rrlda&amp;quot;               &amp;quot;RSimca&amp;quot;             
## [196] &amp;quot;rvmLinear&amp;quot;           &amp;quot;rvmPoly&amp;quot;             &amp;quot;rvmRadial&amp;quot;          
## [199] &amp;quot;SBC&amp;quot;                 &amp;quot;sda&amp;quot;                 &amp;quot;sdwd&amp;quot;               
## [202] &amp;quot;simpls&amp;quot;              &amp;quot;SLAVE&amp;quot;               &amp;quot;slda&amp;quot;               
## [205] &amp;quot;smda&amp;quot;                &amp;quot;snn&amp;quot;                 &amp;quot;sparseLDA&amp;quot;          
## [208] &amp;quot;spikeslab&amp;quot;           &amp;quot;spls&amp;quot;                &amp;quot;stepLDA&amp;quot;            
## [211] &amp;quot;stepQDA&amp;quot;             &amp;quot;superpc&amp;quot;             &amp;quot;svmBoundrangeString&amp;quot;
## [214] &amp;quot;svmExpoString&amp;quot;       &amp;quot;svmLinear&amp;quot;           &amp;quot;svmLinear2&amp;quot;         
## [217] &amp;quot;svmLinear3&amp;quot;          &amp;quot;svmLinearWeights&amp;quot;    &amp;quot;svmLinearWeights2&amp;quot;  
## [220] &amp;quot;svmPoly&amp;quot;             &amp;quot;svmRadial&amp;quot;           &amp;quot;svmRadialCost&amp;quot;      
## [223] &amp;quot;svmRadialSigma&amp;quot;      &amp;quot;svmRadialWeights&amp;quot;    &amp;quot;svmSpectrumString&amp;quot;  
## [226] &amp;quot;tan&amp;quot;                 &amp;quot;tanSearch&amp;quot;           &amp;quot;treebag&amp;quot;            
## [229] &amp;quot;vbmpRadial&amp;quot;          &amp;quot;vglmAdjCat&amp;quot;          &amp;quot;vglmContRatio&amp;quot;      
## [232] &amp;quot;vglmCumulative&amp;quot;      &amp;quot;widekernelpls&amp;quot;       &amp;quot;WM&amp;quot;                 
## [235] &amp;quot;wsrf&amp;quot;                &amp;quot;xgbLinear&amp;quot;           &amp;quot;xgbTree&amp;quot;            
## [238] &amp;quot;xyf&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-preparation-for-modeling&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.4&lt;/span&gt; Data preparation for modeling&lt;/h2&gt;
&lt;p&gt;A number of models require data preparation in advance so here we are going to perform some pre-processing so that all models can work with the data. Note that a few model functions also allow the pre-processing during the training step (e.g. scale and center) but it is computationally more efficient to do at least some pre-processing before.&lt;/p&gt;
&lt;div id=&#34;proper-names-for-character-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.4.1&lt;/span&gt; Proper names for character variables&lt;/h3&gt;
&lt;p&gt;Some models require a particular naming scheme for the values of character variables (e.g. no spcaes). The &lt;code&gt;base::make.names()&lt;/code&gt; function does just that.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vars_to_mutate &amp;lt;-
  train_down %&amp;gt;%
  select(which(sapply(.,is.character))) %&amp;gt;%
  names()

vars_to_mutate&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;term&amp;quot;                &amp;quot;grade&amp;quot;               &amp;quot;emp_length&amp;quot;         
##  [4] &amp;quot;home_ownership&amp;quot;      &amp;quot;verification_status&amp;quot; &amp;quot;pymnt_plan&amp;quot;         
##  [7] &amp;quot;purpose&amp;quot;             &amp;quot;zip_code&amp;quot;            &amp;quot;addr_state&amp;quot;         
## [10] &amp;quot;initial_list_status&amp;quot; &amp;quot;application_type&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_down &amp;lt;-
  train_down %&amp;gt;%
  mutate_at(.funs = make.names, .vars = vars_to_mutate)
  
test &amp;lt;-
  test %&amp;gt;%
  mutate_at(.funs = make.names, .vars = vars_to_mutate)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dummy-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.4.2&lt;/span&gt; Dummy variables&lt;/h3&gt;
&lt;p&gt;A few models automatically convert character/factor variables into binary dummy variables (e.g. &lt;code&gt;stats::glm()&lt;/code&gt;) while others don’t. To build a common ground, we can create dummy variables ahead of modeling. The &lt;code&gt;caret::dummyVars()&lt;/code&gt; function creates a full set of dummy variables (i.e. less than full rank parameterization). The function takes a formula and a data set and outputs an object that can be used to create the dummy variables using the predict method. Let’s also remove the zip code variable as it would create a huge binary dummy matrix and potentially lead to computational problems. In many cases it is anyway not allowed to use it for modeling as it may be discriminative against certain communities. We also adjust the test set as we will need it for evaluation. We throw away all variables that are not part of the training set as they are not used by the models and would only clutter memory. We keep the dummy data separate from the original training data as any model using explicit variable names (i.e. not the full set) would require us to list each dummy variable separately which is cumbersome. If the data was big, we may have chosen to keep it all in one data set. For more details, see &lt;a href=&#34;https://topepo.github.io/caret/pre-processing.html#dummy&#34;&gt;The caret package 3.1: Creating Dummy Variables&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vars_to_remove &amp;lt;- c(&amp;quot;zip_code&amp;quot;)
train_down &amp;lt;- train_down %&amp;gt;% select(-one_of(vars_to_remove))

# train
dummies_train &amp;lt;-
  dummyVars(&amp;quot;~.&amp;quot;, data = train_down[, !(names(train_down) %in% c(&amp;quot;default&amp;quot;))], 
            fullRank = FALSE)

train_down_dummy &amp;lt;-
  train_down %&amp;gt;%
  select(-which(sapply(.,is.character))) %&amp;gt;%
  cbind(predict(dummies_train, newdata = train_down))

# test
dummies_test &amp;lt;-
  dummyVars(&amp;quot;~.&amp;quot;, data = test[, dummies_train$vars], fullRank = FALSE)

test_dummy &amp;lt;-
  test %&amp;gt;%
  select(one_of(colnames(train_down))) %&amp;gt;%
  select(-which(sapply(.,is.character))) %&amp;gt;%
  cbind(predict(dummies_test, newdata = test))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;logistic-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.5&lt;/span&gt; Logistic regression&lt;/h2&gt;
&lt;p&gt;While linear regression is very often used for (continuous) quantitative variables, logistic regression is its counterpart for (discrete) qualitative responses also referred to as categorical. Rather than modeling the outcome directly as default or not, logistic regression models the probability that the response belongs to a particular category. The logistic function will ensure that probabilties are within the range [0, 1]. The model coefficients are estimated via the maximum likelihood method.&lt;/p&gt;
&lt;p&gt;The logistic regression model is part of the larger family of generalized linear model function and implemented in many R packages. We will use the &lt;code&gt;stats::glm()&lt;/code&gt; function that usually comes with the standard install. A strong contender for any regression modeling is the &lt;code&gt;caret&lt;/code&gt; package that we have already used before and will use again.&lt;/p&gt;
&lt;p&gt;We will start with a very simple model of one explanatory variable, namely &lt;code&gt;grade&lt;/code&gt;, which intuitively should be a good predictor of default as it is a credit rating and therefore an evaluation of the borrower. Note that a call to &lt;code&gt;stats::glm()&lt;/code&gt; will not return all model statistics by default but only some attributes of the created model object. We can inspect the object’s attributes with the &lt;code&gt;base::attributes()&lt;/code&gt; function. The function &lt;code&gt;base::summary()&lt;/code&gt; is a generic function used to produce result summaries of the results of various model fitting functions. The function invokes particular methods which depend on the class of the first argument. In the case of a &lt;code&gt;glm&lt;/code&gt; object, it will return model statistics such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deviance residuals&lt;/li&gt;
&lt;li&gt;coefficients&lt;/li&gt;
&lt;li&gt;standard error&lt;/li&gt;
&lt;li&gt;z statistic&lt;/li&gt;
&lt;li&gt;p-value&lt;/li&gt;
&lt;li&gt;AIC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and some more. We may also use the &lt;code&gt;summary&lt;/code&gt; function on selected model objects, e.g. the coefficients only via &lt;code&gt;summary(model_object)$coef&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finally, before running the model, the documentation of &lt;code&gt;stats::glm()&lt;/code&gt; tells us that if the response is of type &lt;code&gt;factor&lt;/code&gt; the first level denotes failure and all others success. We can check and find that this is already the case here.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;levels(train_down$default)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;FALSE&amp;quot; &amp;quot;TRUE&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_glm_1 &amp;lt;- glm(formula = default ~ grade, 
                   family = binomial(link = &amp;quot;logit&amp;quot;), 
                   data = train_down, na.action = na.exclude)
class(model_glm_1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;glm&amp;quot; &amp;quot;lm&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;attributes(model_glm_1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $names
##  [1] &amp;quot;coefficients&amp;quot;      &amp;quot;residuals&amp;quot;         &amp;quot;fitted.values&amp;quot;    
##  [4] &amp;quot;effects&amp;quot;           &amp;quot;R&amp;quot;                 &amp;quot;rank&amp;quot;             
##  [7] &amp;quot;qr&amp;quot;                &amp;quot;family&amp;quot;            &amp;quot;linear.predictors&amp;quot;
## [10] &amp;quot;deviance&amp;quot;          &amp;quot;aic&amp;quot;               &amp;quot;null.deviance&amp;quot;    
## [13] &amp;quot;iter&amp;quot;              &amp;quot;weights&amp;quot;           &amp;quot;prior.weights&amp;quot;    
## [16] &amp;quot;df.residual&amp;quot;       &amp;quot;df.null&amp;quot;           &amp;quot;y&amp;quot;                
## [19] &amp;quot;converged&amp;quot;         &amp;quot;boundary&amp;quot;          &amp;quot;model&amp;quot;            
## [22] &amp;quot;call&amp;quot;              &amp;quot;formula&amp;quot;           &amp;quot;terms&amp;quot;            
## [25] &amp;quot;data&amp;quot;              &amp;quot;offset&amp;quot;            &amp;quot;control&amp;quot;          
## [28] &amp;quot;method&amp;quot;            &amp;quot;contrasts&amp;quot;         &amp;quot;xlevels&amp;quot;          
## 
## $class
## [1] &amp;quot;glm&amp;quot; &amp;quot;lm&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(model_glm_1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## glm(formula = default ~ grade, family = binomial(link = &amp;quot;logit&amp;quot;), 
##     data = train_down, na.action = na.exclude)
## 
## Deviance Residuals: 
##     Min       1Q   Median       3Q      Max  
## -1.8377  -1.1985  -0.0327   1.1564   1.7406  
## 
## Coefficients:
##             Estimate Std. Error z value            Pr(&amp;gt;|z|)    
## (Intercept) -1.26665    0.03911  -32.39 &amp;lt;0.0000000000000002 ***
## gradeB       0.77173    0.04519   17.08 &amp;lt;0.0000000000000002 ***
## gradeC       1.31620    0.04389   29.99 &amp;lt;0.0000000000000002 ***
## gradeD       1.67669    0.04600   36.45 &amp;lt;0.0000000000000002 ***
## gradeE       1.99273    0.05132   38.83 &amp;lt;0.0000000000000002 ***
## gradeF       2.26212    0.06856   33.00 &amp;lt;0.0000000000000002 ***
## gradeG       2.75092    0.12634   21.77 &amp;lt;0.0000000000000002 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## (Dispersion parameter for binomial family taken to be 1)
## 
##     Null deviance: 49200  on 35489  degrees of freedom
## Residual deviance: 46080  on 35483  degrees of freedom
## AIC: 46094
## 
## Number of Fisher Scoring iterations: 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(model_glm_1)$coef&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##               Estimate Std. Error   z value      Pr(&amp;gt;|z|)
## (Intercept) -1.2666450 0.03910963 -32.38704 4.178600e-230
## gradeB       0.7717315 0.04518690  17.07866  2.139941e-65
## gradeC       1.3161994 0.04388804  29.98993 1.327728e-197
## gradeD       1.6766852 0.04600412  36.44641 7.841098e-291
## gradeE       1.9927260 0.05131843  38.83061  0.000000e+00
## gradeF       2.2621234 0.06855512  32.99715 8.925306e-239
## gradeG       2.7509198 0.12633659  21.77453 4.046038e-105&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are a couple of functions that work natively with lm / glm objects created via &lt;code&gt;stats::glm()&lt;/code&gt; (taken from &lt;a href=&#34;http://stephlocke.info/Rtraining/logisticregressions.html#&#34;&gt;Steph Locke: Logistic Regressions&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;coefficients: Extract coefficients&lt;/li&gt;
&lt;li&gt;summary: Output a basic summary&lt;/li&gt;
&lt;li&gt;fitted: Return the predicted values for the training data&lt;/li&gt;
&lt;li&gt;predict: Predict some values for new data&lt;/li&gt;
&lt;li&gt;plot: Produce some basic diagnostic plots&lt;/li&gt;
&lt;li&gt;residuals: Return the errors on predicted values for the training data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also note that categorical variables will get transformed into dummy variables. A standardization is not necessarily needed, see e.g. &lt;a href=&#34;https://stats.stackexchange.com/questions/48360/is-standardization-needed-before-fitting-logistic-regression&#34;&gt;Is standardization needed before fitting logistic regression&lt;/a&gt;. There are a number of model diagnostics one may perform, see e.g. &lt;a href=&#34;https://stats.stackexchange.com/questions/45050/diagnostics-for-logistic-regression&#34;&gt;Diagnostics for logistic regression&lt;/a&gt; and pay attention to &lt;code&gt;Frank Harrell&lt;/code&gt;’s answer.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;model-evaluation-illustration&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.6&lt;/span&gt; Model evaluation illustration&lt;/h2&gt;
&lt;p&gt;For the sake of illustration, let’s go once through the model evaluation steps for this very simple model. This workflow should be similar even when the model gets more complex. There are many perspectives one can take when evaluating a model and many packages that provide helper functions to do so. For this illustration, we focus on a fairly standard approach looking at some statistics and explaining them along the way. We will also be plotting an ROC curve to establish its basic functioning.&lt;/p&gt;
&lt;p&gt;To evaluate the model performance, we have to use the fitted model to predict the target variable &lt;code&gt;default&lt;/code&gt; on unseen (test) data. The function &lt;code&gt;stats::preditc.glm()&lt;/code&gt; does exactly that. We set &lt;code&gt;type = &amp;quot;response&amp;quot;&lt;/code&gt; which returns the predicted probabilities and thus allows us to evaluate against a chosen threshold. This can be useful in cases where the cost of missclassification is not equal and one outcome should be penalized heavier than another. Also note, that we choose the positive outcome to be &lt;code&gt;TRUE&lt;/code&gt;, i.e. a true positive would be correctly identifiying a default. We use the function &lt;code&gt;caret::ConfusionMatrix()&lt;/code&gt; to plot a confusion matrix (also called error matrix). The function also returns a number of model statistics (however note that the test data is highly imbalanced as we have not applied any resampling as in the training data - so a number of statistics are meaningless). Here is what the function reports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accuracy: (TP + TN) / (TP + FP + TN + FN)&lt;/li&gt;
&lt;li&gt;95% CI: 95% confidence interval for accuracy&lt;/li&gt;
&lt;li&gt;No Information Rate: accuracy in case of random guessing (in case of binary outcome the proportion of the majority class)&lt;/li&gt;
&lt;li&gt;P-Value [Acc &amp;gt; NIR]: p-value that accuracy is larger No Information Rate&lt;/li&gt;
&lt;li&gt;Kappa: (observed accuracy - expected accuracy) / (1 - expected accuracy), see &lt;a href=&#34;https://stats.stackexchange.com/questions/82162/cohens-kappa-in-plain-english&#34;&gt;Cohen’s kappa in plain English&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mcnemar’s Test P-Value&lt;/li&gt;
&lt;li&gt;Sensitivity / recall: true positive rate = TP / (TP + FN)&lt;/li&gt;
&lt;li&gt;Specificity: true negative rate = TN / (TN + FP)&lt;/li&gt;
&lt;li&gt;Pos Pred Value: (sensitivity * prevalence) / ((sensitivity * prevalence) + ((1 - specificity) * (1 - prevalence)))&lt;/li&gt;
&lt;li&gt;Neg Pred Value: (specificity * (1-prevalence)) / (((1-sensitivity) * prevalence) + ((specificity) * (1 - prevalence)))&lt;/li&gt;
&lt;li&gt;Prevalence: (TP + FN) / (TP + FP + TN + FN)&lt;/li&gt;
&lt;li&gt;Detection Rate: TP / (TP + FP + TN + FN)&lt;/li&gt;
&lt;li&gt;Detection Prevalence: (TP + FP) / (TP + FP + TN + FN)&lt;/li&gt;
&lt;li&gt;Balanced Accuracy: (sensitivity + specificity) / 2&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_glm_1_pred &amp;lt;- 
  predict.glm(object = model_glm_1, newdata = test, type = &amp;quot;response&amp;quot;)
model_pred_t &amp;lt;- function(pred, t) ifelse(pred &amp;gt; t, TRUE, FALSE)
caret::confusionMatrix(data = model_pred_t(model_glm_1_pred, 0.5), 
                       reference = test$default,
                       positive = &amp;quot;TRUE&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Confusion Matrix and Statistics
## 
##           Reference
## Prediction FALSE  TRUE
##      FALSE 79712  1003
##      TRUE  93327  3433
##                                              
##                Accuracy : 0.4685             
##                  95% CI : (0.4662, 0.4708)   
##     No Information Rate : 0.975              
##     P-Value [Acc &amp;gt; NIR] : 1                  
##                                              
##                   Kappa : 0.0211             
##  Mcnemar&amp;#39;s Test P-Value : &amp;lt;0.0000000000000002
##                                              
##             Sensitivity : 0.77390            
##             Specificity : 0.46066            
##          Pos Pred Value : 0.03548            
##          Neg Pred Value : 0.98757            
##              Prevalence : 0.02500            
##          Detection Rate : 0.01934            
##    Detection Prevalence : 0.54520            
##       Balanced Accuracy : 0.61728            
##                                              
##        &amp;#39;Positive&amp;#39; Class : TRUE               
## &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking at the model statistics, we find a mixed picture:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we get a fair amount of true defaults right (sensitivity)&lt;/li&gt;
&lt;li&gt;we get a large amount of non-defaults wrong (specificity)&lt;/li&gt;
&lt;li&gt;the Kappa (which should consider class distributions) is very low&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can visualize the classification (predicted probabilities) versus the actual class for the test set and the given threshold. We make use of a plotting function inspired by &lt;a href=&#34;https://www.joyofdata.de/blog/illustrated-guide-to-roc-and-auc/&#34;&gt;Illustrated Guide to ROC and AUC&lt;/a&gt; with its source code residing on &lt;a href=&#34;https://github.com/joyofdata/joyofdata-articles/blob/master/roc-auc/plot_pred_type_distribution.R&#34;&gt;Github&lt;/a&gt;. We have slightly adjusted the code to fit our needs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_pred_type_distribution &amp;lt;- function(df, threshold) {
  v &amp;lt;- rep(NA, nrow(df))
  v &amp;lt;- ifelse(df$pred &amp;gt;= threshold &amp;amp; df$actual == 1, &amp;quot;TP&amp;quot;, v)
  v &amp;lt;- ifelse(df$pred &amp;gt;= threshold &amp;amp; df$actual == 0, &amp;quot;FP&amp;quot;, v)
  v &amp;lt;- ifelse(df$pred &amp;lt; threshold &amp;amp; df$actual == 1, &amp;quot;FN&amp;quot;, v)
  v &amp;lt;- ifelse(df$pred &amp;lt; threshold &amp;amp; df$actual == 0, &amp;quot;TN&amp;quot;, v)
  
  df$pred_type &amp;lt;- v
  
  ggplot(data = df, aes(x = actual, y = pred)) + 
    geom_violin(fill = rgb(1, 1 ,1, alpha = 0.6), color = NA) + 
    geom_jitter(aes(color = pred_type), alpha = 0.6) +
    geom_hline(yintercept = threshold, color = &amp;quot;red&amp;quot;, alpha = 0.6) +
    scale_color_discrete(name = &amp;quot;type&amp;quot;) +
    labs(title = sprintf(&amp;quot;Threshold at %.2f&amp;quot;, threshold))
  }

plot_pred_type_distribution(
  df = tibble::tibble(pred = model_glm_1_pred, actual = test$default), 
  threshold = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-63-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can derive a few things from the plot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We can clearly see the imbalance of the test dataset with many more observations being &lt;code&gt;FALSE&lt;/code&gt;, i.e. non-defaulted&lt;/li&gt;
&lt;li&gt;We can see that predictions tend to cluster more around the center (i.e. the threshold) rather than the top or bottom&lt;/li&gt;
&lt;li&gt;We see that there are only seven distinct (unique) prediction probabilities, namely 0.512386, 0.2198321, 0.3787367, 0.6010975, 0.6739447, 0.8152174, 0.7301686 which corresponds to the number of unique levels in our predictor &lt;code&gt;grade&lt;/code&gt;, namely B, C, A, E, F, D, G&lt;/li&gt;
&lt;li&gt;We can see the trade-off of moving the threshold down or up leading to higher sensitivity (lower specificity) or higher specificity (lower sensitivity), respectively.&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;roc-curve&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.6.1&lt;/span&gt; ROC curve&lt;/h3&gt;
&lt;p&gt;Let’s have a look at the ROC curve which evaluates the performance over all possible thresholds rather than just one. Without going into too much detail, the ROC curve works as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;draw sensitivity (true positive rate) on y-axis&lt;/li&gt;
&lt;li&gt;draw specificivity (true negative rate) on x-axis (often also drawn as 1 - true negative rate)&lt;/li&gt;
&lt;li&gt;go from threshold zero to threshold one in a number of pre-defined steps, e.g. with distance 0.01&lt;/li&gt;
&lt;li&gt;for each threshold sensitivity is plotted against specificity&lt;/li&gt;
&lt;li&gt;the result is usually a (smoothed) curve that lies above the diagonal splitting the area&lt;/li&gt;
&lt;li&gt;the diagonal (also called base) represents the lower bound as it is the result of a random guess (assuming balanced class distribution) - so if the curve lies below it, the model is worse than random guessing and one could simply invert the prediction&lt;/li&gt;
&lt;li&gt;in a perfect model the curve touches the upper left data point, i.e. having a sensitivity and specificity of one (perfect separation)&lt;/li&gt;
&lt;li&gt;This setup nicely illustrates the trade-off between sensitivity and specificity as it often occurs in reality, i.e. increasing one, decreases the other&lt;/li&gt;
&lt;li&gt;The curve also allows comparing different models against each other&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although the curve gives a good indication of model performance, it is usually preferrable to have one model statistic to use as benchmark. This is the role of the AUC (AUROC) known as area under the curve (area under the ROC curve). It is simply calculated via integration. Naturally, the base is 0.5 (the diagonal) and thus the lower bound. The upper bound is therefore 1.&lt;/p&gt;
&lt;p&gt;More details can be found e.g. in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://corysimon.github.io/articles/what-is-an-roc-curve/&#34;&gt;ROC curves to evaluate binary classification algorithms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.joyofdata.de/blog/illustrated-guide-to-roc-and-auc/&#34;&gt;Illustrated Guide to ROC and AUC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;or for a more theoretical treatment &lt;a href=&#34;https://ccrma.stanford.edu/workshops/mir2009/references/ROCintro.pdf&#34;&gt;An introduction to ROC analysis&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will be using the &lt;code&gt;pROC&lt;/code&gt; library and its main function &lt;code&gt;pROC::roc()&lt;/code&gt; to compute ROC.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;roc_glm_1 &amp;lt;- pROC::roc(response = test$default, predictor = model_glm_1_pred)
roc_glm_1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## roc.default(response = test$default, predictor = model_glm_1_pred)
## 
## Data: model_glm_1_pred in 173039 controls (test$default FALSE) &amp;lt; 4436 cases (test$default TRUE).
## Area under the curve: 0.6641&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see an area of 0.6641045 which is better than random guessing but not too good. Let’s plot it to see its shape. Note that by default &lt;code&gt;pROC::plot.roc()&lt;/code&gt; has the x-axis as specificity rather than 1 - specificity as many authors and other packages have. To use 1 - specificity, one can call the function with parameter &lt;code&gt;legacy.axes = TRUE&lt;/code&gt;. However, it seems that the actual trade-off between sensitivity and specificity is easier to see when plotting specificity as the mind does not easily interpret one minus some quantity. We also set &lt;code&gt;asp = NA&lt;/code&gt; to create an x-axis range from zero to one which, depending on your graphics output settings, ensures the standard way of plotting an ROC curve accepting the risk of a misshape in case graphics output does not have (close to) quadratic shape.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pROC::plot.roc(x = roc_glm_1, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               col = &amp;quot;green&amp;quot;, print.auc = FALSE, print.auc.y = .4)

legend(x = &amp;quot;bottomright&amp;quot;, legend=c(&amp;quot;glm_1 AUC = 0.664&amp;quot;), 
       col = c(&amp;quot;green&amp;quot;), lty = 1, cex = 1.0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-65-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We see that the curve lies over the diagonal but it does not have a strong tendency to touch the upper left corner. A more complex model may perform better but would involve a larger amount of predictors so naturally the question of variable selection will come up.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;variable-selection&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.7&lt;/span&gt; Variable selection&lt;/h2&gt;
&lt;p&gt;Many articles and book chapters have been written on the topic of variable selection (feature selection) and some authors believe it is one of, if not the most, important topic in model buidling. A few good resources giving an overview, can be found below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www-bcf.usc.edu/~gareth/ISL/&#34;&gt;An Introduction to Statistical Learning - Chapter 6: Linear Model Selection and Regularization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jmlr.org/papers/volume3/guyon03a/guyon03a.pdf&#34;&gt;An Introduction to Variable and Feature Selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://link.springer.com/article/10.1057%2Fjt.2009.26&#34;&gt;Variable selection methods in regression: Ignorable problem, outing notable solution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The different approaches can be categorized as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;subset selection&lt;/li&gt;
&lt;li&gt;best subset selection&lt;/li&gt;
&lt;li&gt;stepwise selection (forward/backward/hybrid)&lt;/li&gt;
&lt;li&gt;shrinkage&lt;/li&gt;
&lt;li&gt;ridge regression (l&lt;sub&gt;2&lt;/sub&gt;-norm)&lt;/li&gt;
&lt;li&gt;lasso (l&lt;sub&gt;1&lt;/sub&gt;-norm)&lt;/li&gt;
&lt;li&gt;dimension reduction&lt;/li&gt;
&lt;li&gt;principal component analysis (PCA)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many trade-offs to be made when choosing one approach over the other but the two most important are statistical soundness and computational efficiency. We will not go into further details of variable selection but rather focus on the model building. We thus simply detrmine a predictor space that seems sensible given prior analysis.&lt;/p&gt;
&lt;p&gt;Let’s remind ourselves of variables left for modeling.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;full_vars &amp;lt;- colnames(train_down)
full_vars&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;term&amp;quot;                        &amp;quot;int_rate&amp;quot;                   
##  [3] &amp;quot;grade&amp;quot;                       &amp;quot;emp_length&amp;quot;                 
##  [5] &amp;quot;home_ownership&amp;quot;              &amp;quot;annual_inc&amp;quot;                 
##  [7] &amp;quot;verification_status&amp;quot;         &amp;quot;issue_d&amp;quot;                    
##  [9] &amp;quot;pymnt_plan&amp;quot;                  &amp;quot;purpose&amp;quot;                    
## [11] &amp;quot;addr_state&amp;quot;                  &amp;quot;dti&amp;quot;                        
## [13] &amp;quot;delinq_2yrs&amp;quot;                 &amp;quot;earliest_cr_line&amp;quot;           
## [15] &amp;quot;inq_last_6mths&amp;quot;              &amp;quot;open_acc&amp;quot;                   
## [17] &amp;quot;pub_rec&amp;quot;                     &amp;quot;revol_bal&amp;quot;                  
## [19] &amp;quot;revol_util&amp;quot;                  &amp;quot;initial_list_status&amp;quot;        
## [21] &amp;quot;out_prncp_inv&amp;quot;               &amp;quot;total_rec_late_fee&amp;quot;         
## [23] &amp;quot;collection_recovery_fee&amp;quot;     &amp;quot;last_pymnt_d&amp;quot;               
## [25] &amp;quot;last_pymnt_amnt&amp;quot;             &amp;quot;last_credit_pull_d&amp;quot;         
## [27] &amp;quot;collections_12_mths_ex_med&amp;quot;  &amp;quot;mths_since_last_major_derog&amp;quot;
## [29] &amp;quot;application_type&amp;quot;            &amp;quot;acc_now_delinq&amp;quot;             
## [31] &amp;quot;tot_coll_amt&amp;quot;                &amp;quot;tot_cur_bal&amp;quot;                
## [33] &amp;quot;default&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We determine a subspace and report which variables we ignore.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_vars &amp;lt;-
  c(&amp;quot;term&amp;quot;, &amp;quot;grade&amp;quot;, &amp;quot;emp_length&amp;quot;, &amp;quot;home_ownership&amp;quot;, &amp;quot;annual_inc&amp;quot;,
    &amp;quot;purpose&amp;quot;, &amp;quot;pymnt_plan&amp;quot;, &amp;quot;out_prncp_inv&amp;quot;, &amp;quot;delinq_2yrs&amp;quot;, &amp;quot;default&amp;quot;)

ignored_vars &amp;lt;- dplyr::setdiff(full_vars, model_vars)
ignored_vars&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;int_rate&amp;quot;                    &amp;quot;verification_status&amp;quot;        
##  [3] &amp;quot;issue_d&amp;quot;                     &amp;quot;addr_state&amp;quot;                 
##  [5] &amp;quot;dti&amp;quot;                         &amp;quot;earliest_cr_line&amp;quot;           
##  [7] &amp;quot;inq_last_6mths&amp;quot;              &amp;quot;open_acc&amp;quot;                   
##  [9] &amp;quot;pub_rec&amp;quot;                     &amp;quot;revol_bal&amp;quot;                  
## [11] &amp;quot;revol_util&amp;quot;                  &amp;quot;initial_list_status&amp;quot;        
## [13] &amp;quot;total_rec_late_fee&amp;quot;          &amp;quot;collection_recovery_fee&amp;quot;    
## [15] &amp;quot;last_pymnt_d&amp;quot;                &amp;quot;last_pymnt_amnt&amp;quot;            
## [17] &amp;quot;last_credit_pull_d&amp;quot;          &amp;quot;collections_12_mths_ex_med&amp;quot; 
## [19] &amp;quot;mths_since_last_major_derog&amp;quot; &amp;quot;application_type&amp;quot;           
## [21] &amp;quot;acc_now_delinq&amp;quot;              &amp;quot;tot_coll_amt&amp;quot;               
## [23] &amp;quot;tot_cur_bal&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;a-more-complex-logistic-model-with-caret&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.8&lt;/span&gt; A more complex logistic model with caret&lt;/h2&gt;
&lt;p&gt;The interested reader should check the comprehensive caret documentation on how the API works and for modeling in particular read &lt;a href=&#34;https://topepo.github.io/caret/model-training-and-tuning.html&#34;&gt;model training and tuning&lt;/a&gt;. We only give a high-level overview here.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;caret&lt;/code&gt; package has several functions that attempt to streamline the model building and evaluation process. The train function can be used to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;evaluate, using resampling, the effect of model tuning parameters on performance&lt;/li&gt;
&lt;li&gt;choose the “optimal” model across these parameters&lt;/li&gt;
&lt;li&gt;estimate model performance from a training set&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First, a specific model must be chosen. User-defined models can also be created. Second, the corresponding model parameters need to be passed to the function call. The workhorse function is &lt;code&gt;caret::train()&lt;/code&gt; but an important input is parameter &lt;code&gt;trControl&lt;/code&gt; which also allows specifying a particular resampling approach, e.g. k-fold cross-validation (once or repeated), leave-one-out cross-validation and bootstrap (simple estimation or the 632 rule), etc.&lt;/p&gt;
&lt;div id=&#34;traincontrol&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.8.1&lt;/span&gt; trainControl&lt;/h3&gt;
&lt;p&gt;We will define the controlling parameters in a separate function call to &lt;code&gt;caret::trainControl()&lt;/code&gt; and then pass this on to &lt;code&gt;caret::train(trControl = )&lt;/code&gt;. This also allows using the control parameters for different models if applicable to those. The function &lt;code&gt;caret::trainControl()&lt;/code&gt; generates parameters that further control how models are created. For more details, see &lt;a href=&#34;https://topepo.github.io/caret/model-training-and-tuning.html&#34;&gt;The caret package 5.5.4: The trainControl Function&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We perform a 10-fold cross-validation repeated five times and return the class probabilities. Since we are interested in ROC as our performance measure, we need to set &lt;code&gt;summaryFunction = twoClassSummary&lt;/code&gt;. If one likes to see a live log of the execution, &lt;code&gt;verboseIter = TRUE&lt;/code&gt; provides that. Since we have no tuning parameters for logistic regression, we leave those out for now.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ctrl &amp;lt;- 
  trainControl(method = &amp;quot;repeatedcv&amp;quot;, 
               number = 10,
               repeats = 5,
               classProbs = TRUE,
               summaryFunction = twoClassSummary,
               savePredictions = TRUE,
               verboseIter = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;train&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.8.2&lt;/span&gt; train&lt;/h3&gt;
&lt;p&gt;Finally, we can call &lt;code&gt;caret::train()&lt;/code&gt; with specified control parameters. Note that &lt;code&gt;caret&lt;/code&gt; is picky about factor values which need to be valid R names. We thus convert the default variable to have values “yes” and “no” rather than “TRUE” and “FALSE” (which when converted to variable names would not be valid as they are reserved keywords). Make sure that the test set is transformed likewise when using the model for prediction as otherwise your factor levels may be different to the training set and the class probabilities thus wrong.&lt;/p&gt;
&lt;p&gt;We will skip the complex discussion around variable selection for now and simply determine the “base” variable universe that seems plausible from intuition and prior exploratory analysis. We have removed categorical variables with many unique values (such as zip codes) as they would be mutated to large dummy matrices.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_glm_2 &amp;lt;-
  train_down %&amp;gt;%
  select(model_vars) %&amp;gt;%
  mutate(default = as.factor(ifelse(default == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
  filter(complete.cases(.)) %&amp;gt;%
  train(default ~ ., 
        data = ., 
        method = &amp;quot;glm&amp;quot;, 
        family = &amp;quot;binomial&amp;quot;,
        metric = &amp;quot;ROC&amp;quot;,
        trControl = ctrl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As with the previous model object created via &lt;code&gt;stats::glm()&lt;/code&gt;, the final model object created has many methods and attributes for further processing. But we first look at the results/performance on the training set (which should give a fair estimate of the test set performance since we used cross-validation). Note that all reported metrics are interpretable since this is done on the balanced data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_glm_2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Generalized Linear Model 
## 
## 35488 samples
##     9 predictor
##     2 classes: &amp;#39;no&amp;#39;, &amp;#39;yes&amp;#39; 
## 
## No pre-processing
## Resampling: Cross-Validated (10 fold, repeated 5 times) 
## Summary of sample sizes: 31938, 31938, 31940, 31939, 31940, 31940, ... 
## Resampling results:
## 
##   ROC        Sens       Spec    
##   0.6964721  0.6291356  0.662019&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see that we have improved on the ROCAUC (~ 70%) but got worse for sensitivity compared to the first, simpler model. Looking at the &lt;code&gt;predictors&lt;/code&gt;, we also see how the model created dummies to encode categorical variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;attributes(model_glm_2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $names
##  [1] &amp;quot;method&amp;quot;       &amp;quot;modelInfo&amp;quot;    &amp;quot;modelType&amp;quot;    &amp;quot;results&amp;quot;     
##  [5] &amp;quot;pred&amp;quot;         &amp;quot;bestTune&amp;quot;     &amp;quot;call&amp;quot;         &amp;quot;dots&amp;quot;        
##  [9] &amp;quot;metric&amp;quot;       &amp;quot;control&amp;quot;      &amp;quot;finalModel&amp;quot;   &amp;quot;preProcess&amp;quot;  
## [13] &amp;quot;trainingData&amp;quot; &amp;quot;resample&amp;quot;     &amp;quot;resampledCM&amp;quot;  &amp;quot;perfNames&amp;quot;   
## [17] &amp;quot;maximize&amp;quot;     &amp;quot;yLimits&amp;quot;      &amp;quot;times&amp;quot;        &amp;quot;levels&amp;quot;      
## [21] &amp;quot;terms&amp;quot;        &amp;quot;coefnames&amp;quot;    &amp;quot;contrasts&amp;quot;    &amp;quot;xlevels&amp;quot;     
## 
## $class
## [1] &amp;quot;train&amp;quot;         &amp;quot;train.formula&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(model_glm_2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## NULL
## 
## Deviance Residuals: 
##     Min       1Q   Median       3Q      Max  
## -2.3163  -1.0774  -0.2782   1.0635   5.6347  
## 
## Coefficients:
##                                 Estimate     Std. Error z value
## (Intercept)                -1.7381657126   0.1420955332 -12.232
## termX60.months             -0.5453038253   0.0298754606 -18.253
## gradeB                      0.8159277950   0.0461745543  17.671
## gradeC                      1.3693629935   0.0459015145  29.833
## gradeD                      1.7227789216   0.0490499846  35.123
## gradeE                      2.0514999392   0.0562719050  36.457
## gradeF                      2.3642399559   0.0741417266  31.888
## gradeG                      2.8775473195   0.1315002573  21.882
## emp_lengthX..1.year         0.0719719375   0.0634309986   1.135
## emp_lengthX1.year          -0.0231801001   0.0663542839  -0.349
## emp_lengthX10..years       -0.1447186450   0.0541082748  -2.675
## emp_lengthX2.years         -0.0155518922   0.0628511985  -0.247
## emp_lengthX3.years          0.0019357572   0.0640494674   0.030
## emp_lengthX4.years         -0.0416200714   0.0681959839  -0.610
## emp_lengthX5.years         -0.1208526942   0.0671199278  -1.801
## emp_lengthX6.years          0.0685014427   0.0713774190   0.960
## emp_lengthX7.years          0.0169740882   0.0708191548   0.240
## emp_lengthX8.years         -0.0231357344   0.0711988793  -0.325
## emp_lengthX9.years         -0.0454158473   0.0751319778  -0.604
## home_ownershipNONE         -0.5795772695   1.3066383779  -0.444
## home_ownershipOTHER        12.3599134059  91.3562921237   0.135
## home_ownershipOWN           0.1059366445   0.0397823985   2.663
## home_ownershipRENT          0.1738380528   0.0253881630   6.847
## annual_inc                 -0.0000018620   0.0000002708  -6.875
## purposecredit_card          0.0940714394   0.1290711042   0.729
## purposedebt_consolidation   0.1957294997   0.1273405178   1.537
## purposeeducational          1.4894997798   0.4601526184   3.237
## purposehome_improvement     0.2605554222   0.1355011685   1.923
## purposehouse                0.0010870105   0.2087251602   0.005
## purposemajor_purchase       0.1111783795   0.1507309963   0.738
## purposemedical              0.1525955150   0.1664861916   0.917
## purposemoving               0.4431876570   0.1857656345   2.386
## purposeother                0.0979564862   0.1356860122   0.722
## purposerenewable_energy     0.0910160004   0.4132422786   0.220
## purposesmall_business       0.2405034075   0.1572708880   1.529
## purposevacation             0.1203054032   0.1926193435   0.625
## purposewedding             -0.4075063208   0.3202319627  -1.273
## pymnt_plany                11.9809020840 154.7613613910   0.077
## out_prncp_inv               0.0000520918   0.0000017015  30.614
## delinq_2yrs                 0.0865718494   0.0125320528   6.908
##                                       Pr(&amp;gt;|z|)    
## (Intercept)               &amp;lt; 0.0000000000000002 ***
## termX60.months            &amp;lt; 0.0000000000000002 ***
## gradeB                    &amp;lt; 0.0000000000000002 ***
## gradeC                    &amp;lt; 0.0000000000000002 ***
## gradeD                    &amp;lt; 0.0000000000000002 ***
## gradeE                    &amp;lt; 0.0000000000000002 ***
## gradeF                    &amp;lt; 0.0000000000000002 ***
## gradeG                    &amp;lt; 0.0000000000000002 ***
## emp_lengthX..1.year                    0.25652    
## emp_lengthX1.year                      0.72684    
## emp_lengthX10..years                   0.00748 ** 
## emp_lengthX2.years                     0.80457    
## emp_lengthX3.years                     0.97589    
## emp_lengthX4.years                     0.54166    
## emp_lengthX5.years                     0.07177 .  
## emp_lengthX6.years                     0.33720    
## emp_lengthX7.years                     0.81058    
## emp_lengthX8.years                     0.74522    
## emp_lengthX9.years                     0.54552    
## home_ownershipNONE                     0.65736    
## home_ownershipOTHER                    0.89238    
## home_ownershipOWN                      0.00775 ** 
## home_ownershipRENT            0.00000000000753 ***
## annual_inc                    0.00000000000621 ***
## purposecredit_card                     0.46610    
## purposedebt_consolidation              0.12428    
## purposeeducational                     0.00121 ** 
## purposehome_improvement                0.05449 .  
## purposehouse                           0.99584    
## purposemajor_purchase                  0.46076    
## purposemedical                         0.35937    
## purposemoving                          0.01705 *  
## purposeother                           0.47033    
## purposerenewable_energy                0.82568    
## purposesmall_business                  0.12621    
## purposevacation                        0.53225    
## purposewedding                         0.20318    
## pymnt_plany                            0.93829    
## out_prncp_inv             &amp;lt; 0.0000000000000002 ***
## delinq_2yrs                   0.00000000000491 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## (Dispersion parameter for binomial family taken to be 1)
## 
##     Null deviance: 49197  on 35487  degrees of freedom
## Residual deviance: 44806  on 35448  degrees of freedom
## AIC: 44886
## 
## Number of Fisher Scoring iterations: 11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predictors(model_glm_2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;termX60.months&amp;quot;            &amp;quot;gradeB&amp;quot;                   
##  [3] &amp;quot;gradeC&amp;quot;                    &amp;quot;gradeD&amp;quot;                   
##  [5] &amp;quot;gradeE&amp;quot;                    &amp;quot;gradeF&amp;quot;                   
##  [7] &amp;quot;gradeG&amp;quot;                    &amp;quot;emp_lengthX..1.year&amp;quot;      
##  [9] &amp;quot;emp_lengthX1.year&amp;quot;         &amp;quot;emp_lengthX10..years&amp;quot;     
## [11] &amp;quot;emp_lengthX2.years&amp;quot;        &amp;quot;emp_lengthX3.years&amp;quot;       
## [13] &amp;quot;emp_lengthX4.years&amp;quot;        &amp;quot;emp_lengthX5.years&amp;quot;       
## [15] &amp;quot;emp_lengthX6.years&amp;quot;        &amp;quot;emp_lengthX7.years&amp;quot;       
## [17] &amp;quot;emp_lengthX8.years&amp;quot;        &amp;quot;emp_lengthX9.years&amp;quot;       
## [19] &amp;quot;home_ownershipNONE&amp;quot;        &amp;quot;home_ownershipOTHER&amp;quot;      
## [21] &amp;quot;home_ownershipOWN&amp;quot;         &amp;quot;home_ownershipRENT&amp;quot;       
## [23] &amp;quot;annual_inc&amp;quot;                &amp;quot;purposecredit_card&amp;quot;       
## [25] &amp;quot;purposedebt_consolidation&amp;quot; &amp;quot;purposeeducational&amp;quot;       
## [27] &amp;quot;purposehome_improvement&amp;quot;   &amp;quot;purposehouse&amp;quot;             
## [29] &amp;quot;purposemajor_purchase&amp;quot;     &amp;quot;purposemedical&amp;quot;           
## [31] &amp;quot;purposemoving&amp;quot;             &amp;quot;purposeother&amp;quot;             
## [33] &amp;quot;purposerenewable_energy&amp;quot;   &amp;quot;purposesmall_business&amp;quot;    
## [35] &amp;quot;purposevacation&amp;quot;           &amp;quot;purposewedding&amp;quot;           
## [37] &amp;quot;pymnt_plany&amp;quot;               &amp;quot;out_prncp_inv&amp;quot;            
## [39] &amp;quot;delinq_2yrs&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can also look at the variable importance with &lt;code&gt;caret::varImp()&lt;/code&gt;. For linear models, the absolute value of the t-statistic for each model parameter is used.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;varImp(model_glm_2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## glm variable importance
## 
##   only 20 most important variables shown (out of 39)
## 
##                           Overall
## gradeE                    100.000
## gradeD                     96.340
## gradeF                     87.466
## out_prncp_inv              83.972
## gradeC                     81.827
## gradeG                     60.017
## termX60.months             50.059
## gradeB                     48.462
## delinq_2yrs                18.937
## annual_inc                 18.846
## home_ownershipRENT         18.770
## purposeeducational          8.866
## emp_lengthX10..years        7.323
## home_ownershipOWN           7.291
## purposemoving               6.531
## purposehome_improvement     5.261
## emp_lengthX5.years          4.925
## purposedebt_consolidation   4.202
## purposesmall_business       4.181
## purposewedding              3.477&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(varImp(model_glm_2))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-72-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Finally, we use the model to predict the test set classes. Again, we need to be aware of any pre-processing required such as mutations or treatment of missing values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_glm_2_pred &amp;lt;- 
  predict(model_glm_2, 
          newdata = test %&amp;gt;% 
            select(model_vars) %&amp;gt;%
            mutate(default = as.factor(ifelse(default == TRUE, 
                                              &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
            filter(complete.cases(.)), 
          type = &amp;quot;prob&amp;quot;)

head(model_glm_2_pred, 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          no       yes
## 1 0.7041954 0.2958046
## 2 0.8783103 0.1216897
## 3 0.6509819 0.3490181&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that &lt;code&gt;caret::predict.train&lt;/code&gt; returns the probabilties for all outcomes i.e. in our binary case for yes and no. We repeat the analysis from earlier and see how the new model performs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;caret::confusionMatrix(
  data = ifelse(model_glm_2_pred[, &amp;quot;yes&amp;quot;] &amp;gt; 0.5, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;), 
  reference = as.factor(ifelse(test[complete.cases(test[, model_vars]), 
                                    &amp;quot;default&amp;quot;] == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;)),
  positive = &amp;quot;yes&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Confusion Matrix and Statistics
## 
##           Reference
## Prediction     no    yes
##        no  109156   1482
##        yes  63876   2953
##                                              
##                Accuracy : 0.6317             
##                  95% CI : (0.6295, 0.634)    
##     No Information Rate : 0.975              
##     P-Value [Acc &amp;gt; NIR] : 1                  
##                                              
##                   Kappa : 0.0378             
##  Mcnemar&amp;#39;s Test P-Value : &amp;lt;0.0000000000000002
##                                              
##             Sensitivity : 0.66584            
##             Specificity : 0.63084            
##          Pos Pred Value : 0.04419            
##          Neg Pred Value : 0.98660            
##              Prevalence : 0.02499            
##          Detection Rate : 0.01664            
##    Detection Prevalence : 0.37657            
##       Balanced Accuracy : 0.64834            
##                                              
##        &amp;#39;Positive&amp;#39; Class : yes                
## &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again we build an ROC object.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp &amp;lt;- as.factor(ifelse(test[complete.cases(test[, model_vars]),
                                             &amp;quot;default&amp;quot;] == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))

roc_glm_2 &amp;lt;- 
  pROC::roc(response = temp, 
            predictor = model_glm_2_pred[, &amp;quot;yes&amp;quot;])

roc_glm_2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## roc.default(response = temp, predictor = model_glm_2_pred[, &amp;quot;yes&amp;quot;])
## 
## Data: model_glm_2_pred[, &amp;quot;yes&amp;quot;] in 173032 controls (temp no) &amp;lt; 4435 cases (temp yes).
## Area under the curve: 0.6995&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#data = as.data.frame(unclass(train[complete.cases(train), ]))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The ROCAUC of ~ 70% is nearly the same as for the cross-validated training set. We plot the curve comparing it against the ROC from the simple model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pROC::plot.roc(x = roc_glm_1, legacy.axes = FALSE, xlim = c(1, 0), asp = NA, 
               col = &amp;quot;green&amp;quot;)

pROC::plot.roc(x = roc_glm_2, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               add = TRUE, col = &amp;quot;blue&amp;quot;)

legend(x = &amp;quot;bottomright&amp;quot;, legend=c(&amp;quot;glm_1 AUC = 0.664&amp;quot;, &amp;quot;glm_2 AUC = 0.7&amp;quot;), 
       col = c(&amp;quot;green&amp;quot;, &amp;quot;blue&amp;quot;), lty = 1, cex = 1.0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-76-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can see that the more complex model has a better ROC above the simple model.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;a-note-on-computational-efficiency-parallelization-via-cluster&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.9&lt;/span&gt; A note on computational efficiency (parallelization via cluster)&lt;/h2&gt;
&lt;p&gt;Some models (and their tuning parameter calibration via resampling) will require significant computational resources both in terms of memory and CPUs. There are a few ways to increase computational efficiency which can be roughly divided into&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;decrease training set (without loosing information)&lt;/li&gt;
&lt;li&gt;compute on several cores (parallelization via cluster)&lt;/li&gt;
&lt;li&gt;shift matrix computations to GPU (e.g. via CUDA)&lt;/li&gt;
&lt;li&gt;use compute instances from cloud offerings such as Amazon Web Services, googleCloud or Microsoft Azure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will only look at parallelization here as it is supported by R and &lt;code&gt;caret&lt;/code&gt; out of the box. For details, see &lt;a href=&#34;https://topepo.github.io/caret/parallel-processing.html&#34;&gt;The caret package 9: Parallel Processing&lt;/a&gt;, &lt;a href=&#34;https://github.com/tobigithub/caret-machine-learning/wiki/caret-ml-parallel&#34;&gt;caret ml parallel&lt;/a&gt; and &lt;a href=&#34;https://github.com/tobigithub/R-parallel/wiki&#34;&gt;HOME of the R parallel WIKI!&lt;/a&gt; by Tobias Kind. There are a couple of libraries supporting parallel processing in R but one should be aware of the support for different operating systems. On Windows, one should use &lt;a href=&#34;https://cran.r-project.org/web/packages/doParallel&#34;&gt;doParallel&lt;/a&gt; which is a parallel backend for the &lt;code&gt;foreach&lt;/code&gt; package. Note that the multicore functionality only runs tasks on a single computer, not a cluster of computers. However, you can use the snow functionality to execute on a cluster, using Unix-like operating systems, Windows, or even a combination. It is pointless to use doParallel and parallel on a machine with only one processor with a single core. To get a speed improvement, it must run on a machine with multiple processors, multiple cores, or both. Remember: unless &lt;code&gt;doParallel::registerDoParallel()&lt;/code&gt; is called, &lt;code&gt;foreach&lt;/code&gt; will not run in parallel. Simply loading the &lt;code&gt;doParallel&lt;/code&gt; package is not enough. Note that we can set the parameter &lt;code&gt;caret::trainControl(allowParallel = TRUE)&lt;/code&gt; but it is actually the default setting, i.e. &lt;code&gt;caret::train()&lt;/code&gt; will automatically run in parallel if it detects a registerd cluster, irrespective of library is used to build it.&lt;/p&gt;
&lt;p&gt;To illustrate efficiency gains, we will benchmark an example model training using the previous &lt;code&gt;glm&lt;/code&gt; model. We use library (and function with same name) &lt;code&gt;microbenchmark&lt;/code&gt; and define to execute the operation several times (to get a stable time estimate) via parameter &lt;code&gt;times&lt;/code&gt;. Note that parallizing usually means creating copies of the original data for each worker (core) which requires according memory. Since we only want to illustrate the logic here, we downsize the training data to avoid failures due to insufficient memory.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;benchmark_train_data &amp;lt;- 
  train_down[seq(1, nrow(train_down), 2), model_vars] %&amp;gt;%
  mutate(default = as.factor(ifelse(default == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
  filter(complete.cases(.))
format(utils::object.size(benchmark_train_data), units = &amp;quot;Mb&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1.3 Mb&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see the data has ~ 1 Mb in size.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ctrl &amp;lt;- 
  trainControl(method = &amp;quot;repeatedcv&amp;quot;, 
               number = 10,
               repeats = 5,
               classProbs = TRUE,
               summaryFunction = twoClassSummary,
               verboseIter = FALSE,
               allowParallel = TRUE) #default

library(microbenchmark)

glm_nopar &amp;lt;-
  microbenchmark(glm_nopar =
      train(default ~ .,
            data = benchmark_train_data,
            method = &amp;quot;glm&amp;quot;,
            family = &amp;quot;binomial&amp;quot;,
            metric = &amp;quot;ROC&amp;quot;,
            trControl = ctrl),
    times = 5
    )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading

## Warning in predict.lm(object, newdata, se.fit, scale = 1, type =
## ifelse(type == : prediction from a rank-deficient fit may be misleading&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can look at the resulting run time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glm_nopar&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Unit: seconds
##       expr      min       lq     mean   median       uq     max neval
##  glm_nopar 27.51427 27.90744 28.27665 28.38591 28.71571 28.8599     5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we will setup a cluster of cores and repeat the benchmarking. We use &lt;code&gt;parallel::detectCores()&lt;/code&gt; to establish how many cores are available and use some amount smaller 100% of cores to leave some resources for the system. Usually, we would write a log of the distributed calculation via &lt;code&gt;parallel::makeCluster(outfile = )&lt;/code&gt;. It will be opened in append mode as all workers write to it. However, we found issues with running &lt;code&gt;parallel::makeCluster(outfile = )&lt;/code&gt; so we simply run the cluster directly from &lt;code&gt;registerDoParallel()&lt;/code&gt; which has no option to define a log file.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# doParallel would also load parallel
library(parallel)
library(doParallel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;doParallel&amp;#39; was built under R version 3.4.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: foreach&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;foreach&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:purrr&amp;#39;:
## 
##     accumulate, when&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: iterators&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cores_2_use &amp;lt;- floor(0.8 * detectCores())
# cl &amp;lt;- makeCluster(cores_2_use, outfile = &amp;quot;./logs/parallel_log.txt&amp;quot;)
# registerDoParallel(cl, cores_2_use)
registerDoParallel(cores = cores_2_use)
getDoParWorkers()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can inspect the open connections via &lt;code&gt;base::showConnections()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(base::showConnections())&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;description&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;class&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;mode&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;text&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;isopen&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;can read&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;can write&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;output&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;textConnection&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;text&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;opened&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;no&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;lt;-eclipse:11076&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sockconn&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;a+b&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;binary&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;opened&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;lt;-eclipse:11076&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sockconn&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;a+b&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;binary&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;opened&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;lt;-eclipse:11076&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sockconn&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;a+b&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;binary&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;opened&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;lt;-eclipse:11076&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sockconn&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;a+b&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;binary&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;opened&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;lt;-eclipse:11076&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sockconn&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;a+b&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;binary&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;opened&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;lt;-eclipse:11076&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;sockconn&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;a+b&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;binary&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;opened&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now we tried running in parallel but the setup may produce an error on Windows.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Error in e$fun(obj, substitute(ex), parent.frame(), e$data) : unable to find variable &amp;quot;optimismBoot&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This seems to be a bug as noted in SO question &lt;a href=&#34;https://stackoverflow.com/questions/46244763/caret-train-function-unable-to-find-variable-optimismboot&#34;&gt;Caret train function - unable to find variable “optimismBoot”&lt;/a&gt;. The bug seems to be solved in &lt;code&gt;caret&lt;/code&gt; development version which can be installed from GitHub via &lt;code&gt;devtools::install_github(&#39;topepo/caret/pkg/caret&#39;)&lt;/code&gt; (note that building &lt;code&gt;caret&lt;/code&gt; from source requires &lt;code&gt;RBuildTools&lt;/code&gt; which are part of &lt;code&gt;RTools&lt;/code&gt; which need to be installed separately, e.g. from &lt;a href=&#34;https://cran.rstudio.com/bin/windows/Rtools&#34;&gt;Building R for Windows&lt;/a&gt; - RStudio may manage the install for you). The issue is also tracked on GitHub under &lt;a href=&#34;https://github.com/topepo/caret/issues/706&#34;&gt;optimismBoot error #706&lt;/a&gt; and may already be resolved in the &lt;code&gt;caret&lt;/code&gt; version you are using.&lt;/p&gt;
&lt;p&gt;We do not run the install of the development version here again but you should in case you do not have it and wish to test the parallel execution. Before you do, make sure to close the cluster with below code (not executed now as we continue).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;parallel::stopCluster(cl)
foreach::registerDoSEQ()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glm_par &amp;lt;-
  microbenchmark(glm_par =
    train(default ~ .,
            data = benchmark_train_data,
            method = &amp;quot;glm&amp;quot;,
            family = &amp;quot;binomial&amp;quot;,
            metric = &amp;quot;ROC&amp;quot;,
            trControl = ctrl),
    times = 5
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We make sure to stop the cluster and force R back to sequential execution by using &lt;code&gt;foreach::registerDoSEQ()&lt;/code&gt;. In case you used the setup via &lt;code&gt;parallel::makeCluster()&lt;/code&gt;, you need to call &lt;code&gt;parallel::stopCluster()&lt;/code&gt; first. Otherwise, memory and CPU may be occupied with legacy clusters.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#parallel::stopCluster(cl)
foreach::registerDoSEQ()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that we ran into issues when using too much system resources on a Windows 7 workstation as documented in the SO question &lt;a href=&#34;https://stackoverflow.com/questions/46119014/caret-train-binary-glm-fails-on-parallel-cluster-via-doparallel/46119519?noredirect=1#comment79203772_46119519&#34;&gt;caret train binary glm fails on parallel cluster via doParallel&lt;/a&gt;. Below error was produced.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Error in serialize(data, node$con) : error writing to connection&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;However, on a Windows 10 machine with fewer cores and development version of &lt;code&gt;caret&lt;/code&gt; the issue could not be reproduced.&lt;/p&gt;
&lt;p&gt;We have also tried running &lt;code&gt;caret::train()&lt;/code&gt; parallel on Linux (Ubuntu) via the &lt;code&gt;doMC&lt;/code&gt; library and found that below setting runs just fine and also faster than a sequential execution. We only include the code here for info without execution.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(doMC)

cores_2_use &amp;lt;- floor(0.8 * parallel::detectCores())
registerDoMC(cores_2_use)

microbenchmark(
  glm_par =
    train(y ~ .,
          data = df,
          method = &amp;quot;glm&amp;quot;,
          family = &amp;quot;binomial&amp;quot;,
          metric = &amp;quot;ROC&amp;quot;,
          trControl = ctrl),
  times = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, let’s compare parallel versus non-parallel execution time. We can see that the parallel setup performed significantly better but we would have expected even more as we are using a multiple of the one-core setup.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glm_nopar&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Unit: seconds
##       expr      min       lq     mean   median       uq     max neval
##  glm_nopar 27.51427 27.90744 28.27665 28.38591 28.71571 28.8599     5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glm_par&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Unit: seconds
##     expr      min       lq     mean  median       uq      max neval
##  glm_par 13.65229 13.79392 17.34424 13.8397 13.89238 31.54293     5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;a-note-on-tuning-parameters-in-caret&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.10&lt;/span&gt; A note on tuning parameters in caret&lt;/h2&gt;
&lt;p&gt;When it comes to more complex models in general, often tuning parameters can be used to improve the model. There are different ways to provide the range of parameters to take. In particular, one may use&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pre-defined number (e.g. if domain knowledge already provides and idea)&lt;/li&gt;
&lt;li&gt;use &lt;a href=&#34;https://topepo.github.io/caret/model-training-and-tuning.html#custom&#34;&gt;grid search&lt;/a&gt; (default in &lt;code&gt;caret::train()&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;use &lt;a href=&#34;https://topepo.github.io/caret/random-hyperparameter-search.html&#34;&gt;random search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In general, the more tuning parameters are available, the higher the computational cost of selecting them. We will show some applications of options below. For further information, see &lt;a href=&#34;https://topepo.github.io/caret/model-training-and-tuning.html&#34;&gt;The caret package 5: Model Training and Tuning&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;trees&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.11&lt;/span&gt; Trees&lt;/h2&gt;
&lt;p&gt;Trees stratify or segment the predictor space into a number of simple regions. In order to make a prediction for a given observation, we typically use the mean or the mode of the training observations in the region to which it belongs. Trees are easy to interpret and built but as pointed out in &lt;a href=&#34;http://www-bcf.usc.edu/~gareth/ISL/&#34;&gt;“An Introduction to Statistical Learning”&lt;/a&gt; they may not compete with the best supervised learning approaches:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tree-based methods are simple and useful for interpretation. However, they typically are not competitive with the best supervised learning approaches, such as those seen in Chapters 6 and 7, in terms of prediction accuracy. Hence in this chapter we also introduce bagging, random forests, and boosting. Each of these approaches involves producing multiple trees which are then combined to yield a single consensus prediction. We will see that combining a large number of trees can often result in dramatic improvements in prediction accuracy, at the expense of some loss in interpretation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Following this guidance, we will also look into some alternatives / enhancements of the basic tree model used in &lt;a href=&#34;https://en.wikipedia.org/wiki/Decision_tree_learning&#34;&gt;CART&lt;/a&gt;. Some further resources on trees are found in&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www-bcf.usc.edu/~gareth/ISL/&#34;&gt;An Introduction to Statistical Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2016/04/complete-tutorial-tree-based-modeling-scratch-in-python/&#34;&gt;A Complete Tutorial on Tree Based Modeling from Scratch (in R &amp;amp; Python)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As usual, there are many ways to implement tree models in R but we will stay within the &lt;code&gt;caret&lt;/code&gt; package and use the API that was already explained earlier.&lt;/p&gt;
&lt;div id=&#34;simple-tree-using-cart-via-rpart-in-caret&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.11.1&lt;/span&gt; Simple tree using CART via rpart in caret&lt;/h3&gt;
&lt;p&gt;We start by building a simple tree using the CART method via rpart in caret. Note that &lt;code&gt;caret&lt;/code&gt; may not offer the full set of features that are available when using the &lt;code&gt;rpart&lt;/code&gt; library directly but it should suffice for our illustration. For more details, see &lt;a href=&#34;https://cran.r-project.org/web/packages/rpart/index.html&#34;&gt;rpart on CRAN&lt;/a&gt; and in particular &lt;a href=&#34;https://cran.r-project.org/web/packages/rpart/vignettes/longintro.pdf&#34;&gt;An Introduction to Recursive Partitioning Using the RPART Routines&lt;/a&gt; for some background.&lt;/p&gt;
&lt;p&gt;We define our control and train functions as before and look at the results.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ctrl &amp;lt;- 
  trainControl(method = &amp;quot;repeatedcv&amp;quot;, 
               number = 10,
               repeats = 5,
               classProbs = TRUE,
               summaryFunction = twoClassSummary,
               verboseIter = FALSE,
               allowParallel = TRUE)

# library(rpart)

model_rpart &amp;lt;-
  train_down %&amp;gt;%
  select(model_vars) %&amp;gt;%
  mutate(default = as.factor(ifelse(default == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
  filter(complete.cases(.)) %&amp;gt;%
  train(default ~ .,
        data = .,
        method = &amp;#39;rpart&amp;#39;,
        metric = &amp;quot;ROC&amp;quot;,
        preProc = c(&amp;quot;center&amp;quot;, &amp;quot;scale&amp;quot;),
        trControl = ctrl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in preProcess.default(thresh = 0.95, k = 5, freqCut = 19, uniqueCut
## = 10, : These variables have zero variances: home_ownershipNONE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_rpart&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## CART 
## 
## 35488 samples
##     9 predictor
##     2 classes: &amp;#39;no&amp;#39;, &amp;#39;yes&amp;#39; 
## 
## Pre-processing: centered (39), scaled (39) 
## Resampling: Cross-Validated (10 fold, repeated 5 times) 
## Summary of sample sizes: 31939, 31938, 31940, 31939, 31940, 31939, ... 
## Resampling results across tuning parameters:
## 
##   cp          ROC        Sens       Spec     
##   0.01445641  0.7018554  0.5572830  0.7674466
##   0.03111086  0.6461547  0.3900115  0.8799842
##   0.26027166  0.5707699  0.6019078  0.5396320
## 
## ROC was used to select the optimal model using  the largest value.
## The final value used for the model was cp = 0.01445641.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see that ROCAUC is ~ 70% for the best model iteration but sensitivity is worse than in some previous models. &lt;code&gt;caret&lt;/code&gt; stepped through some complexity parameters (cp) and printed results for them. We can look at &lt;code&gt;cp&lt;/code&gt; visually for the different values. In fact, under &lt;code&gt;caret&lt;/code&gt; this is the only tuning parameter available for &lt;code&gt;method = rpart&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(model_rpart)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-88-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can also visualize the final tree by accessing the &lt;code&gt;finalModel&lt;/code&gt; element from the &lt;code&gt;caret::train()&lt;/code&gt; model object. We have to add the text manually to the plot via &lt;code&gt;graphics::text()&lt;/code&gt;. We use a larger margin to have enough space for the text.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(model_rpart$finalModel, uniform = TRUE, margin = 0.2)
graphics::text(model_rpart$finalModel)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-89-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Apparently, there are only two splits, for out_prncp_inv and gradeB.&lt;/p&gt;
&lt;p&gt;Rather than using the default grid search for choosing the tuning parameter &lt;code&gt;cp&lt;/code&gt;, we could use random search (as mentioned earlier). For a theoretical background on why this might be useful, see e.g. &lt;a href=&#34;http://www.jmlr.org/papers/volume13/bergstra12a/bergstra12a.pdf&#34;&gt;Random Search for Hyper-Parameter Optimization&lt;/a&gt;. We implement random search via the parameter &lt;code&gt;caret::trainControl(search = &amp;quot;random&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ctrl &amp;lt;- 
  trainControl(method = &amp;quot;repeatedcv&amp;quot;, 
               number = 10,
               repeats = 5,
               classProbs = TRUE,
               summaryFunction = twoClassSummary,
               verboseIter = FALSE,
               allowParallel = TRUE,
               search = &amp;quot;random&amp;quot;)

model_rpart &amp;lt;-
  train_down %&amp;gt;%
  select(model_vars) %&amp;gt;%
  mutate(default = as.factor(ifelse(default == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
  filter(complete.cases(.)) %&amp;gt;%
  train(default ~ .,
        data = .,
        method = &amp;#39;rpart&amp;#39;,
        metric = &amp;quot;ROC&amp;quot;,
        preProc = c(&amp;quot;center&amp;quot;, &amp;quot;scale&amp;quot;),
        trControl = ctrl)

model_rpart&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## CART 
## 
## 35488 samples
##     9 predictor
##     2 classes: &amp;#39;no&amp;#39;, &amp;#39;yes&amp;#39; 
## 
## Pre-processing: centered (39), scaled (39) 
## Resampling: Cross-Validated (10 fold, repeated 5 times) 
## Summary of sample sizes: 31939, 31940, 31940, 31938, 31940, 31940, ... 
## Resampling results across tuning parameters:
## 
##   cp            ROC        Sens       Spec     
##   0.0002254410  0.7418953  0.5806143  0.7904981
##   0.0002536211  0.7433551  0.5725220  0.8003501
##   0.0005072423  0.7462419  0.5532501  0.8225663
## 
## ROC was used to select the optimal model using  the largest value.
## The final value used for the model was cp = 0.0005072423.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see that ROCAUC went up to ~ 74% and sensitivity also increased somewhat with the random search cp parameterization which ended up using a value much smaller than grid search. We again visualize the tree to see how it changed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(model_rpart$finalModel, uniform = TRUE, margin = 0.1)
graphics::text(model_rpart$finalModel, cex = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-91-1.png&#34; width=&#34;1344&#34; /&gt; Clearly the model has become more complex which was expected given that its ROCAUC went up. As before, we will predict test outcome with the final model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_rpart_pred &amp;lt;- 
  predict(model_rpart, 
          newdata = test %&amp;gt;% 
            select(model_vars) %&amp;gt;%
            mutate(default = as.factor(ifelse(default == TRUE, 
                                              &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
            filter(complete.cases(.)), 
          type = &amp;quot;prob&amp;quot;)

caret::confusionMatrix(
  data = ifelse(model_rpart_pred[, &amp;quot;yes&amp;quot;] &amp;gt; 0.5, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;), 
  reference = as.factor(ifelse(test[complete.cases(test[, model_vars]), 
                                    &amp;quot;default&amp;quot;] == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;)),
  positive = &amp;quot;yes&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Confusion Matrix and Statistics
## 
##           Reference
## Prediction    no   yes
##        no  91226   682
##        yes 81806  3753
##                                              
##                Accuracy : 0.5352             
##                  95% CI : (0.5329, 0.5375)   
##     No Information Rate : 0.975              
##     P-Value [Acc &amp;gt; NIR] : 1                  
##                                              
##                   Kappa : 0.0377             
##  Mcnemar&amp;#39;s Test P-Value : &amp;lt;0.0000000000000002
##                                              
##             Sensitivity : 0.84622            
##             Specificity : 0.52722            
##          Pos Pred Value : 0.04386            
##          Neg Pred Value : 0.99258            
##              Prevalence : 0.02499            
##          Detection Rate : 0.02115            
##    Detection Prevalence : 0.48211            
##       Balanced Accuracy : 0.68672            
##                                              
##        &amp;#39;Positive&amp;#39; Class : yes                
## &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Compute ROC.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;roc_rpart &amp;lt;- 
  pROC::roc(response = temp, 
            predictor = model_rpart_pred[, &amp;quot;yes&amp;quot;])

roc_rpart&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## roc.default(response = temp, predictor = model_rpart_pred[, &amp;quot;yes&amp;quot;])
## 
## Data: model_rpart_pred[, &amp;quot;yes&amp;quot;] in 173032 controls (temp no) &amp;lt; 4435 cases (temp yes).
## Area under the curve: 0.7463&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The ROCAUC is ~74% which is nearly the same as for cross-validated training set. We plot the curve comparing it against the ROC from earlier models.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pROC::plot.roc(x = roc_glm_1, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               col = &amp;quot;green&amp;quot;)

pROC::plot.roc(x = roc_glm_2, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               add = TRUE, col = &amp;quot;blue&amp;quot;)

pROC::plot.roc(x = roc_rpart, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               add = TRUE, col = &amp;quot;orange&amp;quot;)


legend(x = &amp;quot;bottomright&amp;quot;, legend=c(&amp;quot;glm_1 AUC = 0.664&amp;quot;, &amp;quot;glm_2 AUC = 0.7&amp;quot;,
                                   &amp;quot;rpart AUC = 0.74&amp;quot;), 
       col = c(&amp;quot;green&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;orange&amp;quot;), lty = 1, cex = 1.0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-94-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;random-forest-via-randomforest-in-caret&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.11.2&lt;/span&gt; Random forest via randomForest in caret&lt;/h3&gt;
&lt;p&gt;For random forests, the library &lt;a href=&#34;https://cran.r-project.org/web/packages/randomForest/index.html&#34;&gt;randomForest&lt;/a&gt; is used. Tuning parameter is &lt;code&gt;mtry&lt;/code&gt; which is the number of variables randomly sampled as candidates at each split. For computationally reasons, we limit the number of trees via &lt;code&gt;caret::trainControl(ntree))&lt;/code&gt;, the number of folds via &lt;code&gt;caret::trainControl(number))&lt;/code&gt; and the resampling iterations via &lt;code&gt;caret::trainControl(repeats))&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(randomForest)

ctrl &amp;lt;- 
  trainControl(method = &amp;quot;repeatedcv&amp;quot;, 
               number = 5,
               repeats = 1,
               classProbs = TRUE,
               summaryFunction = twoClassSummary,
               verboseIter = FALSE,
               allowParallel = TRUE)

model_rf &amp;lt;-
  train_down %&amp;gt;%
  select(model_vars) %&amp;gt;%
  mutate(default = as.factor(ifelse(default == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
  filter(complete.cases(.)) %&amp;gt;%
  train(default ~ .,
        data = .,
        method = &amp;#39;rf&amp;#39;,
        ntree = 10,
        metric = &amp;quot;ROC&amp;quot;,
        preProc = c(&amp;quot;center&amp;quot;, &amp;quot;scale&amp;quot;),
        trControl = ctrl)

model_rf&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Random Forest 
## 
## 35488 samples
##     9 predictor
##     2 classes: &amp;#39;no&amp;#39;, &amp;#39;yes&amp;#39; 
## 
## Pre-processing: centered (39), scaled (39) 
## Resampling: Cross-Validated (5 fold, repeated 1 times) 
## Summary of sample sizes: 28391, 28390, 28390, 28391, 28390 
## Resampling results across tuning parameters:
## 
##   mtry  ROC        Sens       Spec     
##    2    0.6877044  0.5636517  0.7134646
##   20    0.7041407  0.6133559  0.6806064
##   39    0.6982071  0.6123415  0.6655027
## 
## ROC was used to select the optimal model using  the largest value.
## The final value used for the model was mtry = 20.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see that ROCAUC is ~ 70% at mtry = 20. We again visualize but since it is a combination of many trees, the plot will look different.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(model_rf$finalModel)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-96-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The error would most likely go further down if we had allowed more trees.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_rf_pred &amp;lt;- 
  predict(model_rf, 
          newdata = test %&amp;gt;% 
            select(model_vars) %&amp;gt;%
            mutate(default = as.factor(ifelse(default == TRUE, 
                                              &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
            filter(complete.cases(.)), 
          type = &amp;quot;prob&amp;quot;)

caret::confusionMatrix(
  data = ifelse(model_rf_pred[, &amp;quot;yes&amp;quot;] &amp;gt; 0.5, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;), 
  reference = as.factor(ifelse(test[complete.cases(test[, model_vars]), 
                                    &amp;quot;default&amp;quot;] == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;)),
  positive = &amp;quot;yes&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Confusion Matrix and Statistics
## 
##           Reference
## Prediction     no    yes
##        no  114693   1723
##        yes  58339   2712
##                                              
##                Accuracy : 0.6616             
##                  95% CI : (0.6594, 0.6638)   
##     No Information Rate : 0.975              
##     P-Value [Acc &amp;gt; NIR] : 1                  
##                                              
##                   Kappa : 0.038              
##  Mcnemar&amp;#39;s Test P-Value : &amp;lt;0.0000000000000002
##                                              
##             Sensitivity : 0.61150            
##             Specificity : 0.66284            
##          Pos Pred Value : 0.04442            
##          Neg Pred Value : 0.98520            
##              Prevalence : 0.02499            
##          Detection Rate : 0.01528            
##    Detection Prevalence : 0.34401            
##       Balanced Accuracy : 0.63717            
##                                              
##        &amp;#39;Positive&amp;#39; Class : yes                
## &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Compute ROC.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;roc_rf &amp;lt;- 
  pROC::roc(response = temp, 
            predictor = model_rf_pred[, &amp;quot;yes&amp;quot;])

roc_rf&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## roc.default(response = temp, predictor = model_rf_pred[, &amp;quot;yes&amp;quot;])
## 
## Data: model_rf_pred[, &amp;quot;yes&amp;quot;] in 173032 controls (temp no) &amp;lt; 4435 cases (temp yes).
## Area under the curve: 0.7021&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As the ROCAUC is not better than before, we will not plot it against earlier models.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;stochastic-gradient-boosting-via-gbm-in-caret&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.11.3&lt;/span&gt; Stochastic Gradient Boosting via gbm in caret&lt;/h3&gt;
&lt;p&gt;For Stochastic Gradient Boosting, the library &lt;a href=&#34;https://cran.r-project.org/web/packages/gbm/index.html&#34;&gt;gbm&lt;/a&gt; is used. Tuning parameters are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;n.trees: total number of trees to fit&lt;/li&gt;
&lt;li&gt;interaction.depth: maximum depth of variable interactions&lt;/li&gt;
&lt;li&gt;shrinkage: shrinkage parameter applied to each tree in the expansion&lt;/li&gt;
&lt;li&gt;n.minobsinnode: minimum number of observations in the trees terminal nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For some background, see e.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://statweb.stanford.edu/~jhf/ftp/stobst.pdf&#34;&gt;Stochastic Gradient Boosting, Jerome Friedman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://machinelearningmastery.com/gentle-introduction-gradient-boosting-algorithm-machine-learning/&#34;&gt;A Gentle Introduction to the Gradient Boosting Algorithm for Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(gbm)

ctrl &amp;lt;- 
  trainControl(method = &amp;quot;repeatedcv&amp;quot;, 
               number = 5,
               repeats = 1,
               classProbs = TRUE,
               summaryFunction = twoClassSummary,
               verboseIter = FALSE,
               allowParallel = TRUE)

model_gbm_1 &amp;lt;- 
   train_down %&amp;gt;%
   select(model_vars) %&amp;gt;%
   mutate(default = as.factor(ifelse(default == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
   filter(complete.cases(.)) %&amp;gt;%
   train(default ~ ., 
         data = ., 
         method = &amp;quot;gbm&amp;quot;,
         metric = &amp;quot;ROC&amp;quot;,
         trControl = ctrl,
         preProc = c(&amp;quot;center&amp;quot;, &amp;quot;scale&amp;quot;),
         ## This last option is actually one
         ## for gbm() that passes through
         verbose = FALSE)

model_gbm_1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Stochastic Gradient Boosting 
## 
## 35488 samples
##     9 predictor
##     2 classes: &amp;#39;no&amp;#39;, &amp;#39;yes&amp;#39; 
## 
## Pre-processing: centered (39), scaled (39) 
## Resampling: Cross-Validated (5 fold, repeated 1 times) 
## Summary of sample sizes: 28390, 28391, 28390, 28390, 28391 
## Resampling results across tuning parameters:
## 
##   interaction.depth  n.trees  ROC        Sens       Spec     
##   1                   50      0.7218075  0.4989575  0.7923127
##   1                  100      0.7347236  0.5438152  0.7776594
##   1                  150      0.7376056  0.5922232  0.7565241
##   2                   50      0.7351958  0.5467456  0.7754611
##   2                  100      0.7416798  0.6105945  0.7484081
##   2                  150      0.7480446  0.6190476  0.7499302
##   3                   50      0.7387262  0.6076078  0.7507755
##   3                  100      0.7488759  0.6164553  0.7538746
##   3                  150      0.7515752  0.6082840  0.7630048
## 
## Tuning parameter &amp;#39;shrinkage&amp;#39; was held constant at a value of 0.1
## 
## Tuning parameter &amp;#39;n.minobsinnode&amp;#39; was held constant at a value of 10
## ROC was used to select the optimal model using  the largest value.
## The final values used for the model were n.trees = 150,
##  interaction.depth = 3, shrinkage = 0.1 and n.minobsinnode = 10.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plotting the boosting iterations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(model_gbm_1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: shape&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-100-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Predict.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_gbm_1_pred &amp;lt;- 
  predict(model_gbm_1, 
          newdata = test %&amp;gt;% 
            select(model_vars) %&amp;gt;%
            mutate(default = as.factor(ifelse(default == TRUE, 
                                              &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;))) %&amp;gt;%
            filter(complete.cases(.)), 
          type = &amp;quot;prob&amp;quot;)

caret::confusionMatrix(
  data = ifelse(model_gbm_1_pred[, &amp;quot;yes&amp;quot;] &amp;gt; 0.5, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;), 
  reference = as.factor(ifelse(test[complete.cases(test[, model_vars]), 
                                    &amp;quot;default&amp;quot;] == TRUE, &amp;quot;yes&amp;quot;, &amp;quot;no&amp;quot;)),
  positive = &amp;quot;yes&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Confusion Matrix and Statistics
## 
##           Reference
## Prediction     no    yes
##        no  104238   1033
##        yes  68794   3402
##                                              
##                Accuracy : 0.6065             
##                  95% CI : (0.6043, 0.6088)   
##     No Information Rate : 0.975              
##     P-Value [Acc &amp;gt; NIR] : 1                  
##                                              
##                   Kappa : 0.0438             
##  Mcnemar&amp;#39;s Test P-Value : &amp;lt;0.0000000000000002
##                                              
##             Sensitivity : 0.76708            
##             Specificity : 0.60242            
##          Pos Pred Value : 0.04712            
##          Neg Pred Value : 0.99019            
##              Prevalence : 0.02499            
##          Detection Rate : 0.01917            
##    Detection Prevalence : 0.40681            
##       Balanced Accuracy : 0.68475            
##                                              
##        &amp;#39;Positive&amp;#39; Class : yes                
## &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;roc_gbm_1 &amp;lt;- 
  pROC::roc(response = temp, 
            predictor = model_gbm_1_pred[, &amp;quot;yes&amp;quot;])

roc_gbm_1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## roc.default(response = temp, predictor = model_gbm_1_pred[, &amp;quot;yes&amp;quot;])
## 
## Data: model_gbm_1_pred[, &amp;quot;yes&amp;quot;] in 173032 controls (temp no) &amp;lt; 4435 cases (temp yes).
## Area under the curve: 0.7516&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The ROCAUC is ~75% which is nearly the same as for cross-validated training set. We plot the curve comparing it against the ROC from the simple model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pROC::plot.roc(x = roc_glm_1, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               col = &amp;quot;green&amp;quot;)

pROC::plot.roc(x = roc_glm_2, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               add = TRUE, col = &amp;quot;blue&amp;quot;)

pROC::plot.roc(x = roc_rpart, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               add = TRUE, col = &amp;quot;orange&amp;quot;)

pROC::plot.roc(x = roc_gbm_1, legacy.axes = FALSE, xlim = c(1, 0), asp = NA,
               add = TRUE, col = &amp;quot;brown&amp;quot;)

legend(x = &amp;quot;bottomright&amp;quot;, legend=c(&amp;quot;glm_1 AUC = 0.664&amp;quot;, &amp;quot;glm_2 AUC = 0.7&amp;quot;,
                                   &amp;quot;rpart AUC = 0.74&amp;quot;, &amp;quot;gbm AUC = 0.753&amp;quot;), 
       col = c(&amp;quot;green&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;orange&amp;quot;, &amp;quot;brown&amp;quot;), lty = 1, cex = 1.0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2017-10-23-lending-club-loan-data-in-r_files/figure-html/unnamed-chunk-103-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;further-resources&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;13&lt;/span&gt; Further Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2017/08/skilltest-logistic-regression/&#34;&gt;30 Questions to test your understanding of Logistic Regression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dpmartin42.github.io/blogposts/r/imbalanced-classes-part-1&#34;&gt;Handling Class Imbalance with R and Caret - An Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stats.stackexchange.com/questions/136040/stepwise-model-selection-in-logistic-regression-in-r&#34;&gt;Stepwise Model Selection in Logistic Regression in R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://topepo.github.io/caret/index.html&#34;&gt;The caret Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://amunategui.github.io/binary-outcome-modeling/&#34;&gt;Modeling 101 - Predicting Binary Outcomes with R, gbm, glmnet, and {caret}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiring.github.io/machine_learning/2017/01/15/rfe_ga_post&#34;&gt;Feature Selection in Machine Learning (Breast Cancer Datasets)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiring.github.io/machine_learning/2017/03/31/webinar_code&#34;&gt;Building meaningful machine learning models for disease prediction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rpubs.com/ryankelly/reg&#34;&gt;Linear Model Selection &amp;amp; Regularization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.lendingmemo.com/lending-club-prosper-default-rates/&#34;&gt;Default Rates at Lending Club &amp;amp; Prosper: When Loans Go Bad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nbviewer.jupyter.org/gist/odubno/0b767a47f75adb382246&#34;&gt;Loan Data (2007-2011) From Lending Club&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio-pubs-static.s3.amazonaws.com/115829_32417d32dbce41eab3eeaf608a0eef9d.html&#34;&gt;JFdarre Project 1: Lending Club’s data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio-pubs-static.s3.amazonaws.com/203258_d20c1a34bc094151a0a1e4f4180c5f6f.html&#34;&gt;Predict LendingClub’s Loan Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html&#34;&gt;Making Maps with R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shuhelicopter.github.io/Data_Exploratory_Analysis_of_LC.html&#34;&gt;Exploratory Data Analysis of Lending Club Issued Loans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cs229.stanford.edu/proj2015/199_report.pdf&#34;&gt;Predicting Default Risk of Lending Club Loans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
